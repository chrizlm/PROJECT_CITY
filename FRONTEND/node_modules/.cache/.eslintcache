[{"/Users/christopherlijoodi/Desktop/CITYPARK/src/index.js":"1","/Users/christopherlijoodi/Desktop/CITYPARK/src/App.js":"2","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SideBar/SideNavBar.js":"3","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SideBar/SideMenu.js":"4","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/LoginDialog.js":"5","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SignIn.js":"6","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Home.js":"7","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Bookings.js":"8","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/About.js":"9","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Support.js":"10","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/severity-pill.js":"11","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/UseForm.js":"12","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Controls.js":"13","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/MotoristService.js":"14","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/BookingTime.js":"15","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/BookingDate.js":"16","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Dropdown.js":"17","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/BasicSelect.js":"18","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/MuiButton.js":"19","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/http-common.js":"20","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/DatePicker.js":"21","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Checkbox.js":"22","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/MuiSelect.js":"23","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/RadioGroup.js":"24","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Input.js":"25","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Registration.js":"26","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Time.js":"27","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/ParkingLot.js":"28","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/ParkingLotService.js":"29","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/http-common.js":"30","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/PTable.js":"31","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/ParkingDetailService.js":"32","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/DataService.js":"33","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/Popups.js":"34","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/PageHeader.js":"35","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/Notification.js":"36","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/ConfirmDialog.js":"37","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/UseTable.js":"38","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/AppUserService.js":"39","/Users/christopherlijoodi/Desktop/CITYPARK/src/usercomponent/AppNavedPage.js":"40","/Users/christopherlijoodi/Desktop/CITYPARK/src/usercomponent/Login.js":"41","/Users/christopherlijoodi/Desktop/CITYPARK/src/usercomponent/Home.js":"42","/Users/christopherlijoodi/Desktop/CITYPARK/src/usercomponent/Register.js":"43","/Users/christopherlijoodi/Desktop/CITYPARK/src/usercomponent/RestrictedMotorist.js":"44","/Users/christopherlijoodi/Desktop/CITYPARK/src/usercomponent/Profile.js":"45","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/auth.service.js":"46","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/user.service.js":"47","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/auth-header.js":"48","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/GuardedRoute.js":"49","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SideBar/AttendantSideMenu.js":"50","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SideBar/AdminSideMenu.js":"51","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AttendantRegistration.js":"52","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/AdminServices.js":"53","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/ParkingLotDetails.js":"54","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AttendantPage.js":"55","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/BookingDetails.js":"56","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/BookingService.js":"57","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/ParkingLotsWithDatesService.js":"58","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/MessagesSettings.js":"59","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AccountSettingsAdmin.js":"60","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AccountSettingsAttendant.js":"61","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AccountSettingsMotorist.js":"62","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/AttendantService.js":"63","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/PagesRoutes.js":"64","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/index.js":"65","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/App.js":"66","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/PagesRoutes.js":"67","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/Home.js":"68","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/About.js":"69","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/Bookings.js":"70","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/Support.js":"71","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/AttendantRegistration.js":"72","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/ParkingLot.js":"73","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/AttendantPage.js":"74","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/BookingDetails.js":"75","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/ParkingLotDetails.js":"76","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/AccountSettingsAdmin.js":"77","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/AccountSettingsAttendant.js":"78","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/AccountSettingsMotorist.js":"79","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/SideBar/SideNavBar.js":"80","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/auth.service.js":"81","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/AppUserService.js":"82","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/ParkingLotService.js":"83","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/UseForm.js":"84","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/ParkingDetailService.js":"85","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/DataService.js":"86","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/ParkingLotsWithDatesService.js":"87","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/MotoristService.js":"88","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/AdminServices.js":"89","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/BookingService.js":"90","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/Controls.js":"91","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/http-common.js":"92","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/DatePicker.js":"93","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/Time.js":"94","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/Dropdown.js":"95","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/BookingTime.js":"96","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/BookingDate.js":"97","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/BasicSelect.js":"98","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/MuiButton.js":"99","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/Checkbox.js":"100","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/MuiSelect.js":"101","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/RadioGroup.js":"102","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/Input.js":"103","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/SideBar/AdminSideMenu.js":"104","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/SideBar/AttendantSideMenu.js":"105","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/AttendantService.js":"106","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/MotoristRegistration.js":"107","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/SideBar/MotoristSideMenu.js":"108","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/SideBar/SideMenu.js":"109","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/BlacklistRegistration.js":"110","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/BlackListAdmin.js":"111","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/BlackListServices.js":"112"},{"size":268,"mtime":1639568179301,"results":"113","hashOfConfig":"114"},{"size":163,"mtime":1643189917302,"results":"115","hashOfConfig":"114"},{"size":9289,"mtime":1642401974292,"results":"116","hashOfConfig":"114"},{"size":1139,"mtime":1641990451781,"results":"117","hashOfConfig":"114"},{"size":1632,"mtime":1637069484422,"results":"118","hashOfConfig":"114"},{"size":2993,"mtime":1639596502555,"results":"119","hashOfConfig":"114"},{"size":7711,"mtime":1642497086254,"results":"120","hashOfConfig":"114"},{"size":18594,"mtime":1642514519022,"results":"121","hashOfConfig":"114"},{"size":146,"mtime":1641330231906,"results":"122","hashOfConfig":"114"},{"size":151,"mtime":1637069493735,"results":"123","hashOfConfig":"114"},{"size":1272,"mtime":1637069484504,"results":"124","hashOfConfig":"114"},{"size":1123,"mtime":1639805168872,"results":"125","hashOfConfig":"114"},{"size":593,"mtime":1637314499124,"results":"126","hashOfConfig":"114"},{"size":707,"mtime":1642084340727,"results":"127","hashOfConfig":"114"},{"size":685,"mtime":1637237953802,"results":"128","hashOfConfig":"114"},{"size":855,"mtime":1637069484463,"results":"129","hashOfConfig":"114"},{"size":2748,"mtime":1637069484476,"results":"130","hashOfConfig":"114"},{"size":1063,"mtime":1637227254302,"results":"131","hashOfConfig":"114"},{"size":658,"mtime":1637069484483,"results":"132","hashOfConfig":"114"},{"size":174,"mtime":1637069484501,"results":"133","hashOfConfig":"114"},{"size":1784,"mtime":1637319407888,"results":"134","hashOfConfig":"114"},{"size":648,"mtime":1637069484468,"results":"135","hashOfConfig":"114"},{"size":841,"mtime":1637069484494,"results":"136","hashOfConfig":"114"},{"size":863,"mtime":1637069484496,"results":"137","hashOfConfig":"114"},{"size":414,"mtime":1637069484478,"results":"138","hashOfConfig":"114"},{"size":7637,"mtime":1641378496620,"results":"139","hashOfConfig":"114"},{"size":726,"mtime":1637155682263,"results":"140","hashOfConfig":"114"},{"size":10378,"mtime":1641929536479,"results":"141","hashOfConfig":"114"},{"size":843,"mtime":1641370582808,"results":"142","hashOfConfig":"114"},{"size":514,"mtime":1642411158622,"results":"143","hashOfConfig":"114"},{"size":2726,"mtime":1637829194685,"results":"144","hashOfConfig":"114"},{"size":1134,"mtime":1642511627791,"results":"145","hashOfConfig":"114"},{"size":644,"mtime":1641975580439,"results":"146","hashOfConfig":"114"},{"size":1364,"mtime":1637069484437,"results":"147","hashOfConfig":"114"},{"size":1382,"mtime":1637069484435,"results":"148","hashOfConfig":"114"},{"size":889,"mtime":1637069484424,"results":"149","hashOfConfig":"114"},{"size":2122,"mtime":1637069484401,"results":"150","hashOfConfig":"114"},{"size":3596,"mtime":1637069484454,"results":"151","hashOfConfig":"114"},{"size":1039,"mtime":1641371655090,"results":"152","hashOfConfig":"114"},{"size":4122,"mtime":1639594680752,"results":"153","hashOfConfig":"114"},{"size":4111,"mtime":1639575585251,"results":"154","hashOfConfig":"114"},{"size":797,"mtime":1639594440215,"results":"155","hashOfConfig":"114"},{"size":5847,"mtime":1639594342376,"results":"156","hashOfConfig":"114"},{"size":906,"mtime":1639594461258,"results":"157","hashOfConfig":"114"},{"size":1023,"mtime":1639594413610,"results":"158","hashOfConfig":"114"},{"size":869,"mtime":1641218152317,"results":"159","hashOfConfig":"114"},{"size":391,"mtime":1639570581733,"results":"160","hashOfConfig":"114"},{"size":232,"mtime":1639569841103,"results":"161","hashOfConfig":"114"},{"size":326,"mtime":1640001539939,"results":"162","hashOfConfig":"114"},{"size":1211,"mtime":1641990451790,"results":"163","hashOfConfig":"114"},{"size":1747,"mtime":1641990451752,"results":"164","hashOfConfig":"114"},{"size":6000,"mtime":1641382207671,"results":"165","hashOfConfig":"114"},{"size":1908,"mtime":1642065448487,"results":"166","hashOfConfig":"114"},{"size":8106,"mtime":1641459660909,"results":"167","hashOfConfig":"114"},{"size":5006,"mtime":1641387327304,"results":"168","hashOfConfig":"114"},{"size":5625,"mtime":1641412773374,"results":"169","hashOfConfig":"114"},{"size":867,"mtime":1641371495933,"results":"170","hashOfConfig":"114"},{"size":680,"mtime":1641813443774,"results":"171","hashOfConfig":"114"},{"size":4464,"mtime":1641985878078,"results":"172","hashOfConfig":"114"},{"size":7393,"mtime":1642088228022,"results":"173","hashOfConfig":"114"},{"size":7393,"mtime":1642088555360,"results":"174","hashOfConfig":"114"},{"size":7279,"mtime":1642088977261,"results":"175","hashOfConfig":"114"},{"size":503,"mtime":1642084340744,"results":"176","hashOfConfig":"114"},{"size":2796,"mtime":1643189845004,"results":"177","hashOfConfig":"114"},{"size":268,"mtime":1639568179301,"results":"178","hashOfConfig":"179"},{"size":163,"mtime":1643189917302,"results":"180","hashOfConfig":"179"},{"size":2288,"mtime":1643893045499,"results":"181","hashOfConfig":"179"},{"size":6039,"mtime":1643978157113,"results":"182","hashOfConfig":"179"},{"size":824,"mtime":1643460798478,"results":"183","hashOfConfig":"179"},{"size":16411,"mtime":1644065878646,"results":"184","hashOfConfig":"179"},{"size":4294,"mtime":1644066298002,"results":"185","hashOfConfig":"179"},{"size":5421,"mtime":1644065521318,"results":"186","hashOfConfig":"179"},{"size":9502,"mtime":1644065987219,"results":"187","hashOfConfig":"179"},{"size":10384,"mtime":1644065607462,"results":"188","hashOfConfig":"179"},{"size":4966,"mtime":1644065462291,"results":"189","hashOfConfig":"179"},{"size":6530,"mtime":1644066028322,"results":"190","hashOfConfig":"179"},{"size":6785,"mtime":1643383311227,"results":"191","hashOfConfig":"179"},{"size":6784,"mtime":1643383394077,"results":"192","hashOfConfig":"179"},{"size":6670,"mtime":1643383487731,"results":"193","hashOfConfig":"179"},{"size":10182,"mtime":1643450667292,"results":"194","hashOfConfig":"179"},{"size":205,"mtime":1643196397694,"results":"195","hashOfConfig":"179"},{"size":252,"mtime":1643369555698,"results":"196","hashOfConfig":"179"},{"size":843,"mtime":1641370582808,"results":"197","hashOfConfig":"179"},{"size":1123,"mtime":1639805168872,"results":"198","hashOfConfig":"179"},{"size":1134,"mtime":1642511627791,"results":"199","hashOfConfig":"179"},{"size":644,"mtime":1641975580439,"results":"200","hashOfConfig":"179"},{"size":545,"mtime":1643195953796,"results":"201","hashOfConfig":"179"},{"size":707,"mtime":1642084340727,"results":"202","hashOfConfig":"179"},{"size":1908,"mtime":1642065448487,"results":"203","hashOfConfig":"179"},{"size":867,"mtime":1641371495933,"results":"204","hashOfConfig":"179"},{"size":593,"mtime":1637314499124,"results":"205","hashOfConfig":"179"},{"size":514,"mtime":1642411158622,"results":"206","hashOfConfig":"179"},{"size":1784,"mtime":1637319407888,"results":"207","hashOfConfig":"179"},{"size":726,"mtime":1637155682263,"results":"208","hashOfConfig":"179"},{"size":2748,"mtime":1637069484476,"results":"209","hashOfConfig":"179"},{"size":685,"mtime":1637237953802,"results":"210","hashOfConfig":"179"},{"size":855,"mtime":1637069484463,"results":"211","hashOfConfig":"179"},{"size":1063,"mtime":1637227254302,"results":"212","hashOfConfig":"179"},{"size":658,"mtime":1637069484483,"results":"213","hashOfConfig":"179"},{"size":648,"mtime":1637069484468,"results":"214","hashOfConfig":"179"},{"size":841,"mtime":1637069484494,"results":"215","hashOfConfig":"179"},{"size":863,"mtime":1637069484496,"results":"216","hashOfConfig":"179"},{"size":414,"mtime":1637069484478,"results":"217","hashOfConfig":"179"},{"size":2190,"mtime":1643635814584,"results":"218","hashOfConfig":"179"},{"size":1306,"mtime":1644065144297,"results":"219","hashOfConfig":"179"},{"size":742,"mtime":1643990238491,"results":"220","hashOfConfig":"179"},{"size":5111,"mtime":1644065909724,"results":"221","hashOfConfig":"179"},{"size":1066,"mtime":1643362647292,"results":"222","hashOfConfig":"179"},{"size":608,"mtime":1643893092037,"results":"223","hashOfConfig":"179"},{"size":9571,"mtime":1644065758764,"results":"224","hashOfConfig":"179"},{"size":8118,"mtime":1644065713941,"results":"225","hashOfConfig":"179"},{"size":508,"mtime":1643635465547,"results":"226","hashOfConfig":"179"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},"oi5nsi",{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"229"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"229"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"229"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"229"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"229"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"229"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"229"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"229"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"229"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"229"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"229"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"229"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"229"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"229"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"229"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"229"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"229"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"229"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"229"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"229"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"229"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"229"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"229"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"229"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"229"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"229"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"229"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"229"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"229"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},"1nl7tpu",{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"389"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"389"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"389"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"389"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"389"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"389"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"389"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"389"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"389"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"389"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"389"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"389"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"389"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"389"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"389"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"389"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"389"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"389"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"389"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"389"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"389"},"/Users/christopherlijoodi/Desktop/CITYPARK/src/index.js",[],["495","496"],"/Users/christopherlijoodi/Desktop/CITYPARK/src/App.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SideBar/SideNavBar.js",["497","498","499","500","501","502","503","504","505","506","507"],"\nimport AuthService from \"../../service/auth.service\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport {useEffect, useState} from \"react\";\nimport { SideMenu } from \"./SideMenu\";\nimport {AttendantSideMenu} from \"./AttendantSideMenu\";\nimport {AdminSideMenu} from \"./AdminSideMenu\";\nimport { Link } from \"react-router-dom\";\nimport * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\nimport Home from \"../../pages/Home\";\nimport { useHistory } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: `-${drawerWidth}px`,\n        ...(open && {\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginLeft: 0,\n        }),\n    }),\n);\n\nconst AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n    transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: `${drawerWidth}px`,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }),\n}));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n}));\n\nexport default function SideNavBar() {\n\n\n    //from prev code\n    const [isAuthenticated, setIsAuthenticated] = React.useState(false);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const[motoristPage, setMotoristPage] = useState(false);\n    const[attendantPage, setAttendantPage] = useState(false);\n    const[adminPage, setAdminPage] = useState(false);\n    const [currentUser, setCurrentUser] = useState(undefined);\n\n    const history = useHistory();\n\n\n    useEffect(() =>{\n        const user = AuthService.getCurrentUser();\n\n        //const isAdmin = JSON.parse(atob(user.split('.')[1])).role === 'ROLE_MOTORIST';\n\n        if(user){\n            setCurrentUser(user);\n            setMotoristPage(JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_MOTORIST');\n            setAttendantPage(JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ATTENDANT');\n            setAdminPage(JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN');\n        }\n    }, []);\n\n\n    const login = () =>{\n        setIsAuthenticated(true);\n        console.log(\"loggedInUser:\" + isAuthenticated);\n    }\n\n    const logout = () =>{\n        setOpen(false);\n        setIsAuthenticated(false);\n        console.log(\"loggedInUser:\" + isAuthenticated);\n        history.push(\"./\");\n        window.location.reload(true);\n        AuthService.logout();\n    }\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n\n\n\n\n\n\n\n\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <Box sx={{ display: 'flex' }}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" open={open}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        sx={{ mr: 2, ...(open && { display: 'none' }) }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap component=\"div\">\n                        Parking App\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                sx={{\n                    width: drawerWidth,\n                    flexShrink: 0,\n                    '& .MuiDrawer-paper': {\n                        width: drawerWidth,\n                        boxSizing: 'border-box',\n                    },\n                }}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n            >\n                <DrawerHeader>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </DrawerHeader>\n                <Divider />\n                <div>\n\n                    {motoristPage && (\n\n                        SideMenu.map((menuitem, index) => {\n                            return (\n                                <List>\n                                    <div key={index}>\n                                        <MenuItem onClick={handleDrawerClose}>\n                                            <li key={index}>\n                                                <Link to={menuitem.path}>\n                                                    {menuitem.icon}\n                                                    {menuitem.title}\n                                                </Link>\n                                            </li>\n                                        </MenuItem>\n                                    </div>\n                                </List>\n                            );\n                        })\n                    )\n                    }\n                    {attendantPage && (\n                        AttendantSideMenu.map((menuitem, index) => {\n                            return (\n                                <List>\n                                    <div key={index}>\n                                        <MenuItem onClick={handleDrawerClose}>\n                                            <li key={index}>\n                                                <Link to={menuitem.path}>\n                                                    {menuitem.icon}\n                                                    {menuitem.title}\n                                                </Link>\n                                            </li>\n                                        </MenuItem>\n                                    </div>\n                                </List>\n                            );\n                        }))\n                    }\n                    {adminPage && (\n                        AdminSideMenu.map((menuitem, index) => {\n                            return (\n                                <List>\n                                    <div key={index}>\n                                        <MenuItem onClick={handleDrawerClose}>\n                                            <li key={index}>\n                                                <Link to={menuitem.path}>\n                                                    {menuitem.icon}\n                                                    {menuitem.title}\n                                                </Link>\n                                            </li>\n                                        </MenuItem>\n                                    </div>\n                                </List>\n                            );\n                        }))\n                    }\n\n                    <Divider />\n                    <List>\n                        <div><MenuItem onClick={handleDrawerClose}>Profile</MenuItem></div>\n                        <div><MenuItem onClick={handleDrawerClose}>My account</MenuItem></div>\n                        <div><MenuItem onClick={logout}>Logout</MenuItem></div>\n                    </List>\n                </div>\n            </Drawer>\n            <Main open={open}>\n\n            </Main>\n        </Box>\n    );\n}\n","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SideBar/SideMenu.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/LoginDialog.js",["508"],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { makeStyles } from '@mui/styles';\nimport SignIn from './SignIn';\nimport { Link } from 'react-router-dom';\n\nconst useStyle = makeStyles({\n    btn : {\n        color : '#fff'\n    },\n    formlogin : {\n      textAlign : 'center',\n    }\n})\n\nexport default function LoginDialog() {\n    const classes = useStyle();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n\n\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={handleClickOpen} className={classes.btn}>\n        Login\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"LOGIN FORM\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\" className={classes.formlogin}>\n            please fill in details\n            <SignIn />\n            if you dont have an account <Link to='/MotoristForm' onClick={handleClose}> <div style={{color:'blue'}}>register</div> </Link>\n          </DialogContentText>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SignIn.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Home.js",["509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526"],"\nimport * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {useState, useEffect} from \"react\";\nimport AppUserService, {login} from \"../service/AppUserService\";\nimport ParkingLotService from \"../service/ParkingLotService\";\nimport {Form, UseForm} from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport AccountSettingsAdmin from \"./AccountSettingsAdmin\";\nimport AccountSettingsAttendant from \"./AccountSettingsAttendant\";\nimport AccountSettingsMotorist from \"./AccountSettingsMotorist\";\nimport { useHistory } from \"react-router-dom\";\nimport About from \"./About\";\nimport ParkPic from \"../components/img/brydon-mccluskey-vMneecAwo34-unsplash.jpg\"\n\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      {' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nconst initialFieldValues = {\n  username: \"\",\n  password: \"\",\n\n};\n\nconst tokenValues ={\n    access_token: \"\",\n    refresh_token: \"\",\n};\n\nexport default function Home() {\n  const [loginDetail, setLoginDetail] = useState(initialFieldValues);\n  const [currentPage, setCurrentPage] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n\n    const history = useHistory();\n  /*\n  const [tokenInfo , setTokenInfo] = useState(tokenValues);\n\n\n    useEffect(() => {\n        localStorage.setItem(\"user\", JSON.stringify(tokenInfo));\n    }, [])\n\n   */\n\n/*\n    const handleSubmit = e =>{\n        e.preventDefault()\n\n        AppUserService.login(values)\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n */\n\n   // const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues);\n\n        const handleInputChange = e =>{\n\n            const {name, value} = e.target\n            setLoginDetail({\n                ...loginDetail,\n                [name]: value,\n            })\n\n        }\n\n    const refreshPage = () =>{\n\n        setCurrentPage(null);\n        setCurrentIndex(-1);\n    }\n\n\n\n      const handleSubmit = (event) => {\n        event.preventDefault();\n         alert(\"logins submitted\");\n\n\n        const data = {\n          username: loginDetail.username,\n          password: loginDetail.password,\n        }\n\n        AppUserService.login(data).then(response => {\n           /*if(response.data){\n                //localStorage.setItem(\"user\", JSON.stringify(response.data));\n            }\n            return response.data;\n\n            */\n\n\n            localStorage.setItem(\"user\", JSON.stringify(response.data));\n            //setTokenInfo(response.data);\n            const isAdmin = JSON.parse(atob(response.data.split('.')[1])).roles[0] === 'ROLE_ADMIN';\n            const isAttendant = JSON.parse(atob(response.data.split('.')[1])).roles[0] === 'ROLE_ATTENDANT';\n            const isMotorist = JSON.parse(atob(response.data.split('.')[1])).roles[0] === 'ROLE_MOTORIST';\n            const email = JSON.parse(atob(response.data.split('.')[1])).sub;\n            console.log(email);\n\n            console.log(isAdmin);\n            console.log(response);\n            refreshPage();\n            history.push(\"./About\");\n            window.location.reload(true);\n           const retrievedPerson = JSON.parse(localStorage.getItem('user'));\n            console.log(retrievedPerson);\n        })\n            .catch(error => {\n                console.log(error)\n            });\n\n\n      };\n\n    const logout = () => {\n        localStorage.removeItem(\"user\");\n    };\n\n    const getCurrentUser = () => {\n        return JSON.parse(localStorage.getItem(\"user\"));\n    };\n\n  const userLogin = (event) =>{\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    AppUserService.login(data).then(response => {\n      console.log(response)\n    })\n        .catch(error => {\n          console.log(error)\n        })\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          /*\n          sx={{\n              backgroundImage: 'url(https://unsplash.com/s/photos/parking)',\n              backgroundRepeat: 'no-repeat',\n            backgroundColor: (t) =>\n              t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n\n          }}\n\n           */\n        >\n            <img src={ParkPic} />\n        </Grid>\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <Box component=\"form\" noValidate  sx={{ mt: 1 }}>\n                <Form onSubmit={handleSubmit}>\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    label=\"Email Address\"\n                    name=\"username\"\n                    value={loginDetail.username}\n                    onChange={handleInputChange}\n                    autoComplete=\"email\"\n                    autoFocus\n                />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    value={loginDetail.password}\n                    onChange={handleInputChange}\n                    autoComplete=\"current-password\"\n                />\n\n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Remember me\"\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n                onClick={handleSubmit}\n              >\n                Sign In\n              </Button>\n                </Form>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"#\" variant=\"body2\">\n                    Forgot password?\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link href=\"/Registration\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n              <Copyright sx={{ mt: 5 }} />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n\n\n","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Bookings.js",["527","528","529","530","531","532","533","534","535","536","537","538","539"],"import PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  Paper,\n  Grid,\n  \n} from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, { useState, useEffect  } from 'react'\nimport axios from \"axios\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport TextField from \"@mui/material/TextField\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from '@mui/lab/DatePicker';\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport ParkingLotService from \"../service/ParkingLotService\";\nimport ParkingDetailService from \"../service/ParkingDetailService\";\nimport DataService from \"../service/DataService\";\nimport moment from \"moment\";\nimport ParkingLotsWithDatesService from \"../service/ParkingLotsWithDatesService\";\nimport AuthService from \"../service/auth.service\";\nimport ConfirmDialog from \"../components/ConfirmDialog\";\nimport Popup from 'reactjs-popup';\nimport SignIn from \"../components/SignIn\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport {Link} from \"react-router-dom\";\nimport Dialog from \"@mui/material/Dialog\";\n\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\",\n  },\n    formlogin : {\n        textAlign : 'center',\n    }\n \n});\n\n\n  const initialFieldValues = {\n    id: 0,\n    numberPlate: \"\",\n    vehicleType: \"\",\n    location: \"\",\n    parkingLotName: \"\",\n    parkingDate: \"\",\n    parkTime: \"\",\n    parkDuration: \"\",\n   \n  };\n\n  const initialSearchDetailsValues = {\n      location: \"\",\n      parkingLotName: \"\",\n      parkingDate: \"\",\n  }\n\n\n\nexport default function Bookings(props) {\n      const [parkDetail, setParkDetail] = useState(initialFieldValues);\n  const [searchParkDetails, setSearchParkDetails] = useState(initialSearchDetailsValues);\n  const [selected, setSelected] = React.useState(\"\");\n  const [value, setValue] = React.useState(new Date());\n  const [parkLot, setParkLot] = React.useState([]);\n  const [searchLocation, setSearchLocation] = React.useState(\"\");\n  const [locationData, setLocationData] = useState([]);\n  const [parkingLotData, setParkingLotData] = useState([]);\n  const [searchParkingLot, setSearchParkingLot] = useState(\"\");\n  const [freeSpace, setFreeSpace] = useState(0);\n    const [open, setOpen] = React.useState(false);\n    const [amount, setAmount] = useState(0);\n\n\n\n\n  useEffect(() =>{\n  retrieveAllParkingLotsAreaData();\n}, []);\n\n  const retrieveAllParkingLotsAreaData = () =>{\n\n    DataService.getLocData().then(response => {\n      setLocationData(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error)\n    })\n\n  }\n\n\n\n\n  const getPkLotList = (item) => {\n\n      if(item === searchParkingLot) {\n          DataService.getParkingData(item).then(response => {\n              setParkingLotData(response.data);\n              console.log(response);\n          }).catch(error => {\n              console.log(error)\n          })\n      }\n\n\n  };\n\n\n\n\n\n\n  useEffect(() =>{\n    retrieveAllParkingLots();\n  }, []);\n\n  const retrieveAllParkingLots = () =>{\n      const currentDate = Date.now();\n      const submittedDate = moment(currentDate).format('YYYY-MM-DD')\n\n      ParkingLotsWithDatesService.getByDateOnly(submittedDate).then(response => {\n      setParkLot(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  const handleInputChange = e =>{\n\n    const {name, value} = e.target\n    setParkDetail({\n      ...parkDetail,\n      [name]: value,\n    })\n\n\n  }\n\n   const handleOptionOne = e =>{\n     const {name, value} = e.target\n     setSelected(value)\n     setParkDetail({\n       ...parkDetail,\n       [name]: value,\n     })\n\n\n     const searchParkingLot = e.target.value;\n     setSearchParkingLot(searchParkingLot);\n\n   }\n\n    const handleOptionOneSearch = e =>{\n        const {name, value} = e.target\n        setSelected(value)\n        setSearchParkDetails({\n            ...searchParkDetails,\n            [name]: value,\n        })\n\n\n        //const searchParkingLot = e.target.value;\n        setSearchParkingLot(e.target.value);\n\n    }\n  const handleOptionTwo = e =>{\n    const {name, value} = e.target\n    setParkDetail({\n      ...parkDetail,\n      [name]: value,\n    })\n  }\n\n    const handleOptionTwoSearch = e =>{\n        const {name, value} = e.target\n        setSearchParkDetails({\n            ...searchParkDetails,\n            [name]: value,\n        })\n    }\n\nconst handleDateChange = (date) =>{\n    setParkDetail({\n      parkingDate: date,\n    })\n  }\n\n\n\n\n\n  const saveParkingDetail = () =>{\n\n    const submittedDate = moment(parkDetail.parkingDate).format('YYYY-MM-DD')\n    const submittedTime = moment(parkDetail.parkTime).format('HH:mm')\n      const user = AuthService.getCurrentUser();\n      const motoristEmail = JSON.parse(atob(user.split('.')[1])).sub;\n    const data ={\n      numberPlate: parkDetail.numberPlate,\n      vehicleType: parkDetail.vehicleType,\n      location: parkDetail.location,\n      parkingLotName: parkDetail.parkingLotName,\n      parkingDate: submittedDate,\n      parkTime: submittedTime,\n      parkDuration: parkDetail.parkDuration,\n\n    };\n      ParkingDetailService.checkAmount(data).then(response => {\n          console.log(response)\n          setAmount(response.data);\n      }).catch(error => {\n          console.log(error)\n      });\n    ParkingDetailService.checkBookingSpace(data).then(response =>{\n      console.log(response)\n      setFreeSpace(response.data);\n\n      if(response.data >= 0){\n        ParkingDetailService.create(data, motoristEmail).then(response => {\n          console.log(response)\n        })\n            .catch(error => {\n              console.log(error)\n            })\n      }else{\n        alert(\"error submitting data\");\n      }\n    })\n\n      setOpen(true);\n\n  }\n\n\n\n\n\n  const onChangeSearchLocation = e =>{\n    const searchLocation = e.target.value;\n    setSearchLocation(searchLocation);\n  }\n\n  const findParkingLotByLocation = () =>{\n\n    ParkingLotService.findByLocation(searchLocation).then(response => {\n      setParkLot(response.data);\n      console.log(response);\n      console.log(setParkLot);\n    })\n        .catch(error => {\n          console.log(error)\n        })\n  }\n\n    const findParkingLotByLocationAndDate = () =>{\n\n        const submittedDate = moment(searchParkDetails.parkingDate).format('YYYY-MM-DD')\n        const data ={\n\n            location: searchParkDetails.location,\n            parkingLotName: searchParkDetails.parkingLotName,\n            parkingDate: submittedDate,\n\n        };\n\n        ParkingLotsWithDatesService.getParkingDataSearch(data).then(response => {\n            setParkLot(response.data);\n            console.log(response);\n            console.log(setParkLot);\n        })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n/*\n  const handleAvailableSpaces = (parkingLotName) =>{\n    DataService.getFreeSpace(parkingLotName).then(response =>{\n      console.log(response);\n      setFreeSpace(response.data)\n\n\n    }).catch(error =>{\n      console.log(error)\n    })\n  }\n  */\n\n\n\n\n\n\n\n\n  const classes = useStyles();\n // const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues, false);\n\n    return (\n      <>\n      <Box\n      sx={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%',\n        },\n      }}\n    >\n      <Paper elevation={3} className={classes.pageContent}>\n        <Avatar /> {/*name*/}\n      <Form onSubmit={saveParkingDetail}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Number Plate\"\n            name=\"numberPlate\"\n            value={parkDetail.numberPlate}\n            onChange={handleInputChange}\n          />\n\n\n\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">CarType</InputLabel>\n            <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select-label\"\n                name=\"vehicleType\"\n                value={parkDetail.vehicleType}\n                label=\"Vehicle Type\"\n                onChange={handleInputChange}\n            >\n              <MenuItem value='Saloon'>Saloon</MenuItem>\n              <MenuItem value='Lorry'>Lorry</MenuItem>\n              <MenuItem value='Trailer'>Trailer</MenuItem>\n            </Select>\n          </FormControl>\n\n\n\n\n\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DatePicker\n                label=\"Basic example\"\n                value={value}\n\n                onChange={(date) => {\n                  setValue(date);\n\n                  setParkDetail({\n                    ...parkDetail,\n                    parkingDate : date,\n                  })\n                }}\n                renderInput={(params) => <TextField {...params}\n                name=\"parkingDate\" value={parkDetail.parkingDate}\n                />}\n            />\n          </LocalizationProvider>\n\n\n\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <TimePicker\n                placeholder=\"Booking Time\"\n                value={value}\n                onChange={(date) => {\n                  setValue(date);\n\n                  setParkDetail({\n                    ...parkDetail,\n                    parkTime : date,\n                  })\n                }}\n                renderInput={(params) => <TextField {...params}\n                    name=\"parkTime\" value={parkDetail.parkTime}/>}\n            />\n          </LocalizationProvider>\n\n\n\n\n\n\n        </Grid>\n\n        <Grid item xs={6}>\n\n\n\n\n          <FormControl fullWidth>\n            <InputLabel id=\"dependant-dropdown\">location</InputLabel>\n            <Select\n                labelId=\"dependant-dropdown\"\n                id=\"dependant-dropdown\"\n                name=\"location\"\n                value={parkDetail.location}\n                label=\"Location\"\n                onChange={handleOptionOne}\n            >{locationData.map((item ,index) =>\n              <MenuItem value={item} key={index}\n                        onClick={getPkLotList({item})}>{item}</MenuItem>)}\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"dropdown\">Park Lot</InputLabel>\n            <Select\n                labelId=\"dropdown\"\n                id=\"dropdown\"\n                name=\"parkingLotName\"\n                value={parkDetail.parkingLotName}\n                label=\"Park Lot\"\n                onChange={handleOptionTwo}>{\n                  parkingLotData.map((item, index) =>\n                  <MenuItem value={item} key={index} >{item}</MenuItem> )\n            }</Select>\n          </FormControl>\n\n\n          <Controls.Input\n              variant=\"outlined\"\n              label=\"Park Duration\"\n              name=\"parkDuration\"\n              value={parkDetail.parkDuration}\n              onChange={handleInputChange}\n          />\n          </Grid>\n        </Grid>\n        <Button variant=\"contained\"\n        fullWidth\n                onClick={saveParkingDetail}\n        >Submit</Button>\n          <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n          >\n              <DialogTitle id=\"alert-dialog-title\">\n                  {\"Parking Charges\"}\n              </DialogTitle>\n              <DialogContent>\n                  <DialogContentText id=\"alert-dialog-description\" className={classes.formlogin}>\n                      Charges for this parking is : {amount}\n                      </DialogContentText>\n                  <Button variant=\"contained\"\n                          fullWidth\n                          onClick={handleClose}\n                  >OK</Button>\n              </DialogContent>\n          </Dialog>\n\n        </Form>\n      </Paper>\n      </Box>\n        <Box\n            sx={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              '& > :not(style)': {\n                m: 1,\n                width: '100%',\n                height: '100%',\n              },\n            }}\n        >\n\n        <Form onSubmit={findParkingLotByLocationAndDate}>\n\n\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DatePicker\n                    label=\"Search Date\"\n                    value={value}\n\n                    onChange={(date) => {\n                        setValue(date);\n\n                        setSearchParkDetails({\n                            ...searchParkDetails,\n                            parkingDate : date,\n                        })\n                    }}\n                    renderInput={(params) => <TextField {...params}\n                                                        name=\"parkingDate\" value={searchParkDetails.parkingDate}\n                    />}\n                />\n            </LocalizationProvider>\n\n            <FormControl fullWidth>\n                <InputLabel id=\"dependant-dropdown\">location</InputLabel>\n                <Select\n                    labelId=\"dependant-dropdown\"\n                    id=\"dependant-dropdown\"\n                    name=\"location\"\n                    value={searchParkDetails.location}\n                    label=\"Location\"\n                    onChange={handleOptionOneSearch}\n                >{locationData.map((item ,index) =>\n                    <MenuItem value={item} key={index}\n                              onClick={getPkLotList(item)}>{item}</MenuItem>)}\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"dropdown\">Park Lot</InputLabel>\n                <Select\n                    labelId=\"dropdown\"\n                    id=\"dropdown\"\n                    name=\"parkingLotName\"\n                    value={searchParkDetails.parkingLotName}\n                    label=\"Park Lot\"\n                    onChange={handleOptionTwoSearch}>{\n                    parkingLotData.map((item, index) =>\n                        <MenuItem value={item} key={index} >{item}</MenuItem> )\n                }</Select>\n            </FormControl>\n\n          <FormControl fullWidth>\n\n              <Button variant=\"contained\"\n                      fullWidth\n                      onClick={findParkingLotByLocationAndDate}\n              >Search</Button>\n\n\n\n          </FormControl>\n\n\n\n          <div align=\"right\">\n            <Button variant=\"contained\"\n                    onClick={retrieveAllParkingLots}>Today</Button>\n          </div>\n\n        </Form>\n\n\n\n        <Card {...props}>\n    <CardHeader title=\"Parking lots\" />\n\n          <PerfectScrollbar>\n            <Box sx={{ minWidth: 800 }}>\n              <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n\n                    <TableCell>\n                      parkingLotName\n                    </TableCell>\n                    <TableCell>\n                      totalParkingSpaces\n                    </TableCell>\n                    <TableCell>\n                      AvailableSpaces\n                    </TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    parkLot.map((park) =>(\n\n                        <TableRow\n                            hover\n                            key={park.parkingLotId}\n                        >\n\n                          <TableCell>\n                            {park.parkingLotName}\n                          </TableCell>\n                          <TableCell>\n                            {park.totalCapacity}\n                          </TableCell>\n                          <TableCell>\n                            {park.availableSpace}\n                          </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </PerfectScrollbar>\n\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end',\n        p: 2\n      }}\n    >\n      <Button\n        color=\"primary\"\n        endIcon={<ArrowRightIcon fontSize=\"small\" />}\n        size=\"small\"\n        variant=\"text\"\n      >\n        View all\n      </Button>\n    </Box>\n\n  </Card>\n        </Box>\n  </>\n    )\n}\n\n\n\n/*\n <PerfectScrollbar>\n      <Box sx={{ minWidth: 800 }}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                parkingLotId\n              </TableCell>\n              <TableCell>\n                parkingLotName\n              </TableCell>\n              <TableCell>\n                totalParkingSpaces\n              </TableCell>\n              <TableCell>\n                AvailableSpaces\n              </TableCell>\n              <TableCell>\n                Book\n              </TableCell>\n\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              parkLot.map((park) =>(\n\n                <TableRow\n                hover\n                key={park.parkingLotId}\n                >\n                  <TableCell>\n                    {park.parkingLotId}\n                  </TableCell>\n                  <TableCell>\n                    {park.parkingLotName}\n                  </TableCell>\n                  <TableCell>\n                    {park.totalParkingSpaces}\n                  </TableCell>\n                  <TableCell>\n                    {park.availableSpace}\n                  </TableCell>\n\n                  <TableCell>\n\n                  </TableCell>\n\n\n\n                  <TableCell>\n                    <Button>Book</Button>\n                  </TableCell>\n                </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Box>\n    </PerfectScrollbar>\n */","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/About.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Support.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/severity-pill.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/UseForm.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Controls.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/service/MotoristService.js",["540"],"import http from \"./http-common\"\n\nconst changePassword = data =>{\n    return http.put(\"/apiv1/motorist/updatePassword\", data);\n}\n\nconst getMotoristInfo = email =>{\n    return http.get(`/apiv1/motorist/get/${email}`);\n}\n\nconst registerMotorist = data =>{\n    return http.post(\"/apiv1/motorist/save\", data);\n}\n\nconst getMotorist = id =>{\n    return http.get(`/apiv1/motorist/getDetails/${id}`);\n}\n\nconst updateMotorist = data =>{\n    return http.put(\"/apiv1/motorist/update\", data);\n}\n\nconst deleteMotorist = id =>{\n    return http.delete(`/apiv1/motorist/${id}`);\n}\n\n\n\nexport default {\n    changePassword,\n    getMotoristInfo,\n    registerMotorist,\n    getMotorist,\n    updateMotorist,\n    deleteMotorist,\n};","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/BookingTime.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/BookingDate.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Dropdown.js",["541","542"],"import React, { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nconst Dropdown = () => {\n  const [area, setArea] = React.useState(\"\");\n  const [parklot, setParklot] = React.useState(\"\");\n  /** \"selected\" here is state variable which will hold the\n   * value of currently selected dropdown.\n   */\n  const [selected, setSelected] = React.useState(\"\");\n\n  /** Function that will set different values to state variable\n   * based on which dropdown is selected\n   */\n  const changeSelectOptionHandler = (event) => {\n    setSelected(event.target.value);\n    setArea(event.target.value);\n  };\n\n  const handleChange = (event) => {\n    setParklot(event.target.value);\n  };\n\n  /** Different arrays for different dropdowns */\n  const algorithm = [\n    \"Searching Algorithm\",\n    \"Sorting Algorithm\",\n    \"Graph Algorithm\",\n  ];\n  const language = [\"C++\", \"Java\", \"Python\", \"C#\"];\n  const dataStructure = [\"Arrays\", \"LinkedList\", \"Stack\", \"Queue\"];\n\n  /** Type variable to store different array for different dropdown */\n  let type = null;\n\n  /** This will be used to create set of options that user will see */\n  let options = null;\n\n  /** Setting Type variable according to dropdown */\n  if (selected === \"Algorithm\") {\n    type = algorithm;\n  } else if (selected === \"Language\") {\n    type = language;\n  } else if (selected === \"Data Structure\") {\n    type = dataStructure;\n  }\n\n  /** If \"Type\" is null or undefined then options will be null,\n   * otherwise it will create a options iterable based on our array\n   */\n  if (type) {\n    options = type.map((el) => (<MenuItem key={el} value={el}>{el}</MenuItem>));\n  }\n  return (\n    <Box sx={{ minWidth: 120 }}>\n      <FormControl fullWidth>\n        <InputLabel id=\"dependant-dropdown\">Area</InputLabel>\n        <Select\n          labelId=\"dependant-dropdown\"\n          id=\"dependant-dropdown\"\n          value={area}\n          label=\"Area\"\n          onChange={changeSelectOptionHandler}\n        >\n          <MenuItem value='Choose...'>Choose...</MenuItem>\n          <MenuItem value='Algorithm'>Algorithm</MenuItem>\n          <MenuItem value='Language'>Language</MenuItem>\n          <MenuItem value='Data Structure'>Data Structure</MenuItem>\n        </Select>\n        </FormControl>\n        <FormControl>\n        <InputLabel id=\"dropdown\">Park Lot</InputLabel>\n        <Select\n        labelId=\"dropdown\"\n        id=\"dropdown\"\n        value={parklot}\n        label=\"Parklot\"\n        onChange={handleChange}>{options}</Select>\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default Dropdown;\n","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/BasicSelect.js",["543","544","545","546"],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nexport default function BasicSelect(props) {\n  const [car, setCar] = React.useState('');\n\n  const handleChange = (event) => {\n    setCar(event.target.value);\n  };\n\n  const{name, value, label, onChange, error=null, options} = props;\n  return (\n    <Box sx={{ minWidth: 120 }}>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">CarType</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          name={name}\n          value={car}\n          label={label}\n          onChange={handleChange}\n        >\n          <MenuItem value='Saloon'>Saloon</MenuItem>\n          <MenuItem value='Lorry'>Lorry</MenuItem>\n          <MenuItem value='Trailer'>Traller</MenuItem>\n        </Select>\n      </FormControl>\n    </Box>\n  );\n}","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/MuiButton.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/http-common.js",[],["547","548"],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/DatePicker.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Checkbox.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/MuiSelect.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/RadioGroup.js",["549"],"import { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup as MuiRadioGroup } from '@mui/material';\nimport React from 'react'\n\nexport default function({genderItems,name,label,value,color,onChange}){\n\n   const content = genderItems.map(\n        (item) => (\n            <FormControlLabel key={item.id} value={item.id} control={<Radio color=\"primary\"/>} label={item.title} />\n        )\n    );\n\n    return(\n        <FormControl>\n            <FormLabel>{label}</FormLabel>\n                <MuiRadioGroup row\n                            name={name}\n                            label={label}\n                            value={value}\n                            color={color}\n                            onChange={onChange}>\n                                {content}\n                </MuiRadioGroup>\n                            \n        </FormControl>\n\n    )\n}","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Input.js",["550"],"import React from 'react'\nimport TextField from '@mui/material/TextField';\n\nexport default function({name, label, value, onChange, error=null, variant}){\n\n    \n\n    return(\n       <TextField \n            variant= {variant}\n            label={label}\n            name={name}\n            value={value}\n            onChange={onChange}\n            {...(error && {error: true, helperText:error})}\n       />\n     \n    )\n}","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Registration.js",["551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570"],"/*\nimport React from 'react'\nimport Controls from \"../components/controls/Controls\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport { Grid } from '@mui/material';\n\nconst initialFieldValues = {\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    password: \"\"\n   \n  };\n\n\nexport default function Registration() {\n\n    const handleSubmit = e =>{\n        e.preventDefault()\n      }\n      const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues, true);\n\n      \n    return (\n        <div>\n            <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"First Name\"\n            name=\"motoristFirstName\"\n            value={values.motoristFirstName}\n            onChange={handleInputChange}\n          />\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Last Name\"\n            name=\"motoristLastName\"\n            value={values.motoristLastName}\n            onChange={handleInputChange}\n          />\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Email\"\n            name=\"motoristEmail\"\n            value={values.motoristEmail}\n            onChange={handleInputChange}\n          />\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Mobile\"\n            name=\"motoristMobile\"\n            value={values.motoristMobile}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          \n          <Controls.Input\n            variant=\"outlined\" \n            label=\"Password\"\n            name=\"motoristPassword\"\n            value={values.motoristPassword}\n            onChange={handleInputChange}\n          />\n\n          <div>\n            <Controls.MuiButton\n            type=\"submit\"\n            text=\"Submit\"\n            />\n            <Controls.MuiButton\n            text=\"reset\"\n            color=\"default\"\n            onClick={resetForm}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n        </div>\n    )\n}\n*/\n\n\nimport { format } from 'date-fns';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Tooltip,\n    Paper,\n    Grid,\n\n} from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SeverityPill from '../components/severity-pill';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React from 'react';\nimport axios from \"axios\";\nimport AppUserService from \"../service/AppUserService\";\nimport MotoristService from \"../service/MotoristService\";\nimport {useState, useEffect} from \"react\";\nimport TextField from \"@mui/material/TextField\";\n\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\nconst genderItems = [\n    { id: \"male\", title: \"Male\" },\n    { id: \"female\", title: \"Female\" },\n    { id: \"others\", title: \"Others\" },\n];\n\n\n\nconst initialFieldValues = {\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    password: \"\"\n\n};\n\n\n\nexport default function Registration(){\n    const [motoristDetail, setMotoristDetail] =useState(initialFieldValues);\n\n    const handleInputChange = e =>{\n\n        const {name, value} = e.target\n        setMotoristDetail({\n            ...motoristDetail,\n            [name]: value,\n        })\n    }\n\n\n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        const data = {\n            //id: motoristDetail.id,\n            firstName: motoristDetail.firstName,\n            lastName: motoristDetail.lastName,\n            email: motoristDetail.email,\n            gender: motoristDetail.gender,\n            password: motoristDetail.password,\n        }\n\n        MotoristService.registerMotorist(data).then(response =>{\n            console.log(response);\n        }).catch(error =>{\n            console.log(error)\n        });\n    };\n\n    const classes = useStyles();\n\n    return(\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <Avatar /> {/*name*/}\n                    <Form onSubmit={handleSubmit}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"First Name\"\n                                    name=\"firstName\"\n                                    value={motoristDetail.firstName}\n                                    onChange={handleInputChange}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    value={motoristDetail.lastName}\n                                    onChange={handleInputChange}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    value={motoristDetail.email}\n                                    onChange={handleInputChange}\n                                />\n\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Controls.RadioGroup\n                                    variant=\"outlined\"\n                                    name=\"gender\"\n                                    label=\"Gender\"\n                                    color=\"primary\"\n                                    value={motoristDetail.gender}\n                                    genderItems={genderItems}\n                                    onChange={handleInputChange}\n                                />\n\n                                <TextField\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    value={motoristDetail.password}\n                                    onChange={handleInputChange}\n                                    autoComplete=\"current-password\"\n                                />\n\n                            </Grid>\n                        </Grid>\n                        <Button variant=\"contained\"\n                                fullWidth\n                                onClick={handleSubmit}\n                        >Submit</Button>\n                    </Form>\n                </Paper>\n            </Box>\n        </>\n    )\n}","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Time.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/ParkingLot.js",["571","572","573","574","575","576","577","578","579","580","581","582","583","584","585"],"import {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    TableContainer,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Tooltip,\n    Paper,\n    Grid,\n\n} from '@mui/material';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport React, { useState, useEffect  } from 'react';\nimport ParkingLotService from \"../service/ParkingLotService\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport TextField from \"@mui/material/TextField\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\n\n/*\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SeverityPill from '../components/severity-pill';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n */\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\n\n\nconst initialFieldValues = {\n    parkingLotId: 0,\n    parkingRegNo: \"\",\n    parkingLotLocation: \"\",\n    parkingLotName: \"\",\n    totalParkingSpaces: 0,\n   // parkingLotDate: \"\",\n\n};\n\n\nexport default function ParkingLot(props) {\n    const [parkDetail, setParkDetail] = useState(initialFieldValues);\n    const [parkLot, setParkLot] = React.useState([]);\n    const [searchLocation, setSearchLocation] = React.useState(\"\");\n    const [currentParkingList, setCurrentParkingList] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n    const [value, setValue] = React.useState(new Date());\n  /*\n\n    const baseURL = \"http://localhost:8080/apiv1/parkingLot/get\";\n    const [selected, setSelected] = React.useState(\"\");\n    const [value, setValue] = React.useState(new Date());\n    const [search, setSearch] = React.useState(\"\");\n    const [parkings, setParkings] = useState([]);\n   */\n\n\n\n    useEffect(() =>{\n        retrieveAllParkingLots();\n    }, []);\n\n    const onChangeSearchLocation = e =>{\n        const searchLocation = e.target.value;\n        setSearchLocation(searchLocation);\n    }\n    \n    const saveParkingLot = () =>{\n        const data ={\n            parkingRegNo: parkDetail.parkingRegNo,\n            parkingLotLocation: parkDetail.parkingLotLocation,\n            parkingLotName: parkDetail.parkingLotName,\n            totalParkingSpaces: parkDetail.totalParkingSpaces,\n            //parkingLotDate: parkDetail.parkingLotDate,\n        };\n        ParkingLotService.create(data).then(response => {\n            console.log(response)\n        })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n\n   \n\n    const retrieveAllParkingLots = () =>{\n\n        ParkingLotService.getAll().then(response => {\n            setParkLot(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    const refreshList = () =>{\n        retrieveAllParkingLots();\n        setCurrentParkingList(null);\n        setCurrentIndex(-1);\n    }\n\n    const setActiveParkingList = (parking, index) => {\n        setCurrentParkingList(parking);\n        setCurrentIndex(index);\n    };\n\n    const findParkingLotByLocation = () =>{\n\n        ParkingLotService.findByLocation(searchLocation).then(response => {\n            setParkLot(response.data);\n            console.log(response);\n            console.log(setParkLot);\n        })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n\n    const removeParkingLot = () =>{\n        ParkingLotService.removeAll().then(response => {\n            console.log(response.data);\n            refreshList();\n        })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n\n    const handleInputChange = e =>{\n\n        const {name, value} = e.target\n        setParkDetail({\n            ...parkDetail,\n            [name]: value,\n        })\n\n    }\n\n\n\n\n\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <Avatar /> {/*name*/}\n                    <Form onSubmit={saveParkingLot}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking LotReg\"\n                                    name=\"parkingRegNo\"\n                                    value={parkDetail.parkingRegNo}\n                                    onChange={handleInputChange}\n                                />\n\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking Location\"\n                                    name=\"parkingLotLocation\"\n                                    value={parkDetail.parkingLotLocation}\n                                    onChange={handleInputChange}\n                                />\n\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking Lot name\"\n                                    name=\"parkingLotName\"\n                                    value={parkDetail.parkingLotName}\n                                    onChange={handleInputChange}\n                                />\n\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking Lot spaces\"\n                                    name=\"totalParkingSpaces\"\n                                    value={parkDetail.totalParkingSpaces}\n                                    onChange={handleInputChange}\n                                />\n\n\n\n                            </Grid>\n\n                            <Button variant=\"contained\"\n                                    fullWidth\n                                    onClick={saveParkingLot}\n                            >Submit</Button>\n\n                        </Grid>\n\n                    </Form>\n                </Paper>\n            </Box>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <div>\n                    <Controls.Input\n                        variant=\"outlined\"\n                        label=\"Search Parking Lot\"\n                        value={searchLocation}\n                        onChange={onChangeSearchLocation}\n                    />\n                        <Button variant=\"contained\"\n                                onClick={findParkingLotByLocation}>Search</Button>\n                    </div>\n                    <div align=\"right\">\n                    <Button variant=\"contained\"\n                            onClick={retrieveAllParkingLots}>GetAll</Button>\n                    </div>\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Reg no.</TableCell>\n                                    <TableCell align=\"right\">location</TableCell>\n                                    <TableCell align=\"right\">Name</TableCell>\n                                    <TableCell align=\"right\">Total Space</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {parkLot.map((row, index) => (\n                                    <TableRow\n                                        key={index}\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell>{row.parkingRegNo}</TableCell>\n                                        <TableCell align=\"right\">{row.parkingLotLocation}</TableCell>\n                                        <TableCell align=\"right\">{row.parkingLotName}</TableCell>\n                                        <TableCell align=\"right\">{row.totalParkingSpaces}</TableCell>\n                                    </TableRow>\n                                ))\n                                }\n\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n\n\n                </Paper>\n            </Box>\n        </>\n    )\n}\n\n\n\n/*\n<LocalizationProvider dateAdapter={AdapterDateFns}>\n                                    <DatePicker\n                                        label=\"Basic example\"\n                                        value={value}\n                                        onChange={(date) => {\n                                            setValue(date);\n\n                                            setParkDetail({\n                                                ...parkDetail,\n                                                parkingLotDate : date,\n                                            })\n                                        }}\n                                        renderInput={(params) => <TextField {...params}\n                                                                            name=\"parkingDate\" value={parkDetail.parkingLotDate}\n                                        />}\n                                    />\n                                </LocalizationProvider>\n */","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/ParkingLotService.js",["586","587"],"import http from \"./http-common\"\n\nconst getAll = () => {\n    return http.get(\"/apiv1/parkingLot/all\");\n};\n\nconst get = parkinglocation => {\n    return http.get(`/apiv1/parkingLot/get/${parkinglocation}`);\n};\n\nconst create = data => {\n    return http.post(\"/apiv1/parkingLot/save\", data);\n};\n\nconst updateAlt = (id, data) => {\n    return http.put(`/apiv1/parkingLot/update/${id}`, data);\n};\n\nconst update = (data) => {\n    return http.put(`/apiv1/parkingLot/update`, data);\n};\n\nconst remove = id => {\n    return http.delete(`/apiv1/parkingLot/${id}`);\n};\n\nconst removeAll = () => {\n    return http.delete(`/apiv1/parkingLot/all`);\n};\n\nconst findByLocation = location => {\n    return http.get(`/apiv1/parkingLot/get/${location}`);\n};\n\nexport default {\n    getAll,\n    get,\n    create,\n    update,\n    remove,\n    removeAll,\n    findByLocation\n};","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/http-common.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/PTable.js",["588"],"import React, { useMemo, useState, useCallback, useEffect } from 'react';\n\nimport DataTable from 'react-data-table-component';\nimport axios from \"axios\";\n\nexport default function PTable(){\n\n        const [parkLot, setParkLot] = useState([]);\n\n    const retrieveAllParkingLots = () =>{\n\n        axios.get(`http://localhost:8080/apiv1/parkingLot/all`).then(response => {\n            setParkLot(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n        const [selectedRows, setSelectedRows] = useState([]);\n\n        useEffect(() => {\n\n            console.log('state', selectedRows);\n        }, [selectedRows]);\n\n        const handleButtonClick = () => {\n\n            console.log('clicked');\n        };\n\n        const handleChange = useCallback(state => {\n            setSelectedRows(state.selectedRows);\n        }, []);\n\n        /*\n        private Long parkingLotId;\n    private String parkingRegNo;\n    private String parkingLotLocation;\n    private String parkingLotName;\n    private int totalParkingSpaces;\n         */\n\n        const columns = useMemo(\n            () => [\n                {\n\n                    cell: () => <button onClick={handleButtonClick}>Action</button>,\n                    ignoreRowClick: true,\n                    allowOverflow: true,\n                    button: true,\n                },\n                {\n                    name: 'parkingLotId',\n                    selector: row => row.parkingLotId,\n                    sortable: true,\n                    grow: 2,\n                },\n                {\n                    name: 'parkingRegNo',\n                    selector: row => row.parkingRegNo,\n                    sortable: true,\n                },\n                {\n                    name: 'parkingLotLocation',\n                    selector: row => row.parkingLotLocation,\n                    sortable: true,\n                    right: true,\n                },\n                {\n                    name: 'parkingLotName',\n                    selector: row => row.parkingLotName,\n                    sortable: true,\n                    right: true,\n                },\n                {\n                    name: 'totalParkingSpaces',\n                    selector: row => <row className=\"totalParkingSpaces\"></row>,\n                    sortable: true,\n                    right: true,\n                },\n\n            ],\n            [],\n        );\n\n        return (\n            <DataTable\n                title=\"Desserts\"\n                data={retrieveAllParkingLots}\n                columns={columns}\n                selectableRows\n                onSelectedRowsChange={handleChange}\n            />\n        );\n\n\n}","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/ParkingDetailService.js",["589","590"],"import http from \"./http-common\"\n\nconst getAll = () => {\n    return http.get(\"/apiv1/parkingdetails/all\");\n};\n\nconst get = numberPlate => {\n    return http.get(`/apiv1/parkingdetails/get/${numberPlate}`);\n};\n\n\nconst create = (data, motoristEmail) => {\n    return http.post(`/apiv1/parkingdetails/save/${motoristEmail}`, data);\n};\n\nconst checkBookingSpace = data =>{\n    return http.post(\"/apiv1/parkingdetails/checkSpace\",data);\n}\n\nconst checkAmount = data =>{\n    return http.post(\"/apiv1/parkingdetails/amount\",data);\n}\n\nconst updateAlt = (id, data) => {\n    return http.put(`/apiv1/parkingdetails/update/${id}`, data);\n};\n\nconst update = (data) => {\n    return http.put(`/apiv1/parkingdetails/update`, data);\n};\n\nconst remove = numberPlate => {\n    return http.delete(`/apiv1/parkingdetails/${numberPlate}`);\n};\n\nconst removeAll = () => {\n    return http.delete(`/apiv1/parkingdetails/all`);\n};\n\n/*\nconst findByLocation = location => {\n    return http.get(`/parkingdetails/get/${location}`);\n};\n */\n\nexport default {\n    checkAmount,\n    getAll,\n    get,\n    create,\n    update,\n    remove,\n    removeAll,\n    checkBookingSpace,\n};","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/DataService.js",["591"],"import http from \"./http-common\"\n\n/*\nconst getFreeSpace = parkingLotName =>{\n    return http.get(`/apiv1/booking/freeSpace/${parkingLotName}`);\n}\n*/\n\nconst getOccupiedSpaces = parkingLotName =>{\n    return http.get(`/apiv1/booking/occupiedSpaces/${parkingLotName}`);\n}\n\nconst getLocData = () => {\n    return http.get(\"/apiv1/booking/locdata\");\n};\n\nconst getLocListData = () =>{\n    return http.get(\"/apiv1/booking/locdataList\");\n}\n\nconst getParkingData = locationName => {\n    return http.get(`/apiv1/booking/parkingdata/${locationName}`);\n};\n\n\n\nexport default {\n    getLocListData,\n    getOccupiedSpaces,\n    getLocData,\n    getParkingData,\n};","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/Popups.js",[],["592","593"],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/PageHeader.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/Notification.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/ConfirmDialog.js",["594"],"import { Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@mui/material';\nimport { IconButton } from '@mui/material';\nimport React from 'react'\nimport Controls from './controls/Controls';\nimport NotListedLocationIcon from '@mui/icons-material/NotListedLocation'\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n    dialog:{\n        padding: '16px',\n        position: 'absolute',\n        top: '40px'\n    },\n    dialogTitle:{\n        textAlign: 'center'\n    },\n    dialogContent:{\n        textAlign: 'center'\n    },\n    dialogAction:{\n        justifyContent: 'center'\n    },\n    titleIcon:{\n        backgroundColor:  'crimson',\n        color: 'blue',\n        '&:hover':{\n            backgroundColor: 'cyan',\n            cursor: 'default'\n        },\n        '& .MuiSvgIcon-root':{\n            fontSize: '8rem',\n        }\n    }\n})\n\nexport default function ConfirmDialog(props){\n    const { color, confirmDialog, setConfirmDialog } = props;\n    const classes = useStyles();\n\n    return(\n        <Dialog open={confirmDialog.isOpen} classes={{paper: classes.dialog}}>\n            <DialogTitle className={classes.dialogTitle}>\n                <IconButton disableFocusRipple className={classes.titleIcon}>\n                    <NotListedLocationIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent className={classes.dialogContent}>\n                <Typography variant=\"h6\">\n                    {confirmDialog.title}\n                </Typography>\n                <Typography variant=\"subtitle2\">\n                    {confirmDialog.subTitle}\n                </Typography>\n            </DialogContent>\n            <DialogActions className={classes.dialogAction}>\n                <Controls.MuiButton\n                text=\"No\"\n                color=\"default\"\n                onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false})} />\n                <Controls.MuiButton\n                text=\"Yes\"\n                color=\"secondary\"\n                onClick={confirmDialog.onConfirm} />\n            </DialogActions>\n        </Dialog>\n    )\n}","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/UseTable.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/service/AppUserService.js",["595","596","597","598","599"],"import  axios from \"axios\";\nimport qs from 'qs';\n\nimport http from \"./http-common\"\n\nimport authHeader from \"./auth-header\";\n\nconst sendHeader ={\n    headers: { 'content-type': 'application/x-www-form-urlencoded'}\n}\n\nconst login = data => {\n   /*\n    const options = {\n\n        method: 'POST',\n        headers: {\n            Accept: \"application/json\",\n            'content-type': 'application/x-www-form-urlencoded',\n            \"Access-Control-Allow-Origin\": '*',\n        },\n        data: qs.stringify(data),\n\n    };\n    return axios(\"http://localhost:8080/apiv1/appUser/login\",options);\n\n    */\n\n    return http.post(\"/apiv1/appUser/login\", data);\n};\n\nconst refreshToken = () =>{\n    return http.get(\"/apiv1/appUser/token/refresh\");\n}\n\n\n\n/*\n const options = {\n        method: 'POST',\n        headers: { 'content-type': 'application/x-www-form-urlencoded' },\n        data: qs.stringify(data),\n        URL: \"http://localhost:8080/apiv1/appUser/login\"\n    };\n   return axios(options);\n */\n\n\n\nexport default {\n    login,\n    refreshToken,\n};","/Users/christopherlijoodi/Desktop/CITYPARK/src/usercomponent/AppNavedPage.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/usercomponent/Login.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/usercomponent/Home.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/usercomponent/Register.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/usercomponent/RestrictedMotorist.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/usercomponent/Profile.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/service/auth.service.js",["600"],"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080\";\n\nconst register = (motoristID, firstName, lastName, email, gender, password) =>{\n    return axios.post(API_URL + \"/apiv1/motorist/save\", {\n        motoristID,\n        firstName,\n        lastName,\n        email,\n        gender,\n        password,\n    });\n};\n\nconst login = (username, password) =>{\n    return axios.post(API_URL + \"/api/login\", {\n        username,\n        password,\n    }).then((response) => {\n        if(response.data.accessToken){\n            localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n        return response.data;\n    });\n};\n\nconst logout = () =>{\n    localStorage.removeItem(\"user\");\n};\n\nconst getCurrentUser = () =>{\n    return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nexport default {\n    register,\n    login,\n    logout,\n    getCurrentUser,\n}\n\n\n\n","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/user.service.js",["601"],"/Users/christopherlijoodi/Desktop/CITYPARK/src/service/auth-header.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/GuardedRoute.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SideBar/AttendantSideMenu.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SideBar/AdminSideMenu.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AttendantRegistration.js",["602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621"],"import { format } from 'date-fns';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Tooltip,\n    Paper,\n    Grid,\n\n} from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SeverityPill from '../components/severity-pill';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, {useState} from 'react';\nimport axios from \"axios\";\nimport AppUserService from \"../service/AppUserService\";\nimport MotoristService from \"../service/MotoristService\";\nimport TextField from \"@mui/material/TextField\";\nimport AdminServices from \"../service/AdminServices\";\n\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\nconst genderItems = [\n    { id: \"male\", title: \"Male\" },\n    { id: \"female\", title: \"Female\" },\n    { id: \"others\", title: \"Others\" },\n];\n\n\n\nconst initialFieldValues = {\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    password: \"\",\n    areaAssigned: \"\"\n\n};\n\n\n\nexport default function AttendantRegistration(){\n    const [attendantDetail, setAttendantDetail] =useState(initialFieldValues);\n\n    const handleInputChange = e =>{\n\n        const {name, value} = e.target\n        setAttendantDetail({\n            ...attendantDetail,\n            [name]: value,\n        })\n    }\n\n\n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        const data = {\n            //id: motoristDetail.id,\n            firstName: attendantDetail.firstName,\n            lastName: attendantDetail.lastName,\n            email: attendantDetail.email,\n            gender: attendantDetail.gender,\n            password: attendantDetail.password,\n            areaAssigned: attendantDetail.areaAssigned,\n        }\n\n        AdminServices.registerAttendant(data).then(response =>{\n            console.log(response);\n        }).catch(error =>{\n            console.log(error)\n        });\n    };\n\n    const classes = useStyles();\n\n    return(\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <Avatar /> {/*name*/}\n                    <Form onSubmit={handleSubmit}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"First Name\"\n                                    name=\"firstName\"\n                                    value={attendantDetail.firstName}\n                                    onChange={handleInputChange}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    value={attendantDetail.lastName}\n                                    onChange={handleInputChange}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    value={attendantDetail.email}\n                                    onChange={handleInputChange}\n                                />\n\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Controls.RadioGroup\n                                    variant=\"outlined\"\n                                    name=\"gender\"\n                                    label=\"Gender\"\n                                    color=\"primary\"\n                                    value={attendantDetail.gender}\n                                    genderItems={genderItems}\n                                    onChange={handleInputChange}\n                                />\n\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Area Assigned\"\n                                    name=\"areaAssigned\"\n                                    value={attendantDetail.areaAssigned}\n                                    onChange={handleInputChange}\n                                />\n\n                                <TextField\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    value={attendantDetail.password}\n                                    onChange={handleInputChange}\n                                    autoComplete=\"current-password\"\n                                />\n\n                            </Grid>\n                        </Grid>\n                        <Button variant=\"contained\"\n                                fullWidth\n                                onClick={handleSubmit}\n                        >Submit</Button>\n                    </Form>\n                </Paper>\n            </Box>\n        </>\n    )\n}","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/AdminServices.js",["622"],"import http from \"./http-common\"\n\n/*\nregister\nget\ngetall\nupdate\ndelete\ndelete all\n */\n/** admin */\nconst getAdmin = email =>{\n    return http.get(`/apiv1/admin/get/${email}`);\n}\n\nconst changePassword = data =>{\n    return http.put(\"/apiv1/admin/updatePassword\", data);\n}\n\n/** attendants */\n\nconst registerAttendant = data => {\n    return http.post(\"/apiv1/attendant/save\", data);\n};\n\nconst getAttendant = id =>{\n    return http.get(`/apiv1/attendant/getDetails/${id}`);\n}\n\nconst getAllAttendants = () =>{\n    return http.get(\"/apiv1/attendant/getall\");\n}\n\nconst updateAttendant = data =>{\n    return http.put(\"/apiv1/attendant/update\", data);\n}\n\nconst deleteAttendant = id =>{\n    return http.delete(`/apiv1/attendant/${id}`);\n}\n\n/** motorist */\n\nconst registerMotorist = data =>{\n    return http.post(\"/apiv1/motorist/save\", data);\n}\n\nconst getMotorist = id =>{\n    return http.get(`/apiv1/motorist/getDetails/${id}`);\n}\n\nconst getAllMotorists = () =>{\n    return http.get(\"/apiv1/motorist/getall\");\n}\n\nconst updateMotorist = data =>{\n    return http.put(\"/apiv1/motorist/update\", data);\n}\n\nconst deleteMotorist = id =>{\n    return http.delete(`/apiv1/motorist/${id}`);\n}\n\n\n/** appuser */\n\n// get app users\nconst getAppUsers = () =>{\n    return http.get(\"/apiv1/appUser/\");\n}\n// save app user\nconst saveAppUser = data =>{\n    return http.post(\"/apiv1/appUser/save\", data);\n}\n// save role\nconst saveRole = data =>{\n    return http.post(\"/apiv1/appUser/role/save\", data);\n}\n// add role\nconst addRoleToUser = data =>{\n    return http.post(\"/apiv1/appUser/role/addtouser\", data);\n}\n\nexport default {\n    changePassword,\n    getAdmin,\n\n    registerAttendant,\n    getAttendant,\n    getAllAttendants,\n    updateAttendant,\n    deleteAttendant,\n\n    registerMotorist,\n    getMotorist,\n    getAllMotorists,\n    updateMotorist,\n    deleteMotorist,\n\n    getAppUsers,\n    saveAppUser,\n    saveRole,\n    addRoleToUser,\n};","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/ParkingLotDetails.js",["623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643"],"//contains all the list of parking lots\n\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Tooltip,\n    Paper,\n    Grid,\n\n} from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, { useState, useEffect  } from 'react'\nimport axios from \"axios\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport TextField from \"@mui/material/TextField\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from '@mui/lab/DatePicker';\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport ParkingLotService from \"../service/ParkingLotService\";\nimport ParkingDetailService from \"../service/ParkingDetailService\";\nimport DataService from \"../service/DataService\";\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\n/*\nconst initialFieldValues = {\n    id: 0,\n    numberPlate: \"\",\n    vehicleType: \"\",\n    location: \"\",\n    parkingLotName: \"\",\n    parkingDate: \"\",\n    parkTime: \"\",\n    parkDuration: \"\",\n\n};\n\n */\n\nexport default function ParkingLotDetails(props){\n   // const [parkDetail, setParkDetail] = useState(initialFieldValues);\n   // const [selected, setSelected] = React.useState(\"\");\n   // const [value, setValue] = React.useState(new Date());\n    const [parkLot, setParkLot] = React.useState([]);\n    const [searchLocation, setSearchLocation] = React.useState(\"\");\n    const [locationData, setLocationData] = useState([]);\n    const [parkingLotData, setParkingLotData] = useState([]);\n    const [searchParkingLot, setSearchParkingLot] = useState(\"\");\n    const [currentParkingList, setCurrentParkingList] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n\n    useEffect(() =>{\n        retrieveAllParkingLotsAreaData();\n    }, []);\n\n    const retrieveAllParkingLotsAreaData = () =>{\n        DataService.getLocData().then(response => {\n            setLocationData(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    const refreshList = () =>{\n        retrieveAllParkingLots();\n        setCurrentParkingList(null);\n        setCurrentIndex(-1);\n    }\n\n\n\n    useEffect(() =>{\n        retrieveAllParkingLots();\n    }, []);\n\n    const retrieveAllParkingLots = () =>{\n        ParkingLotService.getAll().then(response => {\n            setParkLot(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    const onChangeSearchLocation = e =>{\n        const searchLocation = e.target.value;\n        setSearchLocation(searchLocation);\n    }\n\n    const findParkingLotByLocation = () =>{\n        ParkingLotService.findByLocation(searchLocation).then(response => {\n            setParkLot(response.data);\n            console.log(response);\n            console.log(setParkLot);\n            refreshList();\n        })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n\n                <Form>\n\n                    <FormControl fullWidth>\n                        <InputLabel id=\"parkings\">Find parking lots</InputLabel>\n                        <Select\n                            labelId=\"parkings\"\n                            id=\"parkings\"\n                            name=\"location\"\n                            value={searchLocation}\n                            label=\"Find parking lots\"\n                            onChange={onChangeSearchLocation}\n                        >{locationData.map((item ,index) =>\n                            <MenuItem value={item} key={index}>{item}</MenuItem>)}\n                        </Select>\n                        <Button variant=\"contained\"\n                                fullWidth\n                                onClick={findParkingLotByLocation}\n                        >Search</Button>\n                    </FormControl>\n\n\n\n                    <div align=\"right\">\n                        <Button variant=\"contained\"\n                                onClick={retrieveAllParkingLots}>GetAll</Button>\n                    </div>\n\n                </Form>\n\n                <Card {...props}>\n                    <CardHeader title=\"Parking lots\" />\n                    <PerfectScrollbar>\n                        <Box sx={{ minWidth: 800 }}>\n                            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>\n                                            parkingLotId\n                                        </TableCell>\n                                        <TableCell>\n                                            parkingLotName\n                                        </TableCell>\n                                        <TableCell>\n                                            totalParkingSpaces\n                                        </TableCell>\n                                        <TableCell>\n                                            Book\n                                        </TableCell>\n\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {parkLot.map((park) =>(\n                                        <TableRow\n                                            hover\n                                            key={park.parkingLotId}\n                                        >\n                                            <TableCell>\n                                                {park.parkingLotId}\n                                            </TableCell>\n                                            <TableCell>\n                                                {park.parkingLotName}\n                                            </TableCell>\n                                            <TableCell>\n                                                {park.totalParkingSpaces}\n                                            </TableCell>\n                                            <TableCell>\n                                                <Button>Book</Button>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </Box>\n                    </PerfectScrollbar>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'flex-end',\n                            p: 2\n                        }}\n                    >\n                        <Button\n                            color=\"primary\"\n                            endIcon={<ArrowRightIcon fontSize=\"small\" />}\n                            size=\"small\"\n                            variant=\"text\"\n                        >\n                            View all\n                        </Button>\n                    </Box>\n\n                </Card>\n            </Box>\n            </>\n    )\n}","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AttendantPage.js",["644","645","646","647","648","649","650","651","652","653","654","655","656","657"],"//LIST OF ALL ATTENDANTS\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    TableContainer,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Tooltip,\n    Paper,\n    Grid,\n\n} from '@mui/material';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport React, { useState, useEffect  } from 'react';\nimport ParkingLotService from \"../service/ParkingLotService\";\nimport AdminServices from \"../service/AdminServices\";\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\nexport default function AttendantPage(props) {\n    const [attendants, setAttendants] = React.useState([]);\n    const [searchLocation, setSearchLocation] = React.useState(\"\");\n    const [regNumber, setRegNumber]= React.useState(\"\");\n    const [currentAttendantsList, setCurrentAttendantsList] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n\n    useEffect(() =>{\n        retrieveAllAttendants();\n    }, []);\n\n    const onChangeSearchRegistrationNumber = e =>{\n        const regNumber = e.target.value;\n        setRegNumber(regNumber);\n    }\n\n    const retrieveAllAttendants = () =>{\n        AdminServices.getAllAttendants().then(response => {\n            setAttendants(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    const refreshList = () =>{\n        retrieveAllAttendants();\n        setCurrentAttendantsList(null);\n        setCurrentIndex(-1);\n    }\n\n    const onChangeSearchLocation = e =>{\n        const searchLocation = e.target.value;\n        setSearchLocation(searchLocation);\n    }\n\n    const findAttendantByID = () =>{\n        AdminServices.getAttendant(regNumber).then(response =>{\n            setAttendants(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <div>\n                        <Controls.Input\n                            variant=\"outlined\"\n                            label=\"Search Attendant (Reg Num)\"\n                            value={regNumber}\n                            onChange={onChangeSearchRegistrationNumber}\n                        />\n                        <Button variant=\"contained\"\n                                onClick={findAttendantByID}>Search</Button>\n                    </div>\n                    <div align=\"right\">\n                        <Button variant=\"contained\"\n                                onClick={retrieveAllAttendants}>GetAll</Button>\n                    </div>\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n\n                                    <TableCell align=\"right\">firstName</TableCell>\n                                    <TableCell align=\"right\">lastName</TableCell>\n                                    <TableCell align=\"right\">email</TableCell>\n                                    <TableCell align=\"right\">gender</TableCell>\n                                    <TableCell align=\"right\">areaAssigned</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {attendants.map((row, index) => (\n                                    <TableRow\n                                        key={index}\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell>{row.firstName}</TableCell>\n                                        <TableCell align=\"right\">{row.lastName}</TableCell>\n                                        <TableCell align=\"right\">{row.email}</TableCell>\n                                        <TableCell align=\"right\">{row.gender}</TableCell>\n                                        <TableCell align=\"right\">{row.areaAssigned}</TableCell>\n                                    </TableRow>\n                                ))\n                                }\n\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n\n\n                </Paper>\n            </Box>\n        </>\n    )\n}","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/BookingDetails.js",["658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673"],"//list of booking details\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    TableContainer,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Tooltip,\n    Paper,\n    Grid,\n\n} from '@mui/material';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport React, { useState, useEffect  } from 'react';\nimport ParkingLotService from \"../service/ParkingLotService\";\nimport AdminServices from \"../service/AdminServices\";\nimport DataService from \"../service/DataService\";\nimport ParkingDetailService from \"../service/ParkingDetailService\";\nimport BookingService from \"../service/BookingService\";\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\nexport default function BookingDetails(){\n\n    const [bookingDetails, setBookingDetails] = React.useState([]);\n    const [searchLocation, setSearchLocation] = React.useState(\"\");\n    const [numberPlate, setNumberPlate]= React.useState(\"\");\n    const [currentBookingDetailsList, setCurrentBookingDetailsList] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n\n    useEffect(() =>{\n        retrieveAllBookingDetails();\n    }, []);\n\n    const onChangeSearchNumberPlate = e =>{\n        const numberPlate = e.target.value;\n        setNumberPlate(numberPlate);\n    }\n\n    const retrieveAllBookingDetails = () =>{\n        ParkingDetailService.getAll().then(response => {\n            setBookingDetails(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    const refreshList = () =>{\n        retrieveAllBookingDetails();\n        setCurrentBookingDetailsList(null);\n        setCurrentIndex(-1);\n    }\n\n    const onChangeSearchLocation = e =>{\n        const searchLocation = e.target.value;\n        setSearchLocation(searchLocation);\n    }\n\n    const findParkingDetailsByNumberPlate = () =>{\n\n        BookingService.get(numberPlate).then(response =>{\n            setBookingDetails(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <div>\n                        <Controls.Input\n                            variant=\"outlined\"\n                            label=\"Search BookingDetails (Number Plate)\"\n                            value={numberPlate}\n                            onChange={onChangeSearchNumberPlate}\n                        />\n                        <Button variant=\"contained\"\n                                onClick={findParkingDetailsByNumberPlate}>Search</Button>\n                    </div>\n                    <div align=\"right\">\n                        <Button variant=\"contained\"\n                                onClick={retrieveAllBookingDetails}>GetAll</Button>\n                    </div>\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>numberPlate</TableCell>\n                                    <TableCell align=\"right\">vehicleType</TableCell>\n                                    <TableCell align=\"right\">location</TableCell>\n                                    <TableCell align=\"right\">parkingLotName</TableCell>\n                                    <TableCell align=\"right\">parkingDate</TableCell>\n                                    <TableCell align=\"right\">parkTime</TableCell>\n                                    <TableCell align=\"right\">parkDuration</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {bookingDetails.map((row, index) => (\n                                    <TableRow\n                                        key={index}\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell>{row.numberPlate}</TableCell>\n                                        <TableCell align=\"right\">{row.vehicleType}</TableCell>\n                                        <TableCell align=\"right\">{row.location}</TableCell>\n                                        <TableCell align=\"right\">{row.parkingLotName}</TableCell>\n                                        <TableCell align=\"right\">{row.parkingDate}</TableCell>\n                                        <TableCell align=\"right\">{row.parkTime}</TableCell>\n                                        <TableCell align=\"right\">{row.parkDuration}</TableCell>\n                                    </TableRow>\n                                ))\n                                }\n\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n\n\n                </Paper>\n            </Box>\n        </>\n    )\n\n}","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/BookingService.js",["674","675"],"import http from \"./http-common\"\n\nconst getAll = () => {\n    return http.get(\"/apiv1/parkingdetails/all\");\n};\n\nconst get = numberPlate => {\n    return http.get(`/apiv1/parkingdetails/get/${numberPlate}`);\n};\n\nconst create = data => {\n    return http.post(\"/apiv1/parkingdetails/save\", data);\n};\n\nconst updateAlt = (id, data) => {\n    return http.put(`/apiv1/parkingdetails/update/${id}`, data);\n};\n\nconst update = (data) => {\n    return http.put(`/apiv1/parkingdetails/update`, data);\n};\n\nconst remove = numberPlate => {\n    return http.delete(`/apiv1/parkingdetails/${numberPlate}`);\n};\n\nconst removeAll = () => {\n    return http.delete(\"/apiv1/parkingdetails/all\");\n};\n\n/*\nconst findByLocation = location => {\n    return http.get(`/parkingdetails/get/${location}`);\n};\n */\n\nexport default {\n    getAll,\n    get,\n    create,\n    update,\n    remove,\n    removeAll,\n};","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/ParkingLotsWithDatesService.js",["676"],"import http from \"./http-common\"\n\nconst getAll = () => {\n    return http.get(\"/apiv1/parkanddate/all\");\n};\n\nconst getByDateOnly = date => {\n    return http.get(`/apiv1/parkanddate/get/${date}`);\n};\n\nconst addDateToParkingLot = data => {\n    return http.post(\"/apiv1/parkanddate/dates/addtoparklot\", data);\n};\n\nconst getParkingData = locationName => {\n    return http.get(`/apiv1/parkanddate/getByLocation/${locationName}`);\n};\n\n///get/bylocanddate\nconst getParkingDataSearch = data => {\n    return http.post(\"/apiv1/parkanddate/get/bylocanddate\", data);\n};\n\n\nexport default {\n    getAll,\n    getByDateOnly,\n    addDateToParkingLot,\n    getParkingData,\n    getParkingDataSearch,\n};","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/MessagesSettings.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AccountSettingsAdmin.js",["677","678","679","680","681"],"import {useEffect, useState} from 'react';\nimport { Box, Button, Paper, Card, CardContent, Grid, CardHeader, Divider, TextField } from '@mui/material';\nimport DataService from \"../service/DataService\";\nimport AdminServices from \"../service/AdminServices\";\nimport * as React from 'react';\nimport CardActions from '@mui/material/CardActions';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\nimport axios from \"axios\";\nimport AuthService from \"../service/auth.service\";\nimport {makeStyles} from \"@mui/styles\";\nimport MotoristService from \"../service/MotoristService\";\n\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\n\nconst initialFieldValues = {\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    password: \"\"\n\n};\n\nconst passwordInit = {\n    password: \"\",\n    confirm: \"\"\n}\n\n\nexport default function AccountSettingsAdmin() {\n    const [userDetails , setUserDetails] = useState(initialFieldValues);\n    const [values, setValues] = useState(passwordInit);\n\n\n\n\n    useEffect(() =>{\n        const user = AuthService.getCurrentUser();\n/*\n        const isAdmin = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN';\n        const isAttendant = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ATTENDANT';\n        const isMotorist = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_MOTORIST';\n        const email = JSON.parse(atob(user.split('.')[1])).sub;\n\n        //const isAdmin = JSON.parse(atob(user.split('.')[1])).role === 'ROLE_MOTORIST';\n        \n */\n\n        if(user){\n            const isAdmin = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN';\n            const email = JSON.parse(atob(user.split('.')[1])).sub;\n            if(isAdmin){\n                AdminServices.getAdmin(email).then(response => {\n                    setUserDetails(response.data);\n                    console.log(response);\n                }).catch(error => {\n                    console.log(error)\n                })\n            }\n        }\n    }, []);\n\n  /*\n    useEffect(() =>{\n        retrieveUsersDetails();\n    }, []);\n\n\n//await axios.get(`http://localhost:8080/apiv1/admin/get/${emailData}`)\n    const retrieveUsersDetails = async () =>{\n\n        AdminServices.getAdmin(emailData).then(response => {\n            setUserDetails(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error)\n        })\n\n    }\n\n   */\n\n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        const data = {\n            email: userDetails.email,\n            newpassword: values.password,\n        }\n\n\n        const isConfirmedPassword = values.password === values.confirm;\n\n        if(isConfirmedPassword){\n            AdminServices.changePassword(data).then(response =>{\n                console.log(response);\n            }).catch(error =>{\n                console.log(error)\n            });\n        }\n\n    };\n\n\n    const handleChange = (event) => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <Grid container>\n                        <Grid item xs={6}>\n            <Card sx={{ maxWidth: 500 }}>\n                <CardHeader\n                    subheader=\"Account Information\"\n                    title=\"Admin Details\"\n                />\n                <Divider />\n                <CardContent>\n                    <Stack direction=\"row\" spacing={2}>\n                        <Avatar>A</Avatar>\n                    </Stack>\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        {userDetails.firstName}\n                    </Typography>\n\n\n                    <Typography variant=\"body1\" color=\"text.secondary\">\n                        <Grid item xs={9}>\n                            <b>First Name:</b>  {userDetails.firstName}<br/>\n                            <b>Last Name:</b> {userDetails.lastName}<br/>\n                            <b>Gender:</b> {userDetails.gender}<br/>\n                            <b>Email:</b> {userDetails.email}<br/>\n                        </Grid>\n                    </Typography>\n\n                </CardContent>\n            </Card>\n                    </Grid>\n                        <Grid item xs={6}>\n                        <form onSubmit={handleSubmit}>\n                            <Card>\n                                <CardHeader\n                                    subheader=\"Update password\"\n                                    title=\"Password\"\n                                />\n                                <Divider />\n                                <CardContent>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Password\"\n                                        margin=\"normal\"\n                                        name=\"password\"\n                                        onChange={handleChange}\n                                        type=\"password\"\n                                        value={values.password}\n                                        variant=\"outlined\"\n                                    />\n                                    <TextField\n                                        fullWidth\n                                        label=\"Confirm password\"\n                                        margin=\"normal\"\n                                        name=\"confirm\"\n                                        onChange={handleChange}\n                                        type=\"password\"\n                                        value={values.confirm}\n                                        variant=\"outlined\"\n                                    />\n                                </CardContent>\n                                <Divider />\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        justifyContent: 'flex-end',\n                                        p: 2\n                                    }}\n                                >\n                                    <Button\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        onClick={handleSubmit}\n                                    >\n                                        Update\n                                    </Button>\n                                </Box>\n                            </Card>\n                        </form>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Box>\n\n\n        </>\n    );\n};","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AccountSettingsAttendant.js",["682","683","684"],"import {useEffect, useState} from 'react';\nimport { Box, Button, Paper, Card, CardContent, Grid, CardHeader, Divider, TextField } from '@mui/material';\nimport DataService from \"../service/DataService\";\nimport AuthService from \"../service/auth.service\";\nimport AdminServices from \"../service/AdminServices\";\nimport Stack from \"@mui/material/Stack\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Typography from \"@mui/material/Typography\";\nimport CardActions from \"@mui/material/CardActions\";\nimport * as React from \"react\";\nimport AttendantService from \"../service/AttendantService\";\nimport {makeStyles} from \"@mui/styles\";\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\nconst initialFieldValues = {\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    password: \"\",\n    areaAssigned: \"\",\n\n};\n\nconst passwordInit = {\n    password: \"\",\n    confirm: \"\"\n}\n\nexport default function AccountSettingsAttendant(){\n    const [userDetails , setUserDetails] = useState(initialFieldValues);\n    const [values, setValues] = useState(passwordInit);\n\n\n\n    useEffect(() =>{\n        const user = AuthService.getCurrentUser();\n        /*\n                const isAdmin = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN';\n                const isAttendant = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ATTENDANT';\n                const isMotorist = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_MOTORIST';\n                const email = JSON.parse(atob(user.split('.')[1])).sub;\n\n                //const isAdmin = JSON.parse(atob(user.split('.')[1])).role === 'ROLE_MOTORIST';\n\n         */\n\n        if(user){\n            const isAttendant = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ATTENDANT';\n            const attendantEmail = JSON.parse(atob(user.split('.')[1])).sub;\n            if(isAttendant){\n                AttendantService.getAttendantInfo(attendantEmail).then(response => {\n                    setUserDetails(response.data);\n                    console.log(response);\n                }).catch(error => {\n                    console.log(error)\n                })\n            }\n        }\n    }, []);\n\n\n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        const data = {\n            email: userDetails.email,\n            newpassword: values.password,\n        }\n\n\n        const isConfirmedPassword = values.password === values.confirm;\n\n        if(isConfirmedPassword){\n            AttendantService.changePassword(data).then(response =>{\n                console.log(response);\n            }).catch(error =>{\n                console.log(error)\n            });\n        }\n\n    };\n\n\n\n    const handleChange = (event) => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <Grid container>\n                        <Grid item xs={6}>\n                <Card sx={{ maxWidth: 500 }}>\n                    <CardHeader\n                        subheader=\"Account Information\"\n                        title=\"Attendant Details\"\n                    />\n                    <Divider />\n                    <CardContent>\n                        <Stack direction=\"row\" spacing={2}>\n                            <Avatar>T</Avatar>\n                        </Stack>\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                            {userDetails.firstName}\n                        </Typography>\n\n                        <Typography variant=\"body1\" color=\"text.secondary\">\n                            <Grid item xs={9}>\n                                <b>First Name:</b> {userDetails.firstName}<br/>\n                                <b>Last Name:</b> {userDetails.lastName}<br/>\n                                <b>Gender:</b> {userDetails.gender}<br/>\n                                <b>Email:</b> {userDetails.email}<br/>\n                                <b>AreaAssigned:</b> {userDetails.areaAssigned}<br/>\n                            </Grid>\n                        </Typography>\n                    </CardContent>\n\n                </Card>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <form onSubmit={handleSubmit}>\n                                <Card>\n                                    <CardHeader\n                                        subheader=\"Update password\"\n                                        title=\"Password\"\n                                    />\n                                    <Divider />\n                                    <CardContent>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Password\"\n                                            margin=\"normal\"\n                                            name=\"password\"\n                                            onChange={handleChange}\n                                            type=\"password\"\n                                            value={values.password}\n                                            variant=\"outlined\"\n                                        />\n                                        <TextField\n                                            fullWidth\n                                            label=\"Confirm password\"\n                                            margin=\"normal\"\n                                            name=\"confirm\"\n                                            onChange={handleChange}\n                                            type=\"password\"\n                                            value={values.confirm}\n                                            variant=\"outlined\"\n                                        />\n                                    </CardContent>\n                                    <Divider />\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            justifyContent: 'flex-end',\n                                            p: 2\n                                        }}\n                                    >\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            onClick={handleSubmit}\n                                        >\n                                            Update\n                                        </Button>\n                                    </Box>\n                                </Card>\n                            </form>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Box>\n            </>\n    );\n};","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AccountSettingsMotorist.js",["685","686","687"],"import {useEffect, useState} from 'react';\nimport { Box, Button, Paper, Card, CardContent, Grid, CardHeader, Divider, TextField } from '@mui/material';\nimport DataService from \"../service/DataService\";\nimport AuthService from \"../service/auth.service\";\nimport AdminServices from \"../service/AdminServices\";\nimport Stack from \"@mui/material/Stack\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Typography from \"@mui/material/Typography\";\nimport CardActions from \"@mui/material/CardActions\";\nimport * as React from \"react\";\nimport MotoristService from \"../service/MotoristService\";\nimport {makeStyles} from \"@mui/styles\";\n\n\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\nconst initialFieldValues = {\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    password: \"\"\n\n};\n\nconst passwordInit = {\n    password: \"\",\n    confirm: \"\"\n}\n\nexport default function AccountSettingsMotorist() {\n    const [userDetails , setUserDetails] = useState(initialFieldValues);\n    const [values, setValues] = useState(passwordInit);\n\n\n\n    useEffect(() =>{\n        const user = AuthService.getCurrentUser();\n        /*\n                const isAdmin = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN';\n                const isAttendant = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ATTENDANT';\n                const isMotorist = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_MOTORIST';\n                const email = JSON.parse(atob(user.split('.')[1])).sub;\n\n                //const isAdmin = JSON.parse(atob(user.split('.')[1])).role === 'ROLE_MOTORIST';\n\n         */\n\n        if(user){\n            const isMotorist = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_MOTORIST';\n            const motoristEmail = JSON.parse(atob(user.split('.')[1])).sub;\n            if(isMotorist){\n                MotoristService.getMotoristInfo(motoristEmail).then(response => {\n                    setUserDetails(response.data);\n                    console.log(response);\n                }).catch(error => {\n                    console.log(error)\n                })\n            }\n        }\n    }, []);\n\n\n\n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        const data = {\n            email: userDetails.email,\n            newpassword: values.password,\n        }\n\n\n        const isConfirmedPassword = values.password === values.confirm;\n\n        if(isConfirmedPassword){\n            MotoristService.changePassword(data).then(response =>{\n                console.log(response);\n            }).catch(error =>{\n                console.log(error)\n            });\n        }\n\n    };\n\n\n    const handleChange = (event) => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const classes = useStyles();\n\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n\n                <Paper elevation={3} className={classes.pageContent}>\n                    <Grid container>\n                        <Grid item xs={6}>\n                <Card sx={{ maxWidth: 500 }}>\n                    <CardHeader\n                        subheader=\"Account Information\"\n                        title=\"Motorist Details\"\n                    />\n                    <Divider />\n                    <CardContent>\n                        <Stack direction=\"row\" spacing={2}>\n                            <Avatar>M</Avatar>\n                        </Stack>\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                            {userDetails.firstName}\n                        </Typography>\n\n                        <Typography variant=\"body1\" color=\"text.secondary\">\n                            <Grid item xs={9}>\n                                <b>First Name:</b>  {userDetails.firstName}<br/>\n                                <b>Last Name:</b> {userDetails.lastName}<br/>\n                                <b>Gender:</b> {userDetails.gender}<br/>\n                                <b>Email:</b> {userDetails.email}<br/>\n                            </Grid>\n                        </Typography>\n                    </CardContent>\n\n                </Card>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <form onSubmit={handleSubmit}>\n                                <Card>\n                                    <CardHeader\n                                        subheader=\"Update password\"\n                                        title=\"Password\"\n                                    />\n                                    <Divider />\n                                    <CardContent>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Password\"\n                                            margin=\"normal\"\n                                            name=\"password\"\n                                            onChange={handleChange}\n                                            type=\"password\"\n                                            value={values.password}\n                                            variant=\"outlined\"\n                                        />\n                                        <TextField\n                                            fullWidth\n                                            label=\"Confirm password\"\n                                            margin=\"normal\"\n                                            name=\"confirm\"\n                                            onChange={handleChange}\n                                            type=\"password\"\n                                            value={values.confirm}\n                                            variant=\"outlined\"\n                                        />\n                                    </CardContent>\n                                    <Divider />\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            justifyContent: 'flex-end',\n                                            p: 2\n                                        }}\n                                    >\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            onClick={handleSubmit}\n                                        >\n                                            Update\n                                        </Button>\n                                    </Box>\n                                </Card>\n                            </form>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Box>\n            </>\n    );\n};","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/AttendantService.js",["688"],"import http from \"./http-common\"\n\nconst changePassword = data =>{\n    return http.put(\"/apiv1/attendant/updatePassword\", data);\n}\n\nconst getAttendantInfo = email =>{\n    return http.get(`/apiv1/attendant/get/${email}`);\n}\n\nconst getAttendant = id =>{\n    return http.get(`/apiv1/attendant/getDetails/${id}`);\n}\n\nconst updateAttendant = data =>{\n    return http.put(\"/apiv1/attendant/update\", data);\n}\n\n\n\nexport default {\n    changePassword,\n    getAttendantInfo,\n    getAttendant,\n    updateAttendant\n};","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/PagesRoutes.js",["689","690","691","692","693","694","695","696"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/index.js",[],["697","698"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/App.js",[],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/PagesRoutes.js",["699"],"import React, {useState} from \"react\";\nimport SideNavBar from \"../components/SideBar/SideNavBar\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Bookings from \"./Bookings\";\nimport About from \"./About\";\nimport Support from \"./Support\";\nimport MotoristRegistration from './MotoristRegistration';\nimport AttendantRegistration from \"./AttendantRegistration\";\nimport ParkingLot from \"./ParkingLot\";\nimport ParkingLotDetails from \"./ParkingLotDetails\";\nimport AttendantPage from \"./AttendantPage\";\nimport BookingDetails from \"./BookingDetails\";\nimport AccountSettingsAdmin from \"./AccountSettingsAdmin\";\nimport AccountSettingsAttendant from \"./AccountSettingsAttendant\";\nimport AccountSettingsMotorist from \"./AccountSettingsMotorist\";\nimport BlacklistRegistration from \"./BlacklistRegistration\";\nimport BlackListAdmin from \"./BlackListAdmin\";\n\nexport default function PagesRoutes() {\n\n\n  return (\n    <>\n      <Router>\n        <SideNavBar />\n        <Switch>\n          <Route exact path=\"/\" component={Home}></Route>\n          <Route exact path=\"/booking\" component={Bookings}></Route>\n          <Route exact path=\"/bookingDetails\" component={BookingDetails}></Route>\n          <Route exact path=\"/about\" component={About}></Route>\n          <Route exact path=\"/support\" component={Support}></Route>\n          <Route exact path=\"/motoristRegistration\" component={MotoristRegistration}></Route>\n          <Route exact path=\"/attendantRegistration\" component={AttendantRegistration}></Route>\n          <Route exact path=\"/parkingLot\" component={ParkingLot}></Route>\n          <Route exact path=\"/parkingLotsDetails\" component={ParkingLotDetails}></Route>\n          <Route exact path=\"/attendantsList\" component={AttendantPage}></Route>\n          <Route exact path=\"/accountAdmin\" component={AccountSettingsAdmin}></Route>\n          <Route exact path=\"/accountAttendant\" component={AccountSettingsAttendant}></Route>\n          <Route exact path=\"/accountMotorist\" component={AccountSettingsMotorist}></Route>\n          <Route exact path=\"/blackListRegistration\" component={BlacklistRegistration}></Route>\n          <Route exact path=\"/defaulterList\" component={BlackListAdmin}></Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\n","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/Home.js",["700","701","702","703","704","705","706","707","708"],"import * as React from 'react';\nimport {useEffect, useState} from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nimport AppUserService, {login} from \"../service/AppUserService\";\nimport {Form} from \"../components/UseForm\";\nimport {useHistory} from \"react-router-dom\";\nimport ParkPic from \"../components/img/brydon-mccluskey-vMneecAwo34-unsplash.jpg\"\n\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      {' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\n//login details initialized\nconst initialFieldValues = {\n  username: \"\",\n  password: \"\",\n};\n\n\nexport default function Home() {\n\n  const [loginDetail, setLoginDetail] = useState(initialFieldValues);\n  const [currentPage, setCurrentPage] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n\n    const history = useHistory();\n\n\n        const handleInputChange = e =>{\n\n            const {name, value} = e.target\n            setLoginDetail({\n                ...loginDetail,\n                [name]: value,\n            })\n        }\n\n\n    const refreshPage = () =>{\n        setCurrentPage(null);\n        setCurrentIndex(-1);\n    }\n\n\n      const handleSubmit = (event) => {\n        event.preventDefault();\n         //alert(\"logins submitted\");\n\n          if(loginDetail.username === \"\" || loginDetail.password === \"\"){\n              alert(\"email or password is missing\");\n          }else {\n\n             alert(\"login details submitted\");\n\n              const data = {\n                  username: loginDetail.username,\n                  password: loginDetail.password,\n              }\n\n              AppUserService.login(data).then(response => {\n                  if(response.data === null) {\n                      alert(\"error login check if email or password is correct\");\n                  }else{\n\n                      localStorage.setItem(\"user\", JSON.stringify(response.data));\n\n                      const isAdmin = JSON.parse(atob(response.data.split('.')[1])).roles[0] === 'ROLE_ADMIN';\n                      const isAttendant = JSON.parse(atob(response.data.split('.')[1])).roles[0] === 'ROLE_ATTENDANT';\n                      const isMotorist = JSON.parse(atob(response.data.split('.')[1])).roles[0] === 'ROLE_MOTORIST';\n                      const email = JSON.parse(atob(response.data.split('.')[1])).sub;\n                      console.log(email);\n\n                      console.log(isAdmin);\n                      console.log(response);\n                      //refreshPage();\n                      history.push(\"./about\");\n                      window.location.reload(true);\n                      const retrievedPerson = JSON.parse(localStorage.getItem('user'));\n                      console.log(retrievedPerson);\n                  }\n              })\n                  .catch(error => {\n                      alert(\"error login check if email or password is correct\");\n                      console.log(error)\n                  });\n\n          }\n      };\n\n    const logout = () => {\n        localStorage.removeItem(\"user\");\n    };\n\n\n\n\n  return (\n      <>\n\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n\n        >\n            <img src={ParkPic} />\n        </Grid>\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <Box component=\"form\" noValidate  sx={{ mt: 1 }}>\n                <Form onSubmit={handleSubmit}>\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    label=\"Email Address\"\n                    name=\"username\"\n                    value={loginDetail.username}\n                    onChange={handleInputChange}\n                    autoComplete=\"email\"\n                    autoFocus\n                />\n                <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    value={loginDetail.password}\n                    onChange={handleInputChange}\n                    autoComplete=\"current-password\"\n                />\n\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n                onClick={handleSubmit}\n              >\n                Sign In\n              </Button>\n                </Form>\n              <Grid container>\n                <Grid item>\n                  <Link href=\"/MotoristRegistration\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n              <Copyright sx={{ mt: 5 }} />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n      </>\n  );\n}\n\n\n","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/About.js",[],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/Bookings.js",["709","710","711","712","713","714"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/Support.js",["715","716"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/AttendantRegistration.js",["717"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/ParkingLot.js",["718","719","720"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/AttendantPage.js",["721","722","723","724","725","726","727"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/BookingDetails.js",["728","729","730","731","732","733"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/ParkingLotDetails.js",["734","735"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/AccountSettingsAdmin.js",[],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/AccountSettingsAttendant.js",[],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/AccountSettingsMotorist.js",[],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/SideBar/SideNavBar.js",["736","737"],"import AuthService from \"../../service/auth.service\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport * as React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport {MotoristSideMenu} from \"./MotoristSideMenu\";\nimport {AttendantSideMenu} from \"./AttendantSideMenu\";\nimport {AdminSideMenu} from \"./AdminSideMenu\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {styled, useTheme} from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport {SideMenu} from \"./SideMenu\";\n\nconst drawerWidth = 240;\n\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: `-${drawerWidth}px`,\n        ...(open && {\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginLeft: 0,\n        }),\n    }),\n);\n\nconst AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n    transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: `${drawerWidth}px`,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }),\n}));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n}));\n\nexport default function SideNavBar() {\n\n\n    //from prev code\n    const [isAuthenticated, setIsAuthenticated] = React.useState(false);\n    const [unknownPage, setUnknownPage] = useState(false);\n    const[motoristPage, setMotoristPage] = useState(false);\n    const[attendantPage, setAttendantPage] = useState(false);\n    const[adminPage, setAdminPage] = useState(false);\n    const [currentUser, setCurrentUser] = useState(undefined);\n\n    const history = useHistory();\n\n\n    useEffect(() =>{\n        const user = AuthService.getCurrentUser();\n\n        //const isAdmin = JSON.parse(atob(user.split('.')[1])).role === 'ROLE_MOTORIST';\n\n        if(user){\n            setCurrentUser(user);\n            setMotoristPage(JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_MOTORIST');\n            setAttendantPage(JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ATTENDANT');\n            setAdminPage(JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN');\n        }else {\n            setUnknownPage(true);\n        }\n    }, []);\n\n\n\n\n    const logout = () =>{\n        setOpen(false);\n        setIsAuthenticated(false);\n        console.log(\"loggedInUser:\" + isAuthenticated);\n        history.push(\"./\");\n        window.location.reload(true);\n        AuthService.logout();\n    }\n\n\n    const parseJwt = (token) => {\n        try {\n            return JSON.parse(atob(token.split(\".\")[1]));\n        } catch (e) {\n            return null;\n        }\n    };\n\n    const verifyTokenExp = () => {\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n        if (user) {\n            const decodedJwt = parseJwt(user);\n\n            if (decodedJwt.exp * 1000 < Date.now()) {\n                alert(\"time expired you are logged out\");\n                logout();\n            }\n        }\n    } ;\n\n\n    useEffect(() =>{\n        verifyTokenExp();\n    }, []);\n\n/*\n\n\n    useEffect(() =>{\n        const user = AuthService.getCurrentUser();\n        const time = JSON.parse(atob(user.split('.')[1])).exp\n\n        if (time < Date.now() / 1000) {\n            history.push(\"./Home\");\n            localStorage.clear();\n        }\n    }, []);\n\n\n*/\n\n\n\n\n\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <Box sx={{ display: 'flex' }}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" open={open}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        sx={{ mr: 2, ...(open && { display: 'none' }) }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap component=\"div\">\n                        Parking App\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                sx={{\n                    width: drawerWidth,\n                    flexShrink: 0,\n                    '& .MuiDrawer-paper': {\n                        width: drawerWidth,\n                        boxSizing: 'border-box',\n                    },\n                }}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n            >\n                <DrawerHeader>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </DrawerHeader>\n                <Divider />\n                <div>\n\n                    {motoristPage && (\n\n                        MotoristSideMenu.map((menuitem, index) => {\n                            return (\n                                <List>\n                                    <div key={index}>\n                                        <Link to={menuitem.path}>\n                                        <MenuItem onClick={handleDrawerClose}>\n                                            <li key={index}>\n                                                    {menuitem.icon}\n                                                    {menuitem.title}\n                                            </li>\n                                        </MenuItem>\n                                        </Link>\n                                    </div>\n                                </List>\n                            );\n                        })\n                    )\n                    }\n                    {attendantPage && (\n                        AttendantSideMenu.map((menuitem, index) => {\n                            return (\n                                <List>\n                                    <div key={index}>\n                                        <Link to={menuitem.path}>\n                                        <MenuItem onClick={handleDrawerClose}>\n                                            <li key={index}>\n                                                    {menuitem.icon}\n                                                    {menuitem.title}\n                                            </li>\n                                        </MenuItem>\n                                        </Link>\n                                    </div>\n                                </List>\n                            );\n                        }))\n                    }\n                    {adminPage && (\n                        AdminSideMenu.map((menuitem, index) => {\n                            return (\n                                <List>\n                                    <div key={index}>\n                                        <Link to={menuitem.path}>\n                                        <MenuItem onClick={handleDrawerClose}>\n                                                    <li key={index}>\n                                                    {menuitem.icon}\n                                                    {menuitem.title}\n                                                    </li>\n                                        </MenuItem>\n                                        </Link>\n                                    </div>\n                                </List>\n                            );\n                        }))\n                    }\n                    {unknownPage && (\n                        SideMenu.map((menuitem, index) => {\n                        return (\n                            <div key={index}>\n                                        <Link to={menuitem.path} >\n                                            <MenuItem onClick={handleDrawerClose}>\n                                            <li key={index} >\n                                            {menuitem.icon}\n                                            {menuitem.title}\n                                            </li>\n                                            </MenuItem>\n                                        </Link>\n                            </div>\n                        );\n                    }))\n                    }\n                    <Divider />\n                    <List>\n                        <div><MenuItem onClick={logout}>Logout</MenuItem></div>\n                    </List>\n                </div>\n            </Drawer>\n            <Main open={open}>\n\n            </Main>\n        </Box>\n    );\n}\n","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/auth.service.js",["738"],"\nconst logout = () =>{\n    localStorage.removeItem(\"user\");\n};\n\nconst getCurrentUser = () =>{\n    return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nexport default {\n    logout,\n    getCurrentUser,\n}\n\n\n\n","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/AppUserService.js",["739"],"import http from \"./http-common\"\n\n\n\n\nconst login = data => {\n    return http.post(\"/apiv1/appUser/login\", data);\n};\n\n\nconst refreshToken = () =>{\n    return http.get(\"/apiv1/appUser/token/refresh\");\n}\n\n\n\nexport default {\n    login,\n    refreshToken,\n};","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/ParkingLotService.js",["740","741"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/UseForm.js",[],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/ParkingDetailService.js",["742","743"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/DataService.js",["744"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/ParkingLotsWithDatesService.js",["745"],"import http from \"./http-common\"\n\nconst getAll = () => {\n    return http.get(\"/apiv1/parkanddate/all\");\n};\n\nconst getByDateOnly = date => {\n    return http.get(`/apiv1/parkanddate/get/${date}`);\n};\n\n\nconst getParkingData = locationName => {\n    return http.get(`/apiv1/parkanddate/getByLocation/${locationName}`);\n};\n\n///get/bylocanddate\nconst getParkingDataSearch = data => {\n    return http.post(\"/apiv1/parkanddate/get/bylocanddate\", data);\n};\n\n\nexport default {\n    getAll,\n    getByDateOnly,\n    getParkingData,\n    getParkingDataSearch,\n};","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/MotoristService.js",["746"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/AdminServices.js",["747"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/BookingService.js",["748","749"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/Controls.js",[],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/http-common.js",[],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/DatePicker.js",[],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/Time.js",[],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/Dropdown.js",["750","751"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/BookingTime.js",[],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/BookingDate.js",[],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/BasicSelect.js",["752","753","754","755"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/MuiButton.js",[],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/Checkbox.js",[],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/MuiSelect.js",[],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/RadioGroup.js",["756"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/controls/Input.js",["757"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/SideBar/AdminSideMenu.js",["758"],"import React from \"react\"\nimport * as AiIcons from \"react-icons/ai\";\nimport * as MdIcons from \"react-icons/md\";\nimport {MdAccountCircle} from \"react-icons/md\";\nimport {FcAbout} from \"react-icons/fc\";\nimport {BiDetail, CgDetailsMore, RiParkingBoxLine} from \"react-icons/all\";\n\n\nexport const AdminSideMenu = [\n    {\n        title: 'Home',\n        path: '/',\n        icon: <AiIcons.AiOutlineHome />,\n        className: 'nav-text'\n    },\n    {\n        title: 'Bookings',\n        path: '/booking',\n        icon: <AiIcons.AiOutlineCar />,\n        className: 'nav-text'\n    },\n    {\n        title: 'Attendant Registration',\n        path: '/attendantRegistration',\n        icon: <AiIcons.AiOutlineBook />,\n        className: 'nav-text'\n    },\n    {\n        title: 'Motorist Registration',\n        path: '/motoristRegistration',\n        icon: <AiIcons.AiOutlineBook />,\n        className: 'nav-text'\n    },\n    {\n        title: 'BlackList Registration',\n        path: '/blackListRegistration',\n        icon: <AiIcons.AiOutlineBook />,\n        className: 'nav-text'\n    },\n    {\n        title: 'ParkingLot Registration',\n        path: '/parkingLot',\n        icon: <RiParkingBoxLine />,\n        className: 'nav-text'\n    },\n    {\n        title: 'ParkingLots',\n        path: '/parkingLotsDetails',\n        icon: <BiDetail />,\n        className: 'nav-text'\n    },\n    {\n        title: 'AttendantsList',\n        path: '/attendantsList',\n        icon: <CgDetailsMore />,\n        className: 'nav-text'\n    },\n    {\n        title: 'BookingDetails',\n        path: '/bookingDetails',\n        icon: <AiIcons.AiOutlineBook />,\n        className: 'nav-text'\n    },\n    {\n        title: 'BlackList',\n        path: '/defaulterList',\n        icon: <CgDetailsMore />,\n        className: 'nav-text'\n    },\n    {\n        title: 'Account',\n        path: '/accountAdmin',\n        icon: <MdAccountCircle />,\n        className: 'nav-text'\n    },\n    {\n        title: 'Support',\n        path: '/support',\n        icon: <MdIcons.MdHelpOutline />,\n        className: 'nav-text'\n    },\n    {\n        title: 'About',\n        path: '/about',\n        icon: <AiIcons.AiOutlineInfoCircle />,\n        className: 'nav-text'\n    },\n]\n","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/SideBar/AttendantSideMenu.js",["759"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/AttendantService.js",["760"],"import http from \"./http-common\"\n\nconst changePassword = data =>{\n    return http.put(\"/apiv1/attendant/updatePassword\", data);\n}\n\nconst getAttendantInfo = email =>{\n    return http.get(`/apiv1/attendant/get/${email}`);\n}\n\nconst getAttendantInfoTwo = email =>{\n    return http.get(`/apiv1/attendant/gettwo/${email}`);\n}\n\nconst getAttendant = id =>{\n    return http.get(`/apiv1/attendant/getDetails/${id}`);\n}\n\nconst updateAttendant = data =>{\n    return http.put(\"/apiv1/attendant/update\", data);\n}\n\nconst removeAttendant = email =>{\n    return http.delete(`/apiv1/attendant/mail/${email}`);\n}\n\n\n\nexport default {\n    changePassword,\n    getAttendantInfo,\n    getAttendant,\n    updateAttendant,\n    removeAttendant,\n    getAttendantInfoTwo\n};","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/MotoristRegistration.js",[],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/SideBar/MotoristSideMenu.js",["761"],"import React from \"react\"\nimport * as AiIcons from \"react-icons/ai\";\nimport * as MdIcons from \"react-icons/md\";\nimport {MdAccountCircle} from \"react-icons/md\";\nimport {FcAbout} from \"react-icons/fc\";\n\n\nexport const MotoristSideMenu = [\n    {\n        title: 'Home',\n        path: '/',\n        icon: <AiIcons.AiOutlineHome />,\n        className: 'nav-text'\n    },\n    {\n        title: 'Bookings',\n        path: '/booking',\n        icon: <AiIcons.AiOutlineCar />,\n        className: 'nav-text'\n    },\n    {\n        title: 'Registration',\n        path: '/motoristRegistration',\n        icon: <AiIcons.AiOutlineBook />,\n        className: 'nav-text'\n    },\n    {\n        title: 'Account',\n        path: '/accountMotorist',\n        icon: <MdAccountCircle />,\n        className: 'nav-text'\n    },\n    {\n        title: 'Support',\n        path: '/support',\n        icon: <MdIcons.MdHelpOutline />,\n        className: 'nav-text'\n    },\n    {\n        title: 'About',\n        path: '/about',\n        icon: <AiIcons.AiOutlineInfoCircle />,\n        className: 'nav-text'\n    },\n]\n","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/SideBar/SideMenu.js",["762","763"],"import React from \"react\"\nimport * as AiIcons from \"react-icons/ai\";\nimport {FcAbout} from \"react-icons/fc\";\nimport {GiArchiveRegister} from \"react-icons/gi\"\n\n\nexport const SideMenu = [\n    {\n        title: 'Home',\n        path: '/',\n        icon: <AiIcons.AiOutlineHome />,\n        className: 'nav-text'\n    },\n    {\n        title: 'Registration',\n        path: '/motoristRegistration',\n        icon: <AiIcons.AiOutlineBook />,\n        className: 'nav-text'\n    },\n    {\n        title: 'About',\n        path: '/about',\n        icon: <AiIcons.AiOutlineInfoCircle />,\n        className: 'nav-text'\n    },\n\n\n]\n","/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/BlacklistRegistration.js",["764"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/BlackListAdmin.js",["765","766","767","768","769","770","771","772","773"],"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/service/BlackListServices.js",["774"],"import http from \"./http-common\"\n\nconst registerDefaulter = data =>{\n    return http.post(\"/apiv1/blacklist/save\", data);\n}\n\nconst removeDefaulter = numberPlate =>{\n    return http.delete(`/apiv1/blacklist/${numberPlate}`);\n}\n\nconst getDefaulter = numberPlate =>{\n    return http.get(`/apiv1/blacklist/${numberPlate}`);\n}\n\nconst getAllDefaulters = () =>{\n    return http.get(\"/apiv1/blacklist/all\");\n}\n\n\n\nexport default {\n    registerDefaulter,\n    removeDefaulter,\n    getDefaulter,\n    getAllDefaulters,\n};",{"ruleId":"775","replacedBy":"776"},{"ruleId":"777","replacedBy":"778"},{"ruleId":"779","severity":1,"message":"780","line":23,"column":8,"nodeType":"781","messageId":"782","endLine":23,"endColumn":16},{"ruleId":"779","severity":1,"message":"783","line":24,"column":8,"nodeType":"781","messageId":"782","endLine":24,"endColumn":20},{"ruleId":"779","severity":1,"message":"784","line":25,"column":8,"nodeType":"781","messageId":"782","endLine":25,"endColumn":20},{"ruleId":"779","severity":1,"message":"785","line":26,"column":8,"nodeType":"781","messageId":"782","endLine":26,"endColumn":17},{"ruleId":"779","severity":1,"message":"786","line":27,"column":8,"nodeType":"781","messageId":"782","endLine":27,"endColumn":16},{"ruleId":"779","severity":1,"message":"787","line":28,"column":8,"nodeType":"781","messageId":"782","endLine":28,"endColumn":12},{"ruleId":"779","severity":1,"message":"788","line":83,"column":12,"nodeType":"781","messageId":"782","endLine":83,"endColumn":20},{"ruleId":"779","severity":1,"message":"789","line":87,"column":12,"nodeType":"781","messageId":"782","endLine":87,"endColumn":23},{"ruleId":"779","severity":1,"message":"790","line":106,"column":11,"nodeType":"781","messageId":"782","endLine":106,"endColumn":16},{"ruleId":"779","severity":1,"message":"791","line":119,"column":11,"nodeType":"781","messageId":"782","endLine":119,"endColumn":22},{"ruleId":"779","severity":1,"message":"792","line":122,"column":11,"nodeType":"781","messageId":"782","endLine":122,"endColumn":22},{"ruleId":"779","severity":1,"message":"793","line":4,"column":8,"nodeType":"781","messageId":"782","endLine":4,"endColumn":21},{"ruleId":"779","severity":1,"message":"794","line":16,"column":19,"nodeType":"781","messageId":"782","endLine":16,"endColumn":28},{"ruleId":"779","severity":1,"message":"795","line":17,"column":25,"nodeType":"781","messageId":"782","endLine":17,"endColumn":30},{"ruleId":"779","severity":1,"message":"796","line":18,"column":8,"nodeType":"781","messageId":"782","endLine":18,"endColumn":25},{"ruleId":"779","severity":1,"message":"797","line":19,"column":15,"nodeType":"781","messageId":"782","endLine":19,"endColumn":22},{"ruleId":"779","severity":1,"message":"798","line":20,"column":8,"nodeType":"781","messageId":"782","endLine":20,"endColumn":16},{"ruleId":"779","severity":1,"message":"799","line":21,"column":8,"nodeType":"781","messageId":"782","endLine":21,"endColumn":28},{"ruleId":"779","severity":1,"message":"800","line":22,"column":8,"nodeType":"781","messageId":"782","endLine":22,"endColumn":32},{"ruleId":"779","severity":1,"message":"801","line":23,"column":8,"nodeType":"781","messageId":"782","endLine":23,"endColumn":31},{"ruleId":"779","severity":1,"message":"802","line":25,"column":8,"nodeType":"781","messageId":"782","endLine":25,"endColumn":13},{"ruleId":"779","severity":1,"message":"803","line":48,"column":7,"nodeType":"781","messageId":"782","endLine":48,"endColumn":18},{"ruleId":"779","severity":1,"message":"804","line":55,"column":10,"nodeType":"781","messageId":"782","endLine":55,"endColumn":21},{"ruleId":"779","severity":1,"message":"805","line":56,"column":10,"nodeType":"781","messageId":"782","endLine":56,"endColumn":22},{"ruleId":"779","severity":1,"message":"806","line":126,"column":19,"nodeType":"781","messageId":"782","endLine":126,"endColumn":30},{"ruleId":"779","severity":1,"message":"807","line":127,"column":19,"nodeType":"781","messageId":"782","endLine":127,"endColumn":29},{"ruleId":"779","severity":1,"message":"808","line":146,"column":11,"nodeType":"781","messageId":"782","endLine":146,"endColumn":17},{"ruleId":"779","severity":1,"message":"809","line":150,"column":11,"nodeType":"781","messageId":"782","endLine":150,"endColumn":25},{"ruleId":"779","severity":1,"message":"810","line":154,"column":9,"nodeType":"781","messageId":"782","endLine":154,"endColumn":18},{"ruleId":"811","severity":1,"message":"812","line":187,"column":13,"nodeType":"813","endLine":187,"endColumn":34},{"ruleId":"779","severity":1,"message":"814","line":12,"column":3,"nodeType":"781","messageId":"782","endLine":12,"endColumn":17},{"ruleId":"779","severity":1,"message":"815","line":13,"column":3,"nodeType":"781","messageId":"782","endLine":13,"endColumn":10},{"ruleId":"779","severity":1,"message":"797","line":20,"column":10,"nodeType":"781","messageId":"782","endLine":20,"endColumn":17},{"ruleId":"779","severity":1,"message":"816","line":26,"column":8,"nodeType":"781","messageId":"782","endLine":26,"endColumn":13},{"ruleId":"779","severity":1,"message":"817","line":40,"column":8,"nodeType":"781","messageId":"782","endLine":40,"endColumn":21},{"ruleId":"779","severity":1,"message":"818","line":41,"column":8,"nodeType":"781","messageId":"782","endLine":41,"endColumn":13},{"ruleId":"779","severity":1,"message":"819","line":42,"column":8,"nodeType":"781","messageId":"782","endLine":42,"endColumn":14},{"ruleId":"779","severity":1,"message":"820","line":46,"column":9,"nodeType":"781","messageId":"782","endLine":46,"endColumn":13},{"ruleId":"779","severity":1,"message":"821","line":84,"column":10,"nodeType":"781","messageId":"782","endLine":84,"endColumn":18},{"ruleId":"779","severity":1,"message":"822","line":91,"column":10,"nodeType":"781","messageId":"782","endLine":91,"endColumn":19},{"ruleId":"779","severity":1,"message":"823","line":205,"column":7,"nodeType":"781","messageId":"782","endLine":205,"endColumn":23},{"ruleId":"779","severity":1,"message":"824","line":261,"column":9,"nodeType":"781","messageId":"782","endLine":261,"endColumn":31},{"ruleId":"779","severity":1,"message":"825","line":266,"column":9,"nodeType":"781","messageId":"782","endLine":266,"endColumn":33},{"ruleId":"826","severity":1,"message":"827","line":29,"column":1,"nodeType":"828","endLine":36,"endColumn":3},{"ruleId":"779","severity":1,"message":"829","line":1,"column":17,"nodeType":"781","messageId":"782","endLine":1,"endColumn":25},{"ruleId":"779","severity":1,"message":"794","line":1,"column":27,"nodeType":"781","messageId":"782","endLine":1,"endColumn":36},{"ruleId":"779","severity":1,"message":"830","line":15,"column":15,"nodeType":"781","messageId":"782","endLine":15,"endColumn":20},{"ruleId":"779","severity":1,"message":"831","line":15,"column":29,"nodeType":"781","messageId":"782","endLine":15,"endColumn":37},{"ruleId":"779","severity":1,"message":"832","line":15,"column":39,"nodeType":"781","messageId":"782","endLine":15,"endColumn":44},{"ruleId":"779","severity":1,"message":"833","line":15,"column":51,"nodeType":"781","messageId":"782","endLine":15,"endColumn":58},{"ruleId":"775","replacedBy":"834"},{"ruleId":"777","replacedBy":"835"},{"ruleId":"826","severity":1,"message":"836","line":4,"column":1,"nodeType":"828","endLine":27,"endColumn":2},{"ruleId":"826","severity":1,"message":"836","line":4,"column":1,"nodeType":"828","endLine":19,"endColumn":2},{"ruleId":"779","severity":1,"message":"837","line":90,"column":10,"nodeType":"781","messageId":"782","endLine":90,"endColumn":16},{"ruleId":"779","severity":1,"message":"838","line":91,"column":16,"nodeType":"781","messageId":"782","endLine":91,"endColumn":20},{"ruleId":"779","severity":1,"message":"839","line":92,"column":8,"nodeType":"781","messageId":"782","endLine":92,"endColumn":24},{"ruleId":"779","severity":1,"message":"840","line":96,"column":5,"nodeType":"781","messageId":"782","endLine":96,"endColumn":9},{"ruleId":"779","severity":1,"message":"841","line":97,"column":5,"nodeType":"781","messageId":"782","endLine":97,"endColumn":15},{"ruleId":"779","severity":1,"message":"842","line":98,"column":5,"nodeType":"781","messageId":"782","endLine":98,"endColumn":10},{"ruleId":"779","severity":1,"message":"843","line":99,"column":5,"nodeType":"781","messageId":"782","endLine":99,"endColumn":14},{"ruleId":"779","severity":1,"message":"844","line":100,"column":5,"nodeType":"781","messageId":"782","endLine":100,"endColumn":14},{"ruleId":"779","severity":1,"message":"845","line":101,"column":5,"nodeType":"781","messageId":"782","endLine":101,"endColumn":14},{"ruleId":"779","severity":1,"message":"846","line":102,"column":5,"nodeType":"781","messageId":"782","endLine":102,"endColumn":13},{"ruleId":"779","severity":1,"message":"814","line":103,"column":5,"nodeType":"781","messageId":"782","endLine":103,"endColumn":19},{"ruleId":"779","severity":1,"message":"815","line":104,"column":5,"nodeType":"781","messageId":"782","endLine":104,"endColumn":12},{"ruleId":"779","severity":1,"message":"847","line":109,"column":8,"nodeType":"781","messageId":"782","endLine":109,"endColumn":22},{"ruleId":"779","severity":1,"message":"848","line":110,"column":8,"nodeType":"781","messageId":"782","endLine":110,"endColumn":20},{"ruleId":"779","severity":1,"message":"797","line":112,"column":10,"nodeType":"781","messageId":"782","endLine":112,"endColumn":17},{"ruleId":"779","severity":1,"message":"849","line":115,"column":8,"nodeType":"781","messageId":"782","endLine":115,"endColumn":14},{"ruleId":"779","severity":1,"message":"850","line":116,"column":8,"nodeType":"781","messageId":"782","endLine":116,"endColumn":19},{"ruleId":"779","severity":1,"message":"816","line":118,"column":8,"nodeType":"781","messageId":"782","endLine":118,"endColumn":13},{"ruleId":"779","severity":1,"message":"851","line":119,"column":8,"nodeType":"781","messageId":"782","endLine":119,"endColumn":22},{"ruleId":"779","severity":1,"message":"794","line":121,"column":19,"nodeType":"781","messageId":"782","endLine":121,"endColumn":28},{"ruleId":"779","severity":1,"message":"840","line":4,"column":5,"nodeType":"781","messageId":"782","endLine":4,"endColumn":9},{"ruleId":"779","severity":1,"message":"841","line":5,"column":5,"nodeType":"781","messageId":"782","endLine":5,"endColumn":15},{"ruleId":"779","severity":1,"message":"814","line":12,"column":5,"nodeType":"781","messageId":"782","endLine":12,"endColumn":19},{"ruleId":"779","severity":1,"message":"815","line":13,"column":5,"nodeType":"781","messageId":"782","endLine":13,"endColumn":12},{"ruleId":"779","severity":1,"message":"797","line":19,"column":10,"nodeType":"781","messageId":"782","endLine":19,"endColumn":17},{"ruleId":"779","severity":1,"message":"852","line":24,"column":8,"nodeType":"781","messageId":"782","endLine":24,"endColumn":22},{"ruleId":"779","severity":1,"message":"853","line":25,"column":8,"nodeType":"781","messageId":"782","endLine":25,"endColumn":18},{"ruleId":"779","severity":1,"message":"854","line":26,"column":8,"nodeType":"781","messageId":"782","endLine":26,"endColumn":17},{"ruleId":"779","severity":1,"message":"855","line":27,"column":8,"nodeType":"781","messageId":"782","endLine":27,"endColumn":28},{"ruleId":"779","severity":1,"message":"856","line":64,"column":12,"nodeType":"781","messageId":"782","endLine":64,"endColumn":30},{"ruleId":"779","severity":1,"message":"805","line":65,"column":12,"nodeType":"781","messageId":"782","endLine":65,"endColumn":24},{"ruleId":"779","severity":1,"message":"830","line":66,"column":12,"nodeType":"781","messageId":"782","endLine":66,"endColumn":17},{"ruleId":"779","severity":1,"message":"857","line":66,"column":19,"nodeType":"781","messageId":"782","endLine":66,"endColumn":27},{"ruleId":"779","severity":1,"message":"858","line":122,"column":11,"nodeType":"781","messageId":"782","endLine":122,"endColumn":31},{"ruleId":"779","severity":1,"message":"859","line":140,"column":11,"nodeType":"781","messageId":"782","endLine":140,"endColumn":27},{"ruleId":"779","severity":1,"message":"860","line":15,"column":7,"nodeType":"781","messageId":"782","endLine":15,"endColumn":16},{"ruleId":"826","severity":1,"message":"827","line":35,"column":1,"nodeType":"828","endLine":43,"endColumn":3},{"ruleId":"779","severity":1,"message":"861","line":8,"column":16,"nodeType":"781","messageId":"782","endLine":8,"endColumn":23},{"ruleId":"779","severity":1,"message":"860","line":24,"column":7,"nodeType":"781","messageId":"782","endLine":24,"endColumn":16},{"ruleId":"826","severity":1,"message":"827","line":46,"column":1,"nodeType":"828","endLine":55,"endColumn":3},{"ruleId":"826","severity":1,"message":"827","line":27,"column":1,"nodeType":"828","endLine":32,"endColumn":3},{"ruleId":"775","replacedBy":"862"},{"ruleId":"777","replacedBy":"863"},{"ruleId":"779","severity":1,"message":"864","line":37,"column":13,"nodeType":"781","messageId":"782","endLine":37,"endColumn":18},{"ruleId":"779","severity":1,"message":"816","line":1,"column":9,"nodeType":"781","messageId":"782","endLine":1,"endColumn":14},{"ruleId":"779","severity":1,"message":"865","line":2,"column":8,"nodeType":"781","messageId":"782","endLine":2,"endColumn":10},{"ruleId":"779","severity":1,"message":"866","line":6,"column":8,"nodeType":"781","messageId":"782","endLine":6,"endColumn":18},{"ruleId":"779","severity":1,"message":"867","line":8,"column":7,"nodeType":"781","messageId":"782","endLine":8,"endColumn":17},{"ruleId":"826","severity":1,"message":"827","line":50,"column":1,"nodeType":"828","endLine":53,"endColumn":3},{"ruleId":"826","severity":1,"message":"827","line":35,"column":1,"nodeType":"828","endLine":40,"endColumn":2},{"ruleId":"826","severity":1,"message":"827","line":14,"column":1,"nodeType":"828","endLine":17,"endColumn":3},{"ruleId":"779","severity":1,"message":"837","line":1,"column":10,"nodeType":"781","messageId":"782","endLine":1,"endColumn":16},{"ruleId":"779","severity":1,"message":"838","line":2,"column":16,"nodeType":"781","messageId":"782","endLine":2,"endColumn":20},{"ruleId":"779","severity":1,"message":"839","line":3,"column":8,"nodeType":"781","messageId":"782","endLine":3,"endColumn":24},{"ruleId":"779","severity":1,"message":"840","line":7,"column":5,"nodeType":"781","messageId":"782","endLine":7,"endColumn":9},{"ruleId":"779","severity":1,"message":"841","line":8,"column":5,"nodeType":"781","messageId":"782","endLine":8,"endColumn":15},{"ruleId":"779","severity":1,"message":"842","line":9,"column":5,"nodeType":"781","messageId":"782","endLine":9,"endColumn":10},{"ruleId":"779","severity":1,"message":"843","line":10,"column":5,"nodeType":"781","messageId":"782","endLine":10,"endColumn":14},{"ruleId":"779","severity":1,"message":"844","line":11,"column":5,"nodeType":"781","messageId":"782","endLine":11,"endColumn":14},{"ruleId":"779","severity":1,"message":"845","line":12,"column":5,"nodeType":"781","messageId":"782","endLine":12,"endColumn":14},{"ruleId":"779","severity":1,"message":"846","line":13,"column":5,"nodeType":"781","messageId":"782","endLine":13,"endColumn":13},{"ruleId":"779","severity":1,"message":"814","line":14,"column":5,"nodeType":"781","messageId":"782","endLine":14,"endColumn":19},{"ruleId":"779","severity":1,"message":"815","line":15,"column":5,"nodeType":"781","messageId":"782","endLine":15,"endColumn":12},{"ruleId":"779","severity":1,"message":"847","line":20,"column":8,"nodeType":"781","messageId":"782","endLine":20,"endColumn":22},{"ruleId":"779","severity":1,"message":"848","line":21,"column":8,"nodeType":"781","messageId":"782","endLine":21,"endColumn":20},{"ruleId":"779","severity":1,"message":"797","line":23,"column":10,"nodeType":"781","messageId":"782","endLine":23,"endColumn":17},{"ruleId":"779","severity":1,"message":"849","line":26,"column":8,"nodeType":"781","messageId":"782","endLine":26,"endColumn":14},{"ruleId":"779","severity":1,"message":"850","line":27,"column":8,"nodeType":"781","messageId":"782","endLine":27,"endColumn":19},{"ruleId":"779","severity":1,"message":"816","line":29,"column":8,"nodeType":"781","messageId":"782","endLine":29,"endColumn":13},{"ruleId":"779","severity":1,"message":"851","line":30,"column":8,"nodeType":"781","messageId":"782","endLine":30,"endColumn":22},{"ruleId":"779","severity":1,"message":"868","line":31,"column":8,"nodeType":"781","messageId":"782","endLine":31,"endColumn":23},{"ruleId":"826","severity":1,"message":"827","line":84,"column":1,"nodeType":"828","endLine":104,"endColumn":3},{"ruleId":"779","severity":1,"message":"814","line":15,"column":5,"nodeType":"781","messageId":"782","endLine":15,"endColumn":19},{"ruleId":"779","severity":1,"message":"815","line":16,"column":5,"nodeType":"781","messageId":"782","endLine":16,"endColumn":12},{"ruleId":"779","severity":1,"message":"869","line":17,"column":5,"nodeType":"781","messageId":"782","endLine":17,"endColumn":10},{"ruleId":"779","severity":1,"message":"870","line":18,"column":5,"nodeType":"781","messageId":"782","endLine":18,"endColumn":9},{"ruleId":"779","severity":1,"message":"797","line":23,"column":10,"nodeType":"781","messageId":"782","endLine":23,"endColumn":17},{"ruleId":"779","severity":1,"message":"798","line":24,"column":8,"nodeType":"781","messageId":"782","endLine":24,"endColumn":16},{"ruleId":"779","severity":1,"message":"871","line":25,"column":8,"nodeType":"781","messageId":"782","endLine":25,"endColumn":14},{"ruleId":"779","severity":1,"message":"816","line":29,"column":8,"nodeType":"781","messageId":"782","endLine":29,"endColumn":13},{"ruleId":"779","severity":1,"message":"852","line":32,"column":8,"nodeType":"781","messageId":"782","endLine":32,"endColumn":22},{"ruleId":"779","severity":1,"message":"854","line":33,"column":8,"nodeType":"781","messageId":"782","endLine":33,"endColumn":17},{"ruleId":"779","severity":1,"message":"855","line":34,"column":8,"nodeType":"781","messageId":"782","endLine":34,"endColumn":28},{"ruleId":"779","severity":1,"message":"853","line":35,"column":8,"nodeType":"781","messageId":"782","endLine":35,"endColumn":18},{"ruleId":"779","severity":1,"message":"872","line":36,"column":8,"nodeType":"781","messageId":"782","endLine":36,"endColumn":18},{"ruleId":"779","severity":1,"message":"873","line":38,"column":8,"nodeType":"781","messageId":"782","endLine":38,"endColumn":28},{"ruleId":"779","severity":1,"message":"874","line":71,"column":12,"nodeType":"781","messageId":"782","endLine":71,"endColumn":26},{"ruleId":"779","severity":1,"message":"875","line":71,"column":28,"nodeType":"781","messageId":"782","endLine":71,"endColumn":45},{"ruleId":"779","severity":1,"message":"876","line":72,"column":12,"nodeType":"781","messageId":"782","endLine":72,"endColumn":28},{"ruleId":"779","severity":1,"message":"877","line":72,"column":30,"nodeType":"781","messageId":"782","endLine":72,"endColumn":49},{"ruleId":"779","severity":1,"message":"856","line":73,"column":12,"nodeType":"781","messageId":"782","endLine":73,"endColumn":30},{"ruleId":"779","severity":1,"message":"805","line":74,"column":12,"nodeType":"781","messageId":"782","endLine":74,"endColumn":24},{"ruleId":"779","severity":1,"message":"878","line":127,"column":11,"nodeType":"781","messageId":"782","endLine":127,"endColumn":18},{"ruleId":"779","severity":1,"message":"840","line":5,"column":5,"nodeType":"781","messageId":"782","endLine":5,"endColumn":9},{"ruleId":"779","severity":1,"message":"841","line":6,"column":5,"nodeType":"781","messageId":"782","endLine":6,"endColumn":15},{"ruleId":"779","severity":1,"message":"814","line":13,"column":5,"nodeType":"781","messageId":"782","endLine":13,"endColumn":19},{"ruleId":"779","severity":1,"message":"815","line":14,"column":5,"nodeType":"781","messageId":"782","endLine":14,"endColumn":12},{"ruleId":"779","severity":1,"message":"870","line":16,"column":5,"nodeType":"781","messageId":"782","endLine":16,"endColumn":9},{"ruleId":"779","severity":1,"message":"797","line":20,"column":10,"nodeType":"781","messageId":"782","endLine":20,"endColumn":17},{"ruleId":"779","severity":1,"message":"879","line":20,"column":19,"nodeType":"781","messageId":"782","endLine":20,"endColumn":23},{"ruleId":"779","severity":1,"message":"871","line":22,"column":8,"nodeType":"781","messageId":"782","endLine":22,"endColumn":14},{"ruleId":"779","severity":1,"message":"796","line":24,"column":8,"nodeType":"781","messageId":"782","endLine":24,"endColumn":25},{"ruleId":"779","severity":1,"message":"880","line":37,"column":12,"nodeType":"781","messageId":"782","endLine":37,"endColumn":26},{"ruleId":"779","severity":1,"message":"881","line":39,"column":12,"nodeType":"781","messageId":"782","endLine":39,"endColumn":33},{"ruleId":"779","severity":1,"message":"805","line":40,"column":12,"nodeType":"781","messageId":"782","endLine":40,"endColumn":24},{"ruleId":"779","severity":1,"message":"882","line":60,"column":11,"nodeType":"781","messageId":"782","endLine":60,"endColumn":22},{"ruleId":"779","severity":1,"message":"824","line":66,"column":11,"nodeType":"781","messageId":"782","endLine":66,"endColumn":33},{"ruleId":"779","severity":1,"message":"840","line":5,"column":5,"nodeType":"781","messageId":"782","endLine":5,"endColumn":9},{"ruleId":"779","severity":1,"message":"841","line":6,"column":5,"nodeType":"781","messageId":"782","endLine":6,"endColumn":15},{"ruleId":"779","severity":1,"message":"814","line":13,"column":5,"nodeType":"781","messageId":"782","endLine":13,"endColumn":19},{"ruleId":"779","severity":1,"message":"815","line":14,"column":5,"nodeType":"781","messageId":"782","endLine":14,"endColumn":12},{"ruleId":"779","severity":1,"message":"870","line":16,"column":5,"nodeType":"781","messageId":"782","endLine":16,"endColumn":9},{"ruleId":"779","severity":1,"message":"797","line":20,"column":10,"nodeType":"781","messageId":"782","endLine":20,"endColumn":17},{"ruleId":"779","severity":1,"message":"879","line":20,"column":19,"nodeType":"781","messageId":"782","endLine":20,"endColumn":23},{"ruleId":"779","severity":1,"message":"871","line":22,"column":8,"nodeType":"781","messageId":"782","endLine":22,"endColumn":14},{"ruleId":"779","severity":1,"message":"796","line":24,"column":8,"nodeType":"781","messageId":"782","endLine":24,"endColumn":25},{"ruleId":"779","severity":1,"message":"883","line":25,"column":8,"nodeType":"781","messageId":"782","endLine":25,"endColumn":21},{"ruleId":"779","severity":1,"message":"884","line":26,"column":8,"nodeType":"781","messageId":"782","endLine":26,"endColumn":19},{"ruleId":"779","severity":1,"message":"880","line":41,"column":12,"nodeType":"781","messageId":"782","endLine":41,"endColumn":26},{"ruleId":"779","severity":1,"message":"885","line":43,"column":12,"nodeType":"781","messageId":"782","endLine":43,"endColumn":37},{"ruleId":"779","severity":1,"message":"805","line":44,"column":12,"nodeType":"781","messageId":"782","endLine":44,"endColumn":24},{"ruleId":"779","severity":1,"message":"882","line":64,"column":11,"nodeType":"781","messageId":"782","endLine":64,"endColumn":22},{"ruleId":"779","severity":1,"message":"824","line":70,"column":11,"nodeType":"781","messageId":"782","endLine":70,"endColumn":33},{"ruleId":"779","severity":1,"message":"860","line":15,"column":7,"nodeType":"781","messageId":"782","endLine":15,"endColumn":16},{"ruleId":"826","severity":1,"message":"827","line":37,"column":1,"nodeType":"828","endLine":44,"endColumn":3},{"ruleId":"826","severity":1,"message":"827","line":25,"column":1,"nodeType":"828","endLine":31,"endColumn":3},{"ruleId":"779","severity":1,"message":"884","line":3,"column":8,"nodeType":"781","messageId":"782","endLine":3,"endColumn":19},{"ruleId":"779","severity":1,"message":"886","line":6,"column":8,"nodeType":"781","messageId":"782","endLine":6,"endColumn":19},{"ruleId":"779","severity":1,"message":"887","line":7,"column":8,"nodeType":"781","messageId":"782","endLine":7,"endColumn":17},{"ruleId":"779","severity":1,"message":"816","line":11,"column":8,"nodeType":"781","messageId":"782","endLine":11,"endColumn":13},{"ruleId":"779","severity":1,"message":"868","line":14,"column":8,"nodeType":"781","messageId":"782","endLine":14,"endColumn":23},{"ruleId":"779","severity":1,"message":"884","line":3,"column":8,"nodeType":"781","messageId":"782","endLine":3,"endColumn":19},{"ruleId":"779","severity":1,"message":"883","line":5,"column":8,"nodeType":"781","messageId":"782","endLine":5,"endColumn":21},{"ruleId":"779","severity":1,"message":"886","line":9,"column":8,"nodeType":"781","messageId":"782","endLine":9,"endColumn":19},{"ruleId":"779","severity":1,"message":"884","line":3,"column":8,"nodeType":"781","messageId":"782","endLine":3,"endColumn":19},{"ruleId":"779","severity":1,"message":"883","line":5,"column":8,"nodeType":"781","messageId":"782","endLine":5,"endColumn":21},{"ruleId":"779","severity":1,"message":"886","line":9,"column":8,"nodeType":"781","messageId":"782","endLine":9,"endColumn":19},{"ruleId":"826","severity":1,"message":"827","line":21,"column":1,"nodeType":"828","endLine":26,"endColumn":3},{"ruleId":"779","severity":1,"message":"794","line":1,"column":29,"nodeType":"781","messageId":"782","endLine":1,"endColumn":38},{"ruleId":"779","severity":1,"message":"888","line":11,"column":8,"nodeType":"781","messageId":"782","endLine":11,"endColumn":14},{"ruleId":"779","severity":1,"message":"889","line":12,"column":8,"nodeType":"781","messageId":"782","endLine":12,"endColumn":20},{"ruleId":"779","severity":1,"message":"890","line":13,"column":8,"nodeType":"781","messageId":"782","endLine":13,"endColumn":19},{"ruleId":"779","severity":1,"message":"891","line":18,"column":9,"nodeType":"781","messageId":"782","endLine":18,"endColumn":25},{"ruleId":"779","severity":1,"message":"892","line":21,"column":8,"nodeType":"781","messageId":"782","endLine":21,"endColumn":19},{"ruleId":"779","severity":1,"message":"893","line":24,"column":9,"nodeType":"781","messageId":"782","endLine":24,"endColumn":23},{"ruleId":"779","severity":1,"message":"894","line":24,"column":25,"nodeType":"781","messageId":"782","endLine":24,"endColumn":42},{"ruleId":"775","replacedBy":"895"},{"ruleId":"777","replacedBy":"896"},{"ruleId":"779","severity":1,"message":"829","line":1,"column":16,"nodeType":"781","messageId":"782","endLine":1,"endColumn":24},{"ruleId":"779","severity":1,"message":"794","line":2,"column":9,"nodeType":"781","messageId":"782","endLine":2,"endColumn":18},{"ruleId":"779","severity":1,"message":"795","line":14,"column":25,"nodeType":"781","messageId":"782","endLine":14,"endColumn":30},{"ruleId":"779","severity":1,"message":"804","line":43,"column":10,"nodeType":"781","messageId":"782","endLine":43,"endColumn":21},{"ruleId":"779","severity":1,"message":"805","line":44,"column":10,"nodeType":"781","messageId":"782","endLine":44,"endColumn":22},{"ruleId":"779","severity":1,"message":"897","line":59,"column":11,"nodeType":"781","messageId":"782","endLine":59,"endColumn":22},{"ruleId":"779","severity":1,"message":"806","line":88,"column":29,"nodeType":"781","messageId":"782","endLine":88,"endColumn":40},{"ruleId":"779","severity":1,"message":"807","line":89,"column":29,"nodeType":"781","messageId":"782","endLine":89,"endColumn":39},{"ruleId":"779","severity":1,"message":"808","line":110,"column":11,"nodeType":"781","messageId":"782","endLine":110,"endColumn":17},{"ruleId":"811","severity":1,"message":"812","line":130,"column":13,"nodeType":"813","endLine":130,"endColumn":34},{"ruleId":"779","severity":1,"message":"840","line":5,"column":5,"nodeType":"781","messageId":"782","endLine":5,"endColumn":9},{"ruleId":"779","severity":1,"message":"821","line":76,"column":10,"nodeType":"781","messageId":"782","endLine":76,"endColumn":18},{"ruleId":"779","severity":1,"message":"898","line":78,"column":25,"nodeType":"781","messageId":"782","endLine":78,"endColumn":39},{"ruleId":"779","severity":1,"message":"880","line":80,"column":10,"nodeType":"781","messageId":"782","endLine":80,"endColumn":24},{"ruleId":"779","severity":1,"message":"899","line":80,"column":26,"nodeType":"781","messageId":"782","endLine":80,"endColumn":43},{"ruleId":"779","severity":1,"message":"822","line":84,"column":10,"nodeType":"781","messageId":"782","endLine":84,"endColumn":19},{"ruleId":"779","severity":1,"message":"798","line":4,"column":8,"nodeType":"781","messageId":"782","endLine":4,"endColumn":16},{"ruleId":"900","severity":1,"message":"901","line":37,"column":8,"nodeType":"902","endLine":37,"endColumn":10,"suggestions":"903"},{"ruleId":"779","severity":1,"message":"794","line":6,"column":16,"nodeType":"781","messageId":"782","endLine":6,"endColumn":25},{"ruleId":"779","severity":1,"message":"904","line":19,"column":8,"nodeType":"781","messageId":"782","endLine":19,"endColumn":24},{"ruleId":"779","severity":1,"message":"856","line":49,"column":12,"nodeType":"781","messageId":"782","endLine":49,"endColumn":30},{"ruleId":"779","severity":1,"message":"805","line":50,"column":12,"nodeType":"781","messageId":"782","endLine":50,"endColumn":24},{"ruleId":"779","severity":1,"message":"905","line":23,"column":8,"nodeType":"781","messageId":"782","endLine":23,"endColumn":25},{"ruleId":"779","severity":1,"message":"880","line":57,"column":12,"nodeType":"781","messageId":"782","endLine":57,"endColumn":26},{"ruleId":"779","severity":1,"message":"899","line":57,"column":28,"nodeType":"781","messageId":"782","endLine":57,"endColumn":45},{"ruleId":"779","severity":1,"message":"881","line":59,"column":12,"nodeType":"781","messageId":"782","endLine":59,"endColumn":33},{"ruleId":"779","severity":1,"message":"906","line":59,"column":35,"nodeType":"781","messageId":"782","endLine":59,"endColumn":59},{"ruleId":"779","severity":1,"message":"805","line":60,"column":12,"nodeType":"781","messageId":"782","endLine":60,"endColumn":24},{"ruleId":"779","severity":1,"message":"907","line":62,"column":12,"nodeType":"781","messageId":"782","endLine":62,"endColumn":27},{"ruleId":"779","severity":1,"message":"880","line":20,"column":12,"nodeType":"781","messageId":"782","endLine":20,"endColumn":26},{"ruleId":"779","severity":1,"message":"899","line":20,"column":28,"nodeType":"781","messageId":"782","endLine":20,"endColumn":45},{"ruleId":"779","severity":1,"message":"885","line":22,"column":12,"nodeType":"781","messageId":"782","endLine":22,"endColumn":37},{"ruleId":"779","severity":1,"message":"908","line":22,"column":39,"nodeType":"781","messageId":"782","endLine":22,"endColumn":67},{"ruleId":"779","severity":1,"message":"805","line":23,"column":12,"nodeType":"781","messageId":"782","endLine":23,"endColumn":24},{"ruleId":"779","severity":1,"message":"909","line":23,"column":26,"nodeType":"781","messageId":"782","endLine":23,"endColumn":41},{"ruleId":"779","severity":1,"message":"856","line":21,"column":12,"nodeType":"781","messageId":"782","endLine":21,"endColumn":30},{"ruleId":"779","severity":1,"message":"805","line":22,"column":12,"nodeType":"781","messageId":"782","endLine":22,"endColumn":24},{"ruleId":"779","severity":1,"message":"789","line":80,"column":12,"nodeType":"781","messageId":"782","endLine":80,"endColumn":23},{"ruleId":"900","severity":1,"message":"910","line":136,"column":8,"nodeType":"902","endLine":136,"endColumn":10,"suggestions":"911"},{"ruleId":"826","severity":1,"message":"827","line":10,"column":1,"nodeType":"828","endLine":13,"endColumn":2},{"ruleId":"826","severity":1,"message":"827","line":17,"column":1,"nodeType":"828","endLine":20,"endColumn":3},{"ruleId":"779","severity":1,"message":"860","line":15,"column":7,"nodeType":"781","messageId":"782","endLine":15,"endColumn":16},{"ruleId":"826","severity":1,"message":"827","line":35,"column":1,"nodeType":"828","endLine":43,"endColumn":3},{"ruleId":"779","severity":1,"message":"860","line":24,"column":7,"nodeType":"781","messageId":"782","endLine":24,"endColumn":16},{"ruleId":"826","severity":1,"message":"827","line":46,"column":1,"nodeType":"828","endLine":55,"endColumn":3},{"ruleId":"826","severity":1,"message":"827","line":27,"column":1,"nodeType":"828","endLine":32,"endColumn":3},{"ruleId":"826","severity":1,"message":"827","line":22,"column":1,"nodeType":"828","endLine":27,"endColumn":3},{"ruleId":"826","severity":1,"message":"827","line":29,"column":1,"nodeType":"828","endLine":36,"endColumn":3},{"ruleId":"826","severity":1,"message":"827","line":84,"column":1,"nodeType":"828","endLine":104,"endColumn":3},{"ruleId":"779","severity":1,"message":"860","line":15,"column":7,"nodeType":"781","messageId":"782","endLine":15,"endColumn":16},{"ruleId":"826","severity":1,"message":"827","line":37,"column":1,"nodeType":"828","endLine":44,"endColumn":3},{"ruleId":"779","severity":1,"message":"829","line":1,"column":17,"nodeType":"781","messageId":"782","endLine":1,"endColumn":25},{"ruleId":"779","severity":1,"message":"794","line":1,"column":27,"nodeType":"781","messageId":"782","endLine":1,"endColumn":36},{"ruleId":"779","severity":1,"message":"830","line":15,"column":15,"nodeType":"781","messageId":"782","endLine":15,"endColumn":20},{"ruleId":"779","severity":1,"message":"831","line":15,"column":29,"nodeType":"781","messageId":"782","endLine":15,"endColumn":37},{"ruleId":"779","severity":1,"message":"832","line":15,"column":39,"nodeType":"781","messageId":"782","endLine":15,"endColumn":44},{"ruleId":"779","severity":1,"message":"833","line":15,"column":51,"nodeType":"781","messageId":"782","endLine":15,"endColumn":58},{"ruleId":"826","severity":1,"message":"836","line":4,"column":1,"nodeType":"828","endLine":27,"endColumn":2},{"ruleId":"826","severity":1,"message":"836","line":4,"column":1,"nodeType":"828","endLine":19,"endColumn":2},{"ruleId":"779","severity":1,"message":"912","line":5,"column":9,"nodeType":"781","messageId":"782","endLine":5,"endColumn":16},{"ruleId":"779","severity":1,"message":"913","line":5,"column":19,"nodeType":"781","messageId":"782","endLine":5,"endColumn":35},{"ruleId":"826","severity":1,"message":"827","line":29,"column":1,"nodeType":"828","endLine":36,"endColumn":3},{"ruleId":"779","severity":1,"message":"912","line":5,"column":9,"nodeType":"781","messageId":"782","endLine":5,"endColumn":16},{"ruleId":"779","severity":1,"message":"912","line":3,"column":9,"nodeType":"781","messageId":"782","endLine":3,"endColumn":16},{"ruleId":"779","severity":1,"message":"914","line":4,"column":9,"nodeType":"781","messageId":"782","endLine":4,"endColumn":26},{"ruleId":"779","severity":1,"message":"821","line":46,"column":12,"nodeType":"781","messageId":"782","endLine":46,"endColumn":20},{"ruleId":"779","severity":1,"message":"873","line":6,"column":8,"nodeType":"781","messageId":"782","endLine":6,"endColumn":28},{"ruleId":"779","severity":1,"message":"915","line":7,"column":8,"nodeType":"781","messageId":"782","endLine":7,"endColumn":22},{"ruleId":"779","severity":1,"message":"916","line":14,"column":8,"nodeType":"781","messageId":"782","endLine":14,"endColumn":14},{"ruleId":"779","severity":1,"message":"890","line":15,"column":8,"nodeType":"781","messageId":"782","endLine":15,"endColumn":19},{"ruleId":"779","severity":1,"message":"880","line":40,"column":12,"nodeType":"781","messageId":"782","endLine":40,"endColumn":26},{"ruleId":"779","severity":1,"message":"899","line":40,"column":28,"nodeType":"781","messageId":"782","endLine":40,"endColumn":45},{"ruleId":"779","severity":1,"message":"885","line":42,"column":12,"nodeType":"781","messageId":"782","endLine":42,"endColumn":37},{"ruleId":"779","severity":1,"message":"908","line":42,"column":39,"nodeType":"781","messageId":"782","endLine":42,"endColumn":67},{"ruleId":"779","severity":1,"message":"805","line":43,"column":12,"nodeType":"781","messageId":"782","endLine":43,"endColumn":24},{"ruleId":"826","severity":1,"message":"827","line":21,"column":1,"nodeType":"828","endLine":26,"endColumn":3},"no-native-reassign",["917"],"no-negated-in-lhs",["918"],"no-unused-vars","'ListItem' is defined but never used.","Identifier","unusedVar","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'Home' is defined but never used.","'anchorEl' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'login' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'DialogActions' is defined but never used.","'useEffect' is defined but never used.","'login' is defined but never used.","'ParkingLotService' is defined but never used.","'UseForm' is defined but never used.","'Controls' is defined but never used.","'AccountSettingsAdmin' is defined but never used.","'AccountSettingsAttendant' is defined but never used.","'AccountSettingsMotorist' is defined but never used.","'About' is defined but never used.","'tokenValues' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'currentIndex' is assigned a value but never used.","'isAttendant' is assigned a value but never used.","'isMotorist' is assigned a value but never used.","'logout' is assigned a value but never used.","'getCurrentUser' is assigned a value but never used.","'userLogin' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TableSortLabel' is defined but never used.","'Tooltip' is defined but never used.","'axios' is defined but never used.","'ConfirmDialog' is defined but never used.","'Popup' is defined but never used.","'SignIn' is defined but never used.","'Link' is defined but never used.","'selected' is assigned a value but never used.","'freeSpace' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","'onChangeSearchLocation' is assigned a value but never used.","'findParkingLotByLocation' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'value' is assigned a value but never used.","'onChange' is assigned a value but never used.","'error' is assigned a value but never used.","'options' is assigned a value but never used.",["917"],["918"],"Unexpected default export of anonymous function","'format' is defined but never used.","'uuid' is defined but never used.","'PerfectScrollbar' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'ArrowRightIcon' is defined but never used.","'SeverityPill' is defined but never used.","'Select' is defined but never used.","'FormControl' is defined but never used.","'AppUserService' is defined but never used.","'AdapterDateFns' is defined but never used.","'DatePicker' is defined but never used.","'TextField' is defined but never used.","'LocalizationProvider' is defined but never used.","'currentParkingList' is assigned a value but never used.","'setValue' is assigned a value but never used.","'setActiveParkingList' is assigned a value but never used.","'removeParkingLot' is assigned a value but never used.","'updateAlt' is assigned a value but never used.","'parkLot' is assigned a value but never used.",["917"],["918"],"'color' is assigned a value but never used.","'qs' is defined but never used.","'authHeader' is defined but never used.","'sendHeader' is assigned a value but never used.","'MotoristService' is defined but never used.","'Paper' is defined but never used.","'Grid' is defined but never used.","'Avatar' is defined but never used.","'TimePicker' is defined but never used.","'ParkingDetailService' is defined but never used.","'parkingLotData' is assigned a value but never used.","'setParkingLotData' is assigned a value but never used.","'searchParkingLot' is assigned a value but never used.","'setSearchParkingLot' is assigned a value but never used.","'classes' is assigned a value but never used.","'Form' is defined but never used.","'searchLocation' is assigned a value but never used.","'currentAttendantsList' is assigned a value but never used.","'refreshList' is assigned a value but never used.","'AdminServices' is defined but never used.","'DataService' is defined but never used.","'currentBookingDetailsList' is assigned a value but never used.","'CardActions' is defined but never used.","'CardMedia' is defined but never used.","'PTable' is defined but never used.","'GuardedRoute' is defined but never used.","'AuthService' is defined but never used.","'MessagesSettings' is defined but never used.","'LoginDialog' is defined but never used.","'isAutheticated' is assigned a value but never used.","'setisAutheticated' is assigned a value but never used.",["917"],["918"],"'refreshPage' is assigned a value but never used.","'setSearchValue' is assigned a value but never used.","'setSearchLocation' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'connection'. Either include it or remove the dependency array.","ArrayExpression",["919"],"'AttendantService' is defined but never used.","'BlackListServices' is defined but never used.","'setCurrentAttendantsList' is assigned a value but never used.","'attendantDetail' is assigned a value but never used.","'setCurrentBookingDetailsList' is assigned a value but never used.","'setCurrentIndex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'verifyTokenExp'. Either include it or remove the dependency array.",["920"],"'FcAbout' is defined but never used.","'RiParkingBoxLine' is defined but never used.","'GiArchiveRegister' is defined but never used.","'BookingService' is defined but never used.","'moment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"921","fix":"922"},{"desc":"923","fix":"924"},"Update the dependencies array to be: [connection]",{"range":"925","text":"926"},"Update the dependencies array to be: [verifyTokenExp]",{"range":"927","text":"928"},[878,880],"[connection]",[4468,4470],"[verifyTokenExp]"]