{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AccountSettingsAdmin.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Box, Button, Paper, Card, CardContent, Grid, CardHeader, Divider, TextField } from '@mui/material';\nimport DataService from \"../service/DataService\";\nimport AdminServices from \"../service/AdminServices\";\nimport * as React from 'react';\nimport CardActions from '@mui/material/CardActions';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\nimport axios from \"axios\";\nimport AuthService from \"../service/auth.service\";\nimport { makeStyles } from \"@mui/styles\";\nimport MotoristService from \"../service/MotoristService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\"\n  }\n});\nconst initialFieldValues = {\n  id: 0,\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  gender: \"\",\n  password: \"\"\n};\nexport default function AccountSettingsAdmin() {\n  _s();\n\n  const [userDetails, setUserDetails] = useState(initialFieldValues);\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n    /*\n            const isAdmin = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN';\n            const isAttendant = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ATTENDANT';\n            const isMotorist = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_MOTORIST';\n            const email = JSON.parse(atob(user.split('.')[1])).sub;\n    \n            //const isAdmin = JSON.parse(atob(user.split('.')[1])).role === 'ROLE_MOTORIST';\n            \n     */\n\n    if (user) {\n      const isAdmin = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN';\n      const email = JSON.parse(atob(user.split('.')[1])).sub;\n\n      if (isAdmin) {\n        AdminServices.getAdmin(email).then(response => {\n          setUserDetails(response.data);\n          console.log(response);\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    }\n  }, []);\n  /*\n    useEffect(() =>{\n        retrieveUsersDetails();\n    }, []);\n  //await axios.get(`http://localhost:8080/apiv1/admin/get/${emailData}`)\n    const retrieveUsersDetails = async () =>{\n         AdminServices.getAdmin(emailData).then(response => {\n            setUserDetails(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error)\n        })\n     }\n    */\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = {\n      email: userDetails.email,\n      password: values.password\n    };\n    const isConfirmedPassword = values.password === values.confirm;\n\n    if (isConfirmedPassword) {\n      AdminServices.changePassword(data).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.pageContent,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                maxWidth: 500\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                subheader: \"Account Information\",\n                title: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\",\n                  spacing: 2,\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: \"A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  gutterBottom: true,\n                  variant: \"h5\",\n                  component: \"div\",\n                  children: userDetails.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  color: \"text.secondary\",\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 9,\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"First Name:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 29\n                    }, this), \"  \", userDetails.firstName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 72\n                    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Last Name:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 29\n                    }, this), \" \", userDetails.lastName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 69\n                    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Gender:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 29\n                    }, this), \" \", userDetails.gender, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 64\n                    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Email:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 29\n                    }, this), \" \", userDetails.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 62\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  subheader: \"Update password\",\n                  title: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Password\",\n                    margin: \"normal\",\n                    name: \"password\",\n                    onChange: handleChange,\n                    type: \"password\",\n                    value: values.password,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Confirm password\",\n                    margin: \"normal\",\n                    name: \"confirm\",\n                    onChange: handleChange,\n                    type: \"password\",\n                    value: values.confirm,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    justifyContent: 'flex-end',\n                    p: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    variant: \"contained\",\n                    onClick: handleSubmit,\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(AccountSettingsAdmin, \"SUDqEjNDgqnbCInNC4jo6YYt39U=\", false, function () {\n  return [useStyles];\n});\n\n_c = AccountSettingsAdmin;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSettingsAdmin\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AccountSettingsAdmin.js"],"names":["useEffect","useState","Box","Button","Paper","Card","CardContent","Grid","CardHeader","Divider","TextField","DataService","AdminServices","React","CardActions","CardMedia","Typography","Avatar","Stack","axios","AuthService","makeStyles","MotoristService","useStyles","pageContent","margin","padding","initialFieldValues","id","firstName","lastName","email","gender","password","AccountSettingsAdmin","userDetails","setUserDetails","values","setValues","confirm","user","getCurrentUser","isAdmin","JSON","parse","atob","split","roles","sub","getAdmin","then","response","data","console","log","catch","error","handleSubmit","event","preventDefault","isConfirmedPassword","changePassword","handleChange","target","name","value","classes","display","flexWrap","m","width","height","maxWidth","justifyContent","p"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport { Box, Button, Paper, Card, CardContent, Grid, CardHeader, Divider, TextField } from '@mui/material';\nimport DataService from \"../service/DataService\";\nimport AdminServices from \"../service/AdminServices\";\nimport * as React from 'react';\nimport CardActions from '@mui/material/CardActions';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\nimport axios from \"axios\";\nimport AuthService from \"../service/auth.service\";\nimport {makeStyles} from \"@mui/styles\";\nimport MotoristService from \"../service/MotoristService\";\n\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\n\nconst initialFieldValues = {\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    password: \"\"\n\n};\n\n\nexport default function AccountSettingsAdmin() {\n    const [userDetails , setUserDetails] = useState(initialFieldValues);\n    const [values, setValues] = useState({\n        password: '',\n        confirm: ''\n    });\n\n\n\n\n    useEffect(() =>{\n        const user = AuthService.getCurrentUser();\n/*\n        const isAdmin = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN';\n        const isAttendant = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ATTENDANT';\n        const isMotorist = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_MOTORIST';\n        const email = JSON.parse(atob(user.split('.')[1])).sub;\n\n        //const isAdmin = JSON.parse(atob(user.split('.')[1])).role === 'ROLE_MOTORIST';\n        \n */\n\n        if(user){\n            const isAdmin = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN';\n            const email = JSON.parse(atob(user.split('.')[1])).sub;\n            if(isAdmin){\n                AdminServices.getAdmin(email).then(response => {\n                    setUserDetails(response.data);\n                    console.log(response);\n                }).catch(error => {\n                    console.log(error)\n                })\n            }\n        }\n    }, []);\n\n  /*\n    useEffect(() =>{\n        retrieveUsersDetails();\n    }, []);\n\n\n//await axios.get(`http://localhost:8080/apiv1/admin/get/${emailData}`)\n    const retrieveUsersDetails = async () =>{\n\n        AdminServices.getAdmin(emailData).then(response => {\n            setUserDetails(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error)\n        })\n\n    }\n\n   */\n\n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        const data = {\n            email: userDetails.email,\n            password: values.password,\n        }\n        \n\n        const isConfirmedPassword = values.password === values.confirm;\n\n        if(isConfirmedPassword){\n            AdminServices.changePassword(data).then(response =>{\n                console.log(response);\n            }).catch(error =>{\n                console.log(error)\n            });\n        }\n\n    };\n\n\n    const handleChange = (event) => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <Grid container>\n                        <Grid item xs={6}>\n            <Card sx={{ maxWidth: 500 }}>\n                <CardHeader\n                    subheader=\"Account Information\"\n                    title=\"Details\"\n                />\n                <Divider />\n                <CardContent>\n                    <Stack direction=\"row\" spacing={2}>\n                        <Avatar>A</Avatar>\n                    </Stack>\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        {userDetails.firstName}\n                    </Typography>\n\n\n                    <Typography variant=\"body1\" color=\"text.secondary\">\n                        <Grid item xs={9}>\n                            <b>First Name:</b>  {userDetails.firstName}<br/>\n                            <b>Last Name:</b> {userDetails.lastName}<br/>\n                            <b>Gender:</b> {userDetails.gender}<br/>\n                            <b>Email:</b> {userDetails.email}<br/>\n                        </Grid>\n                    </Typography>\n\n                </CardContent>\n            </Card>\n                    </Grid>\n                        <Grid item xs={6}>\n                        <form onSubmit={handleSubmit}>\n                            <Card>\n                                <CardHeader\n                                    subheader=\"Update password\"\n                                    title=\"Password\"\n                                />\n                                <Divider />\n                                <CardContent>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Password\"\n                                        margin=\"normal\"\n                                        name=\"password\"\n                                        onChange={handleChange}\n                                        type=\"password\"\n                                        value={values.password}\n                                        variant=\"outlined\"\n                                    />\n                                    <TextField\n                                        fullWidth\n                                        label=\"Confirm password\"\n                                        margin=\"normal\"\n                                        name=\"confirm\"\n                                        onChange={handleChange}\n                                        type=\"password\"\n                                        value={values.confirm}\n                                        variant=\"outlined\"\n                                    />\n                                </CardContent>\n                                <Divider />\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        justifyContent: 'flex-end',\n                                        p: 2\n                                    }}\n                                >\n                                    <Button\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        onClick={handleSubmit}\n                                    >\n                                        Update\n                                    </Button>\n                                </Box>\n                            </Card>\n                        </form>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Box>\n\n\n        </>\n    );\n};"]},"metadata":{},"sourceType":"module"}