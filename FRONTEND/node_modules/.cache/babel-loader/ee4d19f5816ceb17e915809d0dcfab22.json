{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AccountSettings.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, TextField } from '@mui/material';\nimport DataService from \"../service/DataService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFieldValues = {\n  id: 0,\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  gender: \"\",\n  password: \"\"\n};\nexport const AccountSettings = emailData => {\n  _s();\n\n  const [userDetails, setUserDetails] = useState(initialFieldValues);\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n  useEffect(() => {\n    retrieveUsersDetails();\n  }, []);\n\n  const retrieveUsersDetails = () => {\n    const email = emailData;\n    DataService.getLocData().then(response => {\n      setUserDetails(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        subheader: \"Update password\",\n        title: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Password\",\n          margin: \"normal\",\n          name: \"password\",\n          onChange: handleChange,\n          type: \"password\",\n          value: values.password,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Confirm password\",\n          margin: \"normal\",\n          name: \"confirm\",\n          onChange: handleChange,\n          type: \"password\",\n          value: values.confirm,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AccountSettings, \"WtewhIT8sDnS4AWKMOhXruZoXJI=\");\n\n_c = AccountSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSettings\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AccountSettings.js"],"names":["useEffect","useState","Box","Button","Card","CardContent","CardHeader","Divider","TextField","DataService","initialFieldValues","id","firstName","lastName","email","gender","password","AccountSettings","emailData","userDetails","setUserDetails","values","setValues","confirm","retrieveUsersDetails","getLocData","then","response","data","console","log","catch","error","handleChange","event","target","name","value","display","justifyContent","p"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,WAA5B,EAAyCC,UAAzC,EAAqDC,OAArD,EAA8DC,SAA9D,QAA+E,eAA/E;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAIA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,EAAE,EAAE,CADmB;AAEvBC,EAAAA,SAAS,EAAE,EAFY;AAGvBC,EAAAA,QAAQ,EAAE,EAHa;AAIvBC,EAAAA,KAAK,EAAE,EAJgB;AAKvBC,EAAAA,MAAM,EAAE,EALe;AAMvBC,EAAAA,QAAQ,EAAE;AANa,CAA3B;AAUA,OAAO,MAAMC,eAAe,GAAIC,SAAD,IAAe;AAAA;;AAC1C,QAAM,CAACC,WAAD,EAAeC,cAAf,IAAiCnB,QAAQ,CAACS,kBAAD,CAA/C;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC;AACjCe,IAAAA,QAAQ,EAAE,EADuB;AAEjCO,IAAAA,OAAO,EAAE;AAFwB,GAAD,CAApC;AAKAvB,EAAAA,SAAS,CAAC,MAAK;AACXwB,IAAAA,oBAAoB;AACvB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,oBAAoB,GAAG,MAAK;AAC9B,UAAMV,KAAK,GAAGI,SAAd;AACAT,IAAAA,WAAW,CAACgB,UAAZ,GAAyBC,IAAzB,CAA8BC,QAAQ,IAAI;AACtCP,MAAAA,cAAc,CAACO,QAAQ,CAACC,IAAV,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH,KAHD,EAGGI,KAHH,CAGSC,KAAK,IAAI;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KALD;AAOH,GATD;;AAWA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BZ,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACa,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAF5B,KAAD,CAAT;AAIH,GALD;;AAOA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAA,8BACI,QAAC,UAAD;AACI,QAAA,SAAS,EAAC,iBADd;AAEI,QAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,WAAD;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,SAAS,MADb;AAEI,UAAA,KAAK,EAAC,UAFV;AAGI,UAAA,MAAM,EAAC,QAHX;AAII,UAAA,IAAI,EAAC,UAJT;AAKI,UAAA,QAAQ,EAAEJ,YALd;AAMI,UAAA,IAAI,EAAC,UANT;AAOI,UAAA,KAAK,EAAEZ,MAAM,CAACL,QAPlB;AAQI,UAAA,OAAO,EAAC;AARZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI,QAAC,SAAD;AACI,UAAA,SAAS,MADb;AAEI,UAAA,KAAK,EAAC,kBAFV;AAGI,UAAA,MAAM,EAAC,QAHX;AAII,UAAA,IAAI,EAAC,SAJT;AAKI,UAAA,QAAQ,EAAEiB,YALd;AAMI,UAAA,IAAI,EAAC,UANT;AAOI,UAAA,KAAK,EAAEZ,MAAM,CAACE,OAPlB;AAQI,UAAA,OAAO,EAAC;AARZ;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eA4BI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cA5BJ,eA6BI,QAAC,GAAD;AACI,QAAA,EAAE,EAAE;AACAe,UAAAA,OAAO,EAAE,MADT;AAEAC,UAAAA,cAAc,EAAE,UAFhB;AAGAC,UAAAA,CAAC,EAAE;AAHH,SADR;AAAA,+BAOI,QAAC,MAAD;AACI,UAAA,KAAK,EAAC,SADV;AAEI,UAAA,OAAO,EAAC,WAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,cA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH,CA7EM;;GAAMvB,e;;KAAAA,e","sourcesContent":["import {useEffect, useState} from 'react';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, TextField } from '@mui/material';\nimport DataService from \"../service/DataService\";\n\n\n\nconst initialFieldValues = {\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    password: \"\"\n\n};\n\nexport const AccountSettings = (emailData) => {\n    const [userDetails , setUserDetails] = useState(initialFieldValues);\n    const [values, setValues] = useState({\n        password: '',\n        confirm: ''\n    });\n\n    useEffect(() =>{\n        retrieveUsersDetails();\n    }, []);\n\n    const retrieveUsersDetails = () =>{\n        const email = emailData;\n        DataService.getLocData().then(response => {\n            setUserDetails(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error)\n        })\n\n    }\n\n    const handleChange = (event) => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    return (\n        <form >\n            <Card>\n                <CardHeader\n                    subheader=\"Update password\"\n                    title=\"Password\"\n                />\n                <Divider />\n                <CardContent>\n                    <TextField\n                        fullWidth\n                        label=\"Password\"\n                        margin=\"normal\"\n                        name=\"password\"\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.password}\n                        variant=\"outlined\"\n                    />\n                    <TextField\n                        fullWidth\n                        label=\"Confirm password\"\n                        margin=\"normal\"\n                        name=\"confirm\"\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.confirm}\n                        variant=\"outlined\"\n                    />\n                </CardContent>\n                <Divider />\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'flex-end',\n                        p: 2\n                    }}\n                >\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                    >\n                        Update\n                    </Button>\n                </Box>\n            </Card>\n        </form>\n    );\n};"]},"metadata":{},"sourceType":"module"}