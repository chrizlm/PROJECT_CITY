{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Bookings.js\",\n    _s = $RefreshSig$();\n\nimport { format } from 'date-fns';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Button, Card, CardHeader, Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel, Tooltip, Paper, Grid } from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SeverityPill from '../components/severity-pill';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport Stack from \"@mui/material/Stack\";\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport TextField from \"@mui/material/TextField\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from '@mui/lab/DatePicker';\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\"\n  }\n});\nconst baseURL = \"http://localhost:8080/apiv1/parkingLot/get\";\nconst initialFieldValues = {\n  id: 0,\n  numberPlate: \"\",\n  vehicleType: \"\",\n  location: \"\",\n  parkingLot: \"\",\n  parkingDate: \"\",\n  parkTime: \"\",\n  parkDuration: \"\"\n};\nexport default function Bookings(props) {\n  _s();\n\n  const [parkDetail, setParkDetail] = useState(initialFieldValues);\n  const [selected, setSelected] = React.useState(\"\");\n  const [value, setValue] = React.useState(new Date());\n  const [parkLot, setParkLot] = React.useState([]);\n  const [data, setData] = React.useState([]);\n  useEffect(() => {\n    async function getData() {\n      await axios.get(`http://localhost:8080/apiv1/parkingLot/get`, {\n        params: \"KA001\"\n      }).then(response => {\n        // check if the data is populated\n        console.log(response.data);\n        return setData(response.data);\n      });\n    }\n  });\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParkDetail({ ...parkDetail,\n      [name]: value\n    });\n  };\n\n  const handleOptionOne = e => {\n    //setSelected(e.target.value);\n\n    /* const {value} = e.target\n     setParkDetail({\n       location: value\n     })\n     */\n    const {\n      name,\n      value\n    } = e.target;\n    setSelected(value);\n    setParkDetail({ ...parkDetail,\n      [name]: value\n    });\n  };\n\n  const handleOptionTwo = e => {\n    /* const {value} = e.target\n     setParkDetail({\n       parkingLot: value\n     })\n     */\n    const {\n      name,\n      value\n    } = e.target;\n    setParkDetail({ ...parkDetail,\n      [name]: value\n    });\n  };\n\n  const handleDateChange = date => {\n    setParkDetail({\n      parkingDate: date\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:8080/apiv1/parkingdetails/save\", parkDetail).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  function handleGetParkingLot() {\n    //e.preventDefault()\n    let parkingRegNo;\n    axios.get(`http://localhost:8080/apiv1/parkingLot/get`, {\n      params: parkingRegNo = \"KA001\"\n    }).then(response => {\n      setParkLot(response.data);\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  const algorithm = [\"Searching Algorithm\", \"Sorting Algorithm\", \"Graph Algorithm\"];\n  const language = [\"C++\", \"Java\", \"Python\", \"C#\"];\n  const KAREN = [\"Arrays\", \"LinkedList\", \"Stack\", \"Queue\", \"KAREN CAR PARK\"];\n  let type = null;\n  let options = null;\n\n  if (selected === \"Algorithm\") {\n    type = algorithm;\n  } else if (selected === \"Language\") {\n    type = language;\n  } else if (selected === \"KAREN\") {\n    type = KAREN;\n  }\n\n  if (type) {\n    options = type.map(el => /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: el,\n      children: el\n    }, el, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 33\n    }, this));\n  }\n\n  const classes = useStyles(); // const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues, false);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: 350\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Number Plate\",\n                name: \"numberPlate\",\n                value: parkDetail.numberPlate,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-simple-select-label\",\n                  children: \"CarType\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"demo-simple-select-label\",\n                  id: \"demo-simple-select-label\",\n                  name: \"vehicleType\",\n                  value: parkDetail.vehicleType,\n                  label: \"Vehicle Type\",\n                  onChange: handleInputChange,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Saloon\",\n                    children: \"Saloon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Lorry\",\n                    children: \"Lorry\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Trailer\",\n                    children: \"Trailer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: AdapterDateFns,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  label: \"Basic example\",\n                  value: value,\n                  onChange: date => {\n                    setValue(date);\n                    setParkDetail({ ...parkDetail,\n                      parkingDate: date\n                    });\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    name: \"parkingDate\",\n                    value: parkDetail.parkingDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: AdapterDateFns,\n                children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                  placeholder: \"Booking Time\",\n                  value: value,\n                  onChange: date => {\n                    setValue(date);\n                    setParkDetail({ ...parkDetail,\n                      parkTime: date\n                    });\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    name: \"parkTime\",\n                    value: parkDetail.parkTime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"dependant-dropdown\",\n                  children: \"Area\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"dependant-dropdown\",\n                  id: \"dependant-dropdown\",\n                  name: \"location\",\n                  value: parkDetail.location,\n                  label: \"Location\",\n                  onChange: handleOptionOne,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Choose...\",\n                    children: \"Choose...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Algorithm\",\n                    children: \"Algorithm\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Language\",\n                    children: \"Language\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"KAREN\",\n                    children: \"KAREN\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"dropdown\",\n                  children: \"Park Lot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"dropdown\",\n                  id: \"dropdown\",\n                  name: \"parkingLot\",\n                  value: parkDetail.parkingLot,\n                  label: \"Park Lot\",\n                  onChange: handleOptionTwo,\n                  children: options\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Park Duration\",\n                name: \"parkDuration\",\n                value: parkDetail.parkDuration,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"parkings\",\n            children: \"Find parking lots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"parkings\",\n            id: \"parkings\",\n            name: \"location\",\n            value: parkDetail.location,\n            label: \"Location\",\n            onChange: handleOptionOne,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Choose...\",\n              children: \"Choose...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Algorithm\",\n              children: \"Algorithm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Language\",\n              children: \"Language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"KAREN\",\n              children: \"KAREN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          fullWidth: true,\n          onClick: handleGetParkingLot,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, { ...props,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: \"Latest Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            minWidth: 800\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"parkingLotId\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"parkingLotName\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"totalParkingSpaces\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: data.map(park => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: park.parkingLotId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: park.parkingLotName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: park.totalParkingSpaces\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 19\n                }, this)]\n              }, park.parkingLotId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          endIcon: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 18\n          }, this),\n          size: \"small\",\n          variant: \"text\",\n          children: \"View all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Bookings, \"Etxnvq8TVlLUNcOxmiHTulmwsDM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Bookings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bookings\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Bookings.js"],"names":["format","v4","uuid","PerfectScrollbar","Box","Button","Card","CardHeader","Table","TableBody","TableCell","TableHead","TableRow","TableSortLabel","Tooltip","Paper","Grid","ArrowRightIcon","SeverityPill","makeStyles","UseForm","Form","Controls","Avatar","Select","FormControl","React","useState","useEffect","axios","InputLabel","MenuItem","AdapterDateFns","Stack","DesktopDatePicker","DateTimePicker","TextField","LocalizationProvider","DatePicker","TimePicker","useStyles","pageContent","margin","padding","baseURL","initialFieldValues","id","numberPlate","vehicleType","location","parkingLot","parkingDate","parkTime","parkDuration","Bookings","props","parkDetail","setParkDetail","selected","setSelected","value","setValue","Date","parkLot","setParkLot","data","setData","getData","get","params","then","response","console","log","handleInputChange","e","name","target","handleOptionOne","handleOptionTwo","handleDateChange","date","handleSubmit","preventDefault","post","catch","error","handleGetParkingLot","parkingRegNo","algorithm","language","KAREN","type","options","map","el","classes","display","flexWrap","m","width","height","minWidth","park","parkingLotId","parkingLotName","totalParkingSpaces","justifyContent","p"],"mappings":"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","sourcesContent":["import { format } from 'date-fns';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  Paper,\n  Grid,\n  \n} from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SeverityPill from '../components/severity-pill';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, { useState, useEffect  } from 'react'\nimport axios from \"axios\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport Stack from \"@mui/material/Stack\";\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport TextField from \"@mui/material/TextField\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from '@mui/lab/DatePicker';\nimport TimePicker from \"@mui/lab/TimePicker\";\n\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\",\n  },\n \n});\n\nconst baseURL = \"http://localhost:8080/apiv1/parkingLot/get\";\n\n  const initialFieldValues = {\n    id: 0,\n    numberPlate: \"\",\n    vehicleType: \"\",\n    location: \"\",\n    parkingLot: \"\",\n    parkingDate: \"\",\n    parkTime: \"\",\n    parkDuration: \"\",\n   \n  };\n\n\nexport default function Bookings(props) {\n  const [parkDetail, setParkDetail] = useState(initialFieldValues);\n  const [selected, setSelected] = React.useState(\"\");\n  const [value, setValue] = React.useState(new Date());\n  const [parkLot, setParkLot] = React.useState([]);\n  const [data, setData] = React.useState([]);\n\n  useEffect(() => {\n    async function getData() {\n\n      await axios\n          .get(`http://localhost:8080/apiv1/parkingLot/get`, {\n            params: \"KA001\"\n          })\n          .then((response) => {\n            // check if the data is populated\n            console.log(response.data);\n            return setData(response.data);\n\n          });\n    }\n  });\n\n\n  const handleInputChange = e =>{\n\n    const {name, value} = e.target\n    setParkDetail({\n      ...parkDetail,\n      [name]: value,\n    })\n\n  }\n   const handleOptionOne = e =>{\n     //setSelected(e.target.value);\n    /* const {value} = e.target\n     setParkDetail({\n       location: value\n     })\n     */\n     const {name, value} = e.target\n     setSelected(value)\n     setParkDetail({\n       ...parkDetail,\n       [name]: value,\n     })\n   }\n  const handleOptionTwo = e =>{\n\n   /* const {value} = e.target\n    setParkDetail({\n      parkingLot: value\n    })\n    */\n    const {name, value} = e.target\n    setParkDetail({\n      ...parkDetail,\n      [name]: value,\n    })\n  }\n\nconst handleDateChange = (date) =>{\n    setParkDetail({\n      parkingDate: date,\n    })\n  }\n\n\n  const handleSubmit = e =>{\n    e.preventDefault()\n\n\n\n    axios.post(\"http://localhost:8080/apiv1/parkingdetails/save\", parkDetail)\n        .then(response => {\n          console.log(response)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n\n\n\n\n  }\n\n\n\n  function handleGetParkingLot() {\n    //e.preventDefault()\n\n\n\n\n    let parkingRegNo;\n    axios.get(`http://localhost:8080/apiv1/parkingLot/get`, {\n      params: parkingRegNo=\"KA001\"}).then(response => {\n      setParkLot(response.data);\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error)\n    })\n\n  }\n\n\n\n\n\n\n\n  const algorithm = [\n    \"Searching Algorithm\",\n    \"Sorting Algorithm\",\n    \"Graph Algorithm\",\n  ];\n  const language = [\"C++\", \"Java\", \"Python\", \"C#\"];\n  const KAREN = [\"Arrays\", \"LinkedList\", \"Stack\", \"Queue\", \"KAREN CAR PARK\"];\n\n\n  let type = null;\n\n\n  let options = null;\n\n\n  if (selected === \"Algorithm\") {\n    type = algorithm;\n  } else if (selected === \"Language\") {\n    type = language;\n  } else if (selected === \"KAREN\") {\n    type = KAREN;\n  }\n\n\n  if (type) {\n    options = type.map((el) => (<MenuItem key={el} value={el}>{el}</MenuItem>));\n  }\n\n\n\n\n\n\n\n  const classes = useStyles();\n // const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues, false);\n\n    return (\n      <>\n      <Box\n      sx={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: 350,\n        },\n      }}\n    >\n      <Paper elevation={3} className={classes.pageContent}>\n        <Avatar /> {/*name*/}\n      <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Number Plate\"\n            name=\"numberPlate\"\n            value={parkDetail.numberPlate}\n            onChange={handleInputChange}\n          />\n\n\n\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">CarType</InputLabel>\n            <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select-label\"\n                name=\"vehicleType\"\n                value={parkDetail.vehicleType}\n                label=\"Vehicle Type\"\n                onChange={handleInputChange}\n            >\n              <MenuItem value='Saloon'>Saloon</MenuItem>\n              <MenuItem value='Lorry'>Lorry</MenuItem>\n              <MenuItem value='Trailer'>Trailer</MenuItem>\n            </Select>\n          </FormControl>\n\n\n\n\n\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DatePicker\n                label=\"Basic example\"\n                value={value}\n                onChange={(date) => {\n                  setValue(date);\n\n                  setParkDetail({\n                    ...parkDetail,\n                    parkingDate : date,\n                  })\n                }}\n                renderInput={(params) => <TextField {...params}\n                name=\"parkingDate\" value={parkDetail.parkingDate}\n                />}\n            />\n          </LocalizationProvider>\n\n\n\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <TimePicker\n                placeholder=\"Booking Time\"\n                value={value}\n                onChange={(date) => {\n                  setValue(date);\n\n                  setParkDetail({\n                    ...parkDetail,\n                    parkTime : date,\n                  })\n                }}\n                renderInput={(params) => <TextField {...params}\n                    name=\"parkTime\" value={parkDetail.parkTime}/>}\n            />\n          </LocalizationProvider>\n\n\n\n\n\n\n        </Grid>\n        <Grid item xs={6}>\n\n\n\n\n          <FormControl fullWidth>\n          <InputLabel id=\"dependant-dropdown\">Area</InputLabel>\n          <Select\n              labelId=\"dependant-dropdown\"\n              id=\"dependant-dropdown\"\n              name=\"location\"\n              value={parkDetail.location}\n              label=\"Location\"\n              onChange={handleOptionOne}\n          >\n            <MenuItem value='Choose...'>Choose...</MenuItem>\n            <MenuItem value='Algorithm'>Algorithm</MenuItem>\n            <MenuItem value='Language'>Language</MenuItem>\n            <MenuItem value='KAREN'>KAREN</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl>\n          <InputLabel id=\"dropdown\">Park Lot</InputLabel>\n          <Select\n              labelId=\"dropdown\"\n              id=\"dropdown\"\n              name=\"parkingLot\"\n              value={parkDetail.parkingLot}\n              label=\"Park Lot\"\n              onChange={handleOptionTwo}>{options}</Select>\n        </FormControl>\n\n\n\n\n\n\n\n\n          <Controls.Input\n              variant=\"outlined\"\n              label=\"Park Duration\"\n              name=\"parkDuration\"\n              value={parkDetail.parkDuration}\n              onChange={handleInputChange}\n          />\n          </Grid>\n        </Grid>\n        <Button variant=\"contained\"\n        fullWidth\n                onClick={handleSubmit}\n        >Submit</Button>\n        </Form>\n      </Paper>\n\n        <Form>\n          <FormControl fullWidth>\n            <InputLabel id=\"parkings\">Find parking lots</InputLabel>\n            <Select\n                labelId=\"parkings\"\n                id=\"parkings\"\n                name=\"location\"\n                value={parkDetail.location}\n                label=\"Location\"\n                onChange={handleOptionOne}\n            >\n              <MenuItem value='Choose...'>Choose...</MenuItem>\n              <MenuItem value='Algorithm'>Algorithm</MenuItem>\n              <MenuItem value='Language'>Language</MenuItem>\n              <MenuItem value='KAREN'>KAREN</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Button variant=\"contained\"\n                  fullWidth\n                  onClick={handleGetParkingLot}\n          >Submit</Button>\n\n        </Form>\n    </Box>\n        <Card {...props}>\n    <CardHeader title=\"Latest Orders\" />\n    <PerfectScrollbar>\n      <Box sx={{ minWidth: 800 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                parkingLotId\n              </TableCell>\n              <TableCell>\n                parkingLotName\n              </TableCell>\n              <TableCell>\n                totalParkingSpaces\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((park) =>(\n                <TableRow\n                hover\n                key={park.parkingLotId}\n                >\n                  <TableCell>\n                    {park.parkingLotId}\n                  </TableCell>\n                  <TableCell>\n                    {park.parkingLotName}\n                  </TableCell>\n                  <TableCell>\n                    {park.totalParkingSpaces}\n                  </TableCell>\n                </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Box>\n    </PerfectScrollbar>\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end',\n        p: 2\n      }}\n    >\n      <Button\n        color=\"primary\"\n        endIcon={<ArrowRightIcon fontSize=\"small\" />}\n        size=\"small\"\n        variant=\"text\"\n      >\n        View all\n      </Button>\n    </Box>\n  </Card>\n  </>\n    )\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}