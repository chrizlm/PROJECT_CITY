{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/ParkingLot.js\",\n    _s = $RefreshSig$();\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Button, Card, CardHeader, TableContainer, Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel, Tooltip, Paper, Grid } from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SeverityPill from '../components/severity-pill';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport ParkingLotService from \"../service/ParkingLotService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\"\n  }\n});\nconst baseURL = \"http://localhost:8080/apiv1/parkingLot/get\";\nconst initialFieldValues = {\n  parkingLotId: 0,\n  parkingRegNo: \"\",\n  parkingLotLocation: \"\",\n  parkingLotName: \"\",\n  totalParkingSpaces: 0\n};\nexport default function ParkingLot(props) {\n  _s();\n\n  const [parkDetail, setParkDetail] = useState(initialFieldValues);\n  const [selected, setSelected] = React.useState(\"\");\n  const [value, setValue] = React.useState(new Date());\n  const [parkLot, setParkLot] = React.useState([]);\n  const [search, setSearch] = React.useState(\"\");\n  const [searchLocation, setSearchLocation] = React.useState(\"\");\n  const [currentParkingList, setCurrentParkingList] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [parkings, setParkings] = useState([]);\n  useEffect(() => {\n    retrieveAllParkingLots();\n  }, []);\n\n  const onChangeSearchLocation = e => {\n    const searchLocation = e.target.value;\n    setSearchLocation(searchLocation);\n  };\n\n  const saveParkingLot = () => {\n    var data = {\n      parkingRegNo: parkDetail.parkingRegNo,\n      parkingLotLocation: parkDetail.parkingLotLocation,\n      parkingLotName: parkDetail.parkingLotName,\n      totalParkingSpaces: parkDetail.totalParkingSpaces\n    };\n    ParkingLotService.create(data).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const retrieveAllParkingLots = () => {\n    ParkingLotService.getAll().then(response => {\n      setParkLot(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const refreshList = () => {\n    retrieveAllParkingLots();\n    setCurrentParkingList(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveParkingList = (parking, index) => {\n    setCurrentParkingList(parking);\n    setCurrentIndex(index);\n  };\n\n  const findParkingLotByLocation = () => {\n    ParkingLotService.findByLocation(searchLocation).then(response => {\n      setParkLot(response.data);\n      console.log(response.data);\n      console.log(parkLot);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const removeParkingLot = () => {\n    ParkingLotService.removeAll().then(response => {\n      console.log(response.data);\n      refreshList();\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParkDetail({ ...parkDetail,\n      [name]: value\n    });\n  };\n  /*\n      const handleSubmit = e =>{\n          e.preventDefault()\n  \n  \n  \n          axios.post(\"http://localhost:8080/apiv1/parkingLot/save\", parkDetail)\n              .then(response => {\n                  console.log(response)\n              })\n              .catch(error => {\n                  console.log(error)\n              })\n  \n      }\n   */\n\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: 350\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: saveParkingLot,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Parking LotReg\",\n                name: \"parkingRegNo\",\n                value: parkDetail.parkingRegNo,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Parking Location\",\n                name: \"parkingLotLocation\",\n                value: parkDetail.parkingLotLocation,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Parking Lot name\",\n                name: \"parkingLotName\",\n                value: parkDetail.parkingLotName,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Parking Lot spaces\",\n                name: \"totalParkingSpaces\",\n                value: parkDetail.totalParkingSpaces,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            onClick: saveParkingLot,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n            variant: \"outlined\",\n            label: \"Search Parking Lot\",\n            value: searchLocation,\n            onChange: onChangeSearchLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: findParkingLotByLocation,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: 650\n            },\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Reg no.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Total Space\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: parkLot.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                sx: {\n                  '&:last-child td, &:last-child th': {\n                    border: 0\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: row.parkingRegNo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.parkingLotLocation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.parkingLotName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.totalParkingSpaces\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ParkingLot, \"JDp3hzS7UhJpzF62yoeKB1a6PNg=\", false, function () {\n  return [useStyles];\n});\n\n_c = ParkingLot;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParkingLot\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/ParkingLot.js"],"names":["PerfectScrollbar","Box","Button","Card","CardHeader","TableContainer","Table","TableBody","TableCell","TableHead","TableRow","TableSortLabel","Tooltip","Paper","Grid","ArrowRightIcon","SeverityPill","makeStyles","UseForm","Form","Controls","Avatar","Select","FormControl","React","useState","useEffect","axios","Link","ParkingLotService","useStyles","pageContent","margin","padding","baseURL","initialFieldValues","parkingLotId","parkingRegNo","parkingLotLocation","parkingLotName","totalParkingSpaces","ParkingLot","props","parkDetail","setParkDetail","selected","setSelected","value","setValue","Date","parkLot","setParkLot","search","setSearch","searchLocation","setSearchLocation","currentParkingList","setCurrentParkingList","currentIndex","setCurrentIndex","parkings","setParkings","retrieveAllParkingLots","onChangeSearchLocation","e","target","saveParkingLot","data","create","then","response","console","log","catch","error","getAll","refreshList","setActiveParkingList","parking","index","findParkingLotByLocation","findByLocation","removeParkingLot","removeAll","handleInputChange","name","classes","display","flexWrap","m","width","height","minWidth","map","row","border"],"mappings":"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","sourcesContent":["import PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    TableContainer,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Tooltip,\n    Paper,\n    Grid,\n\n} from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SeverityPill from '../components/severity-pill';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, { useState, useEffect  } from 'react'\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport ParkingLotService from \"../service/ParkingLotService\";\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\nconst baseURL = \"http://localhost:8080/apiv1/parkingLot/get\";\n\nconst initialFieldValues = {\n    parkingLotId: 0,\n    parkingRegNo: \"\",\n    parkingLotLocation: \"\",\n    parkingLotName: \"\",\n    totalParkingSpaces: 0,\n\n};\n\n\nexport default function ParkingLot(props) {\n    const [parkDetail, setParkDetail] = useState(initialFieldValues);\n    const [selected, setSelected] = React.useState(\"\");\n    const [value, setValue] = React.useState(new Date());\n    const [parkLot, setParkLot] = React.useState([]);\n    const [search, setSearch] = React.useState(\"\");\n    const [searchLocation, setSearchLocation] = React.useState(\"\");\n    const [currentParkingList, setCurrentParkingList] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n    const [parkings, setParkings] = useState([]);\n\n    useEffect(() =>{\n        retrieveAllParkingLots();\n    }, []);\n\n    const onChangeSearchLocation = e =>{\n        const searchLocation = e.target.value;\n        setSearchLocation(searchLocation);\n    }\n    \n    const saveParkingLot = () =>{\n        var data ={\n            parkingRegNo: parkDetail.parkingRegNo,\n            parkingLotLocation: parkDetail.parkingLotLocation,\n            parkingLotName: parkDetail.parkingLotName,\n            totalParkingSpaces: parkDetail.totalParkingSpaces,\n        };\n        ParkingLotService.create(data).then(response => {\n            console.log(response)\n        })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    const retrieveAllParkingLots = () =>{\n        ParkingLotService.getAll().then(response => {\n            setParkLot(response.data);\n            console.log(response);\n        })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    const refreshList = () =>{\n        retrieveAllParkingLots();\n        setCurrentParkingList(null);\n        setCurrentIndex(-1);\n    }\n\n    const setActiveParkingList = (parking, index) => {\n        setCurrentParkingList(parking);\n        setCurrentIndex(index);\n    };\n\n    const findParkingLotByLocation = () =>{\n        \n        ParkingLotService.findByLocation(searchLocation).then(response => {\n            setParkLot(response.data);\n\n            console.log(response.data);\n            console.log(parkLot);\n        })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n\n    const removeParkingLot = () =>{\n        ParkingLotService.removeAll().then(response => {\n            console.log(response.data);\n            refreshList();\n        })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n\n    const handleInputChange = e =>{\n\n        const {name, value} = e.target\n        setParkDetail({\n            ...parkDetail,\n            [name]: value,\n        })\n\n    }\n\n\n/*\n    const handleSubmit = e =>{\n        e.preventDefault()\n\n\n\n        axios.post(\"http://localhost:8080/apiv1/parkingLot/save\", parkDetail)\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n\n    }\n */\n\n\n\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: 350,\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <Avatar /> {/*name*/}\n                    <Form onSubmit={saveParkingLot}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking LotReg\"\n                                    name=\"parkingRegNo\"\n                                    value={parkDetail.parkingRegNo}\n                                    onChange={handleInputChange}\n                                />\n\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking Location\"\n                                    name=\"parkingLotLocation\"\n                                    value={parkDetail.parkingLotLocation}\n                                    onChange={handleInputChange}\n                                />\n\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking Lot name\"\n                                    name=\"parkingLotName\"\n                                    value={parkDetail.parkingLotName}\n                                    onChange={handleInputChange}\n                                />\n\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking Lot spaces\"\n                                    name=\"totalParkingSpaces\"\n                                    value={parkDetail.totalParkingSpaces}\n                                    onChange={handleInputChange}\n                                />\n\n\n                            </Grid>\n\n                        </Grid>\n                        <Button variant=\"contained\"\n                                fullWidth\n                                onClick={saveParkingLot}\n                        >Submit</Button>\n                    </Form>\n                </Paper>\n                <Paper elevation={3} className={classes.pageContent}>\n                    <div>\n                    <Controls.Input\n                        variant=\"outlined\"\n                        label=\"Search Parking Lot\"\n                        value={searchLocation}\n                        onChange={onChangeSearchLocation}\n                    />\n                        <Button variant=\"contained\"\n                                onClick={findParkingLotByLocation}>Search</Button>\n                    </div>\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Reg no.</TableCell>\n                                    <TableCell align=\"right\">location</TableCell>\n                                    <TableCell align=\"right\">Name</TableCell>\n                                    <TableCell align=\"right\">Total Space</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {parkLot.map((row, index) => (\n\n                                    <TableRow\n                                        key={index}\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {row.parkingRegNo}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{row.parkingLotLocation}</TableCell>\n                                        <TableCell align=\"right\">{row.parkingLotName}</TableCell>\n                                        <TableCell align=\"right\">{row.totalParkingSpaces}</TableCell>\n                                    </TableRow>\n                                ))\n                                }\n\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n\n\n                </Paper>\n            </Box>\n        </>\n    )\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}