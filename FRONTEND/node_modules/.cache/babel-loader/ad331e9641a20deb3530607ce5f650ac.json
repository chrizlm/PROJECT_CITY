{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/BlacklistRegistration.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Grid, Paper } from '@mui/material';\nimport { makeStyles } from \"@mui/styles\";\nimport { Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport React, { useEffect, useState } from 'react';\nimport TextField from \"@mui/material/TextField\";\nimport BlackListServices from \"../service/BlackListServices\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport DataService from \"../service/DataService\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\"\n  }\n});\nconst initialFieldValues = {\n  id: 0,\n  numberPlate: \"\",\n  location: \"\",\n  parkingLotName: \"\",\n  dateOfIssue: \"\",\n  timeOfIssue: \"\",\n  remarks: \"\"\n};\nexport default function BlacklistRegistration() {\n  _s();\n\n  const [blackListDetail, setBlackListDetail] = useState(initialFieldValues);\n  const [selected, setSelected] = React.useState(\"\");\n  const [searchParkingLot, setSearchParkingLot] = useState(\"\");\n  const [locationData, setLocationData] = useState([]);\n  const [parkingLotData, setParkingLotData] = useState([]);\n  const [value, setValue] = React.useState(new Date());\n  useEffect(() => {\n    retrieveAllParkingLotsAreaData();\n  }, []);\n\n  const retrieveAllParkingLotsAreaData = () => {\n    DataService.getLocData().then(response => {\n      setLocationData(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const getPkLotList = ({\n    item\n  }) => {\n    if (item === searchParkingLot) {\n      DataService.getParkingData(item).then(response => {\n        setParkingLotData(response.data);\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setBlackListDetail({ ...blackListDetail,\n      [name]: value\n    });\n  };\n\n  const handleOptionOne = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSelected(value);\n    setBlackListDetail({ ...blackListDetail,\n      [name]: value\n    }); //const searchParkingLot = e.target.value;\n\n    setSearchParkingLot(e.target.value);\n  };\n\n  const handleOptionTwo = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setBlackListDetail({ ...blackListDetail,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = {\n      numberPlate: blackListDetail.numberPlate.toUpperCase(),\n      location: blackListDetail.location,\n      parkingLotName: blackListDetail.parkingLotName,\n      dateOfIssue: blackListDetail.dateOfIssue,\n      timeOfIssue: blackListDetail.timeOfIssue,\n      remarks: blackListDetail.remarks\n    };\n    BlackListServices.registerDefaulter(data).then(response => {\n      alert(\"blacklisted motorist\");\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Number Plate\",\n                name: \"numberPlate\",\n                value: blackListDetail.numberPlate,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"dependant-dropdown\",\n                  children: \"location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"dependant-dropdown\",\n                  id: \"dependant-dropdown\",\n                  name: \"location\",\n                  value: blackListDetail.location,\n                  label: \"Location\",\n                  onChange: handleOptionOne,\n                  children: locationData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    onClick: getPkLotList({\n                      item\n                    }),\n                    children: item\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 41\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"dropdown\",\n                  children: \"Park Lot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"dropdown\",\n                  id: \"dropdown\",\n                  name: \"parkingLotName\",\n                  value: blackListDetail.parkingLotName,\n                  label: \"Park Lot\",\n                  onChange: handleOptionTwo,\n                  children: parkingLotData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    children: item\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: AdapterDateFns,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  label: \"Date of Issue\",\n                  value: value,\n                  onChange: date => {\n                    setValue(date);\n                    setBlackListDetail({ ...blackListDetail,\n                      dateOfIssue: date\n                    });\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    name: \"parkingDate\",\n                    value: blackListDetail.dateOfIssue\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 66\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: AdapterDateFns,\n                children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                  placeholder: \"Time of Issue\",\n                  value: value,\n                  onChange: date => {\n                    setValue(date);\n                    setBlackListDetail({ ...blackListDetail,\n                      timeOfIssue: date\n                    });\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    name: \"parkTime\",\n                    value: blackListDetail.timeOfIssue\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 66\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                label: \"Remarks\",\n                placeholder: \"Remarks\",\n                multiline: true,\n                rows: 7,\n                maxRows: 7,\n                name: \"remarks\",\n                value: blackListDetail.remarks,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(BlacklistRegistration, \"kn1y01JBAYv9JBZfJTgy8E0zsrg=\", false, function () {\n  return [useStyles];\n});\n\n_c = BlacklistRegistration;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlacklistRegistration\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/BlacklistRegistration.js"],"names":["Box","Button","Grid","Paper","makeStyles","Form","Controls","Avatar","React","useEffect","useState","TextField","BlackListServices","FormControl","InputLabel","Select","MenuItem","DataService","LocalizationProvider","AdapterDateFns","DatePicker","TimePicker","useStyles","pageContent","margin","padding","initialFieldValues","id","numberPlate","location","parkingLotName","dateOfIssue","timeOfIssue","remarks","BlacklistRegistration","blackListDetail","setBlackListDetail","selected","setSelected","searchParkingLot","setSearchParkingLot","locationData","setLocationData","parkingLotData","setParkingLotData","value","setValue","Date","retrieveAllParkingLotsAreaData","getLocData","then","response","data","console","log","catch","error","getPkLotList","item","getParkingData","handleInputChange","e","name","target","handleOptionOne","handleOptionTwo","handleSubmit","event","preventDefault","toUpperCase","registerDefaulter","alert","classes","display","flexWrap","m","width","height","map","index","date","params"],"mappings":"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","sourcesContent":["import {Box, Button, Grid, Paper,} from '@mui/material';\nimport {makeStyles} from \"@mui/styles\";\nimport {Form} from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport React, {useEffect, useState} from 'react';\nimport TextField from \"@mui/material/TextField\";\nimport BlackListServices from \"../service/BlackListServices\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport DataService from \"../service/DataService\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport TimePicker from \"@mui/lab/TimePicker\";\n\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\n\n\n\nconst initialFieldValues = {\n    id: 0,\n    numberPlate: \"\",\n    location: \"\",\n    parkingLotName: \"\",\n    dateOfIssue: \"\",\n    timeOfIssue: \"\",\n    remarks: \"\",\n};\n\n\n\nexport default function BlacklistRegistration(){\n    const [blackListDetail, setBlackListDetail] = useState(initialFieldValues);\n    const [selected, setSelected] = React.useState(\"\");\n    const [searchParkingLot, setSearchParkingLot] = useState(\"\");\n    const [locationData, setLocationData] = useState([]);\n    const [parkingLotData, setParkingLotData] = useState([]);\n    const [value, setValue] = React.useState(new Date());\n\n\n\n\n\n    useEffect(() =>{\n        retrieveAllParkingLotsAreaData();\n    }, []);\n\n\n\n    const retrieveAllParkingLotsAreaData = () =>{\n\n        DataService.getLocData().then(response => {\n            setLocationData(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error)\n        })\n\n    }\n\n    const getPkLotList = ({item}) => {\n\n        if(item === searchParkingLot) {\n            DataService.getParkingData(item).then(response => {\n                setParkingLotData(response.data);\n                console.log(response);\n            }).catch(error => {\n                console.log(error)\n            })\n        }\n\n\n    };\n\n\n    const handleInputChange = e =>{\n\n        const {name, value} = e.target\n        setBlackListDetail({\n            ...blackListDetail,\n            [name]: value,\n        })\n    }\n\n    const handleOptionOne = e =>{\n\n\n        const {name, value} = e.target\n        setSelected(value)\n        setBlackListDetail({\n            ...blackListDetail,\n            [name]: value,\n        })\n\n\n        //const searchParkingLot = e.target.value;\n        setSearchParkingLot(e.target.value);\n\n    }\n\n    const handleOptionTwo = e =>{\n        const {name, value} = e.target\n        setBlackListDetail({\n            ...blackListDetail,\n            [name]: value,\n        })\n    }\n\n\n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        const data = {\n            numberPlate: blackListDetail.numberPlate.toUpperCase(),\n            location: blackListDetail.location,\n            parkingLotName: blackListDetail.parkingLotName,\n            dateOfIssue: blackListDetail.dateOfIssue,\n            timeOfIssue: blackListDetail.timeOfIssue,\n            remarks: blackListDetail.remarks,\n        }\n\n        BlackListServices.registerDefaulter(data).then(response =>{\n            alert(\"blacklisted motorist\");\n            console.log(response);\n        }).catch(error =>{\n            console.log(error)\n        });\n    };\n\n\n\n\n\n\n    const classes = useStyles();\n\n    return(\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <Avatar /> {/*name*/}\n                    <Form onSubmit={handleSubmit}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Number Plate\"\n                                    name=\"numberPlate\"\n                                    value={blackListDetail.numberPlate}\n                                    onChange={handleInputChange}\n                                />\n\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"dependant-dropdown\">location</InputLabel>\n                                    <Select\n                                        labelId=\"dependant-dropdown\"\n                                        id=\"dependant-dropdown\"\n                                        name=\"location\"\n                                        value={blackListDetail.location}\n                                        label=\"Location\"\n                                        onChange={handleOptionOne}\n                                    >{locationData.map((item ,index) =>\n                                        <MenuItem value={item} key={index}\n\n                                                  onClick={getPkLotList({item})}>{item}</MenuItem>)}\n                                    </Select>\n                                </FormControl>\n                                <FormControl>\n                                    <InputLabel id=\"dropdown\">Park Lot</InputLabel>\n                                    <Select\n                                        labelId=\"dropdown\"\n                                        id=\"dropdown\"\n                                        name=\"parkingLotName\"\n                                        value={blackListDetail.parkingLotName}\n                                        label=\"Park Lot\"\n                                        onChange={handleOptionTwo}>{\n                                        parkingLotData.map((item, index) =>\n                                            <MenuItem value={item} key={index} >{item}</MenuItem> )\n                                    }</Select>\n                                </FormControl>\n\n\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                    <DatePicker\n                                        label=\"Date of Issue\"\n                                        value={value}\n\n                                        onChange={(date) => {\n                                            setValue(date);\n\n                                            setBlackListDetail({\n                                                ...blackListDetail,\n                                                dateOfIssue : date,\n                                            })\n                                        }}\n                                        renderInput={(params) => <TextField {...params}\n                                                                            name=\"parkingDate\" value={blackListDetail.dateOfIssue}\n                                        />}\n                                    />\n                                </LocalizationProvider>\n\n\n\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                    <TimePicker\n                                        placeholder=\"Time of Issue\"\n                                        value={value}\n                                        onChange={(date) => {\n                                            setValue(date);\n\n                                            setBlackListDetail({\n                                                ...blackListDetail,\n                                                timeOfIssue : date,\n                                            })\n                                        }}\n                                        renderInput={(params) => <TextField {...params}\n                                                                            name=\"parkTime\" value={blackListDetail.timeOfIssue}/>}\n                                    />\n                                </LocalizationProvider>\n\n                            </Grid>\n                            <Grid item xs={6}>\n\n                                <TextField\n                                    variant=\"outlined\"\n                                    label=\"Remarks\"\n                                    placeholder=\"Remarks\"\n                                    multiline\n                                    rows={7}\n                                    maxRows={7}\n                                    name=\"remarks\"\n                                    value={blackListDetail.remarks}\n                                    onChange={handleInputChange}\n                                />\n\n\n                            </Grid>\n                        </Grid>\n                        <Button variant=\"contained\"\n                                fullWidth\n                                onClick={handleSubmit}\n                        >Submit</Button>\n                    </Form>\n                </Paper>\n            </Box>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}