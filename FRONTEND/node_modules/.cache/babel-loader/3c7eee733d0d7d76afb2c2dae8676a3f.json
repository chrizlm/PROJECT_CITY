{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/ParkingLot.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { makeStyles } from \"@mui/styles\";\nimport { Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport React, { useEffect, useState } from 'react';\nimport ParkingLotService from \"../service/ParkingLotService\";\nimport UserLoggedInToken from \"./UserLoggedInToken\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\"\n  }\n});\nconst initialFieldValues = {\n  parkingLotId: 0,\n  parkingRegNo: \"\",\n  parkingLotLocation: \"\",\n  parkingLotName: \"\",\n  totalParkingSpaces: 0\n};\nexport default function ParkingLot() {\n  _s();\n\n  const [parkDetail, setParkDetail] = useState(initialFieldValues);\n  const [parkLot, setParkLot] = React.useState([]);\n  const [searchLocation, setSearchLocation] = React.useState(\"\");\n  const [currentParkingList, setCurrentParkingList] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  useEffect(() => {\n    retrieveAllParkingLots();\n  }, []);\n\n  const onChangeSearchLocation = e => {\n    const searchLocation = e.target.value;\n    setSearchLocation(searchLocation);\n  };\n\n  const saveParkingLot = () => {\n    const data = {\n      parkingRegNo: parkDetail.parkingRegNo,\n      parkingLotLocation: parkDetail.parkingLotLocation,\n      parkingLotName: parkDetail.parkingLotName,\n      totalParkingSpaces: parkDetail.totalParkingSpaces\n    };\n    ParkingLotService.create(data).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const retrieveAllParkingLots = () => {\n    ParkingLotService.getAll().then(response => {\n      setParkLot(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const refreshList = () => {\n    retrieveAllParkingLots();\n    setCurrentParkingList(null);\n    setCurrentIndex(-1);\n  };\n\n  const findParkingLotByLocation = () => {\n    ParkingLotService.findByLocation(searchLocation).then(response => {\n      setParkLot(response.data);\n      console.log(response);\n      console.log(setParkLot);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const removeParkingLot = () => {\n    ParkingLotService.removeAll().then(response => {\n      console.log(response.data);\n      refreshList();\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParkDetail({ ...parkDetail,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    UserLoggedInToken();\n  }, []);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: saveParkingLot,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Parking LotReg\",\n                name: \"parkingRegNo\",\n                value: parkDetail.parkingRegNo,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Parking Location\",\n                name: \"parkingLotLocation\",\n                value: parkDetail.parkingLotLocation,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Parking Lot name\",\n                name: \"parkingLotName\",\n                value: parkDetail.parkingLotName,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Parking Lot spaces\",\n                name: \"totalParkingSpaces\",\n                value: parkDetail.totalParkingSpaces,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              fullWidth: true,\n              onClick: saveParkingLot,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n            variant: \"outlined\",\n            label: \"Search Parking Lot\",\n            value: searchLocation,\n            onChange: onChangeSearchLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: findParkingLotByLocation,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          align: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: retrieveAllParkingLots,\n            children: \"GetAll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: 650\n            },\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Reg no.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Total Space\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: parkLot.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                sx: {\n                  '&:last-child td, &:last-child th': {\n                    border: 0\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.parkingRegNo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.parkingLotLocation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.parkingLotName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.totalParkingSpaces\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ParkingLot, \"7nlk//C+GxL7J7O+VniDTXsJRNg=\", false, function () {\n  return [useStyles];\n});\n\n_c = ParkingLot;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParkingLot\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/ParkingLot.js"],"names":["Box","Button","Grid","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","makeStyles","Form","Controls","Avatar","React","useEffect","useState","ParkingLotService","UserLoggedInToken","useStyles","pageContent","margin","padding","initialFieldValues","parkingLotId","parkingRegNo","parkingLotLocation","parkingLotName","totalParkingSpaces","ParkingLot","parkDetail","setParkDetail","parkLot","setParkLot","searchLocation","setSearchLocation","currentParkingList","setCurrentParkingList","currentIndex","setCurrentIndex","retrieveAllParkingLots","onChangeSearchLocation","e","target","value","saveParkingLot","data","create","then","response","console","log","catch","error","getAll","refreshList","findParkingLotByLocation","findByLocation","removeParkingLot","removeAll","handleInputChange","name","classes","display","flexWrap","m","width","height","minWidth","map","row","index","border"],"mappings":"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","sourcesContent":["import {\n    Box,\n    Button,\n    Grid,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n} from '@mui/material';\nimport {makeStyles} from \"@mui/styles\";\nimport {Form} from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport React, {useEffect, useState} from 'react';\nimport ParkingLotService from \"../service/ParkingLotService\";\nimport UserLoggedInToken from \"./UserLoggedInToken\";\n\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\n\nconst initialFieldValues = {\n    parkingLotId: 0,\n    parkingRegNo: \"\",\n    parkingLotLocation: \"\",\n    parkingLotName: \"\",\n    totalParkingSpaces: 0,\n\n};\n\n\nexport default function ParkingLot() {\n    const [parkDetail, setParkDetail] = useState(initialFieldValues);\n    const [parkLot, setParkLot] = React.useState([]);\n    const [searchLocation, setSearchLocation] = React.useState(\"\");\n    const [currentParkingList, setCurrentParkingList] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n\n\n    useEffect(() => {\n        retrieveAllParkingLots();\n    }, []);\n\n    const onChangeSearchLocation = e => {\n        const searchLocation = e.target.value;\n        setSearchLocation(searchLocation);\n    }\n\n    const saveParkingLot = () => {\n        const data = {\n            parkingRegNo: parkDetail.parkingRegNo,\n            parkingLotLocation: parkDetail.parkingLotLocation,\n            parkingLotName: parkDetail.parkingLotName,\n            totalParkingSpaces: parkDetail.totalParkingSpaces,\n        };\n        ParkingLotService.create(data).then(response => {\n            console.log(response)\n        })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n\n    const retrieveAllParkingLots = () => {\n\n        ParkingLotService.getAll().then(response => {\n            setParkLot(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    const refreshList = () => {\n        retrieveAllParkingLots();\n        setCurrentParkingList(null);\n        setCurrentIndex(-1);\n    }\n\n\n    const findParkingLotByLocation = () => {\n\n        ParkingLotService.findByLocation(searchLocation).then(response => {\n            setParkLot(response.data);\n            console.log(response);\n            console.log(setParkLot);\n        })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n\n    const removeParkingLot = () => {\n        ParkingLotService.removeAll().then(response => {\n            console.log(response.data);\n            refreshList();\n        })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n\n    const handleInputChange = e => {\n\n        const {name, value} = e.target\n        setParkDetail({\n            ...parkDetail,\n            [name]: value,\n        })\n\n    }\n\n    useEffect(() =>{\n        UserLoggedInToken();\n    }, []);\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <Avatar/> {/*name*/}\n                    <Form onSubmit={saveParkingLot}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking LotReg\"\n                                    name=\"parkingRegNo\"\n                                    value={parkDetail.parkingRegNo}\n                                    onChange={handleInputChange}\n                                />\n\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking Location\"\n                                    name=\"parkingLotLocation\"\n                                    value={parkDetail.parkingLotLocation}\n                                    onChange={handleInputChange}\n                                />\n\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking Lot name\"\n                                    name=\"parkingLotName\"\n                                    value={parkDetail.parkingLotName}\n                                    onChange={handleInputChange}\n                                />\n\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking Lot spaces\"\n                                    name=\"totalParkingSpaces\"\n                                    value={parkDetail.totalParkingSpaces}\n                                    onChange={handleInputChange}\n                                />\n\n\n                            </Grid>\n\n                            <Button variant=\"contained\"\n                                    fullWidth\n                                    onClick={saveParkingLot}\n                            >Submit</Button>\n\n                        </Grid>\n\n                    </Form>\n                </Paper>\n            </Box>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <div>\n                        <Controls.Input\n                            variant=\"outlined\"\n                            label=\"Search Parking Lot\"\n                            value={searchLocation}\n                            onChange={onChangeSearchLocation}\n                        />\n                        <Button variant=\"contained\"\n                                onClick={findParkingLotByLocation}>Search</Button>\n                    </div>\n                    <div align=\"right\">\n                        <Button variant=\"contained\"\n                                onClick={retrieveAllParkingLots}>GetAll</Button>\n                    </div>\n                    <TableContainer component={Paper}>\n                        <Table sx={{minWidth: 650}} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Reg no.</TableCell>\n                                    <TableCell align=\"right\">location</TableCell>\n                                    <TableCell align=\"right\">Name</TableCell>\n                                    <TableCell align=\"right\">Total Space</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {parkLot.map((row, index) => (\n                                    <TableRow\n                                        key={index}\n                                        sx={{'&:last-child td, &:last-child th': {border: 0}}}\n                                    >\n                                        <TableCell>{row.parkingRegNo}</TableCell>\n                                        <TableCell align=\"right\">{row.parkingLotLocation}</TableCell>\n                                        <TableCell align=\"right\">{row.parkingLotName}</TableCell>\n                                        <TableCell align=\"right\">{row.totalParkingSpaces}</TableCell>\n                                    </TableRow>\n                                ))\n                                }\n\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n\n\n                </Paper>\n            </Box>\n        </>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}