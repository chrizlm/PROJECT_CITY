{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Bookings.js\",\n    _s = $RefreshSig$();\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Button, Card, CardHeader, Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel, Tooltip, Paper, Grid } from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport TextField from \"@mui/material/TextField\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from '@mui/lab/DatePicker';\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport ParkingLotService from \"../service/ParkingLotService\";\nimport ParkingDetailService from \"../service/ParkingDetailService\";\nimport DataService from \"../service/DataService\";\nimport moment from \"moment\";\nimport ParkingLotsWithDatesService from \"../service/ParkingLotsWithDatesService\";\nimport AuthService from \"../service/auth.service\";\nimport ConfirmDialog from \"../components/ConfirmDialog\";\nimport Popup from 'reactjs-popup';\nimport SignIn from \"../components/SignIn\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport { Link } from \"react-router-dom\";\nimport Dialog from \"@mui/material/Dialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\"\n  },\n  formlogin: {\n    textAlign: 'center'\n  }\n});\nconst initialFieldValues = {\n  id: 0,\n  numberPlate: \"\",\n  vehicleType: \"\",\n  location: \"\",\n  parkingLotName: \"\",\n  parkingDate: \"\",\n  parkTime: \"\",\n  parkDuration: \"\"\n};\nconst initialSearchDetailsValues = {\n  location: \"\",\n  parkingLotName: \"\",\n  parkingDate: \"\"\n};\nexport default function Bookings(props) {\n  _s();\n\n  const [parkDetail, setParkDetail] = useState(initialFieldValues);\n  const [searchParkDetails, setSearchParkDetails] = useState(initialSearchDetailsValues);\n  const [selected, setSelected] = React.useState(\"\");\n  const [value, setValue] = React.useState(new Date());\n  const [parkLot, setParkLot] = React.useState([]);\n  const [searchLocation, setSearchLocation] = React.useState(\"\");\n  const [locationData, setLocationData] = useState([]);\n  const [parkingLotData, setParkingLotData] = useState([]);\n  const [searchParkingLot, setSearchParkingLot] = useState(\"\");\n  const [freeSpace, setFreeSpace] = useState(0);\n  const [open, setOpen] = React.useState(false);\n  useEffect(() => {\n    retrieveAllParkingLotsAreaData();\n  }, []);\n\n  const retrieveAllParkingLotsAreaData = () => {\n    DataService.getLocData().then(response => {\n      setLocationData(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const getPkLotList = item => {\n    if (item === searchParkingLot) {\n      DataService.getParkingData(item).then(response => {\n        setParkingLotData(response.data);\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  useEffect(() => {\n    retrieveAllParkingLots();\n  }, []);\n\n  const retrieveAllParkingLots = () => {\n    const currentDate = Date.now();\n    const submittedDate = moment(currentDate).format('YYYY-MM-DD');\n    ParkingLotsWithDatesService.getByDateOnly(submittedDate).then(response => {\n      setParkLot(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParkDetail({ ...parkDetail,\n      [name]: value\n    });\n  };\n\n  const handleOptionOne = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSelected(value);\n    setParkDetail({ ...parkDetail,\n      [name]: value\n    });\n    const searchParkingLot = e.target.value;\n    setSearchParkingLot(searchParkingLot);\n  };\n\n  const handleOptionOneSearch = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSelected(value);\n    setSearchParkDetails({ ...searchParkDetails,\n      [name]: value\n    }); //const searchParkingLot = e.target.value;\n\n    setSearchParkingLot(e.target.value);\n  };\n\n  const handleOptionTwo = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParkDetail({ ...parkDetail,\n      [name]: value\n    });\n  };\n\n  const handleOptionTwoSearch = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSearchParkDetails({ ...searchParkDetails,\n      [name]: value\n    });\n  };\n\n  const handleDateChange = date => {\n    setParkDetail({\n      parkingDate: date\n    });\n  };\n\n  const saveParkingDetail = () => {\n    const submittedDate = moment(parkDetail.parkingDate).format('YYYY-MM-DD');\n    const submittedTime = moment(parkDetail.parkTime).format('HH:mm');\n    const user = AuthService.getCurrentUser();\n    const motoristEmail = JSON.parse(atob(user.split('.')[1])).sub;\n    const data = {\n      numberPlate: parkDetail.numberPlate,\n      vehicleType: parkDetail.vehicleType,\n      location: parkDetail.location,\n      parkingLotName: parkDetail.parkingLotName,\n      parkingDate: submittedDate,\n      parkTime: submittedTime,\n      parkDuration: parkDetail.parkDuration\n    };\n    ParkingDetailService.checkBookingSpace(data).then(response => {\n      console.log(response);\n      setFreeSpace(response.data);\n\n      if (response.data >= 0) {\n        ParkingDetailService.create(data, motoristEmail).then(response => {\n          console.log(response);\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        alert(\"error submitting data\");\n      }\n    });\n  };\n\n  const onChangeSearchLocation = e => {\n    const searchLocation = e.target.value;\n    setSearchLocation(searchLocation);\n  };\n\n  const findParkingLotByLocation = () => {\n    ParkingLotService.findByLocation(searchLocation).then(response => {\n      setParkLot(response.data);\n      console.log(response);\n      console.log(setParkLot);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const findParkingLotByLocationAndDate = () => {\n    setOpen(true);\n    const submittedDate = moment(searchParkDetails.parkingDate).format('YYYY-MM-DD');\n    const data = {\n      location: searchParkDetails.location,\n      parkingLotName: searchParkDetails.parkingLotName,\n      parkingDate: submittedDate\n    };\n    ParkingLotsWithDatesService.getParkingDataSearch(data).then(response => {\n      setParkLot(response.data);\n      console.log(response);\n      console.log(setParkLot);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  /*\n    const handleAvailableSpaces = (parkingLotName) =>{\n      DataService.getFreeSpace(parkingLotName).then(response =>{\n        console.log(response);\n        setFreeSpace(response.data)\n  \n  \n      }).catch(error =>{\n        console.log(error)\n      })\n    }\n    */\n\n\n  const classes = useStyles(); // const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues, false);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: saveParkingDetail,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Number Plate\",\n                name: \"numberPlate\",\n                value: parkDetail.numberPlate,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-simple-select-label\",\n                  children: \"CarType\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"demo-simple-select-label\",\n                  id: \"demo-simple-select-label\",\n                  name: \"vehicleType\",\n                  value: parkDetail.vehicleType,\n                  label: \"Vehicle Type\",\n                  onChange: handleInputChange,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Saloon\",\n                    children: \"Saloon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Lorry\",\n                    children: \"Lorry\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Trailer\",\n                    children: \"Trailer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: AdapterDateFns,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  label: \"Basic example\",\n                  value: value,\n                  onChange: date => {\n                    setValue(date);\n                    setParkDetail({ ...parkDetail,\n                      parkingDate: date\n                    });\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    name: \"parkingDate\",\n                    value: parkDetail.parkingDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: AdapterDateFns,\n                children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                  placeholder: \"Booking Time\",\n                  value: value,\n                  onChange: date => {\n                    setValue(date);\n                    setParkDetail({ ...parkDetail,\n                      parkTime: date\n                    });\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    name: \"parkTime\",\n                    value: parkDetail.parkTime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"dependant-dropdown\",\n                  children: \"location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"dependant-dropdown\",\n                  id: \"dependant-dropdown\",\n                  name: \"location\",\n                  value: parkDetail.location,\n                  label: \"Location\",\n                  onChange: handleOptionOne,\n                  children: locationData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    onClick: getPkLotList({\n                      item\n                    }),\n                    children: item\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 15\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"dropdown\",\n                  children: \"Park Lot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"dropdown\",\n                  id: \"dropdown\",\n                  name: \"parkingLotName\",\n                  value: parkDetail.parkingLotName,\n                  label: \"Park Lot\",\n                  onChange: handleOptionTwo,\n                  children: parkingLotData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    children: item\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 19\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Park Duration\",\n                name: \"parkDuration\",\n                value: parkDetail.parkDuration,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            onClick: saveParkingDetail,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: findParkingLotByLocationAndDate,\n        children: [/*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            label: \"Search Date\",\n            value: value,\n            onChange: date => {\n              setValue(date);\n              setSearchParkDetails({ ...searchParkDetails,\n                parkingDate: date\n              });\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              name: \"parkingDate\",\n              value: searchParkDetails.parkingDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"dependant-dropdown\",\n            children: \"location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"dependant-dropdown\",\n            id: \"dependant-dropdown\",\n            name: \"location\",\n            value: searchParkDetails.location,\n            label: \"Location\",\n            onChange: handleOptionOneSearch,\n            children: locationData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: item,\n              onClick: getPkLotList(item),\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"dropdown\",\n            children: \"Park Lot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"dropdown\",\n            id: \"dropdown\",\n            name: \"parkingLotName\",\n            value: searchParkDetails.parkingLotName,\n            label: \"Park Lot\",\n            onChange: handleOptionTwoSearch,\n            children: parkingLotData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: item,\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            onClick: findParkingLotByLocationAndDate,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n            open: open,\n            onClose: handleClose,\n            \"aria-labelledby\": \"alert-dialog-title\",\n            \"aria-describedby\": \"alert-dialog-description\",\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              id: \"alert-dialog-title\",\n              children: \"LOGIN FORM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n                id: \"alert-dialog-description\",\n                className: classes.formlogin,\n                children: [\"please fill in details\", /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 27\n                }, this), \"if you dont have an account \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/MotoristForm\",\n                  onClick: handleClose,\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: 'blue'\n                    },\n                    children: \"register\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 103\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          align: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: retrieveAllParkingLots,\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, { ...props,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: \"Parking lots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              minWidth: 800\n            },\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              sx: {\n                minWidth: 650\n              },\n              \"aria-label\": \"simple table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"parkingLotName\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 571,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"totalParkingSpaces\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"AvailableSpaces\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 577,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: parkLot.map(park => /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: park.parkingLotName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: park.totalCapacity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 595,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: park.availableSpace\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 598,\n                    columnNumber: 27\n                  }, this)]\n                }, park.parkingLotId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            endIcon: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 18\n            }, this),\n            size: \"small\",\n            variant: \"text\",\n            children: \"View all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n/*\n <PerfectScrollbar>\n      <Box sx={{ minWidth: 800 }}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                parkingLotId\n              </TableCell>\n              <TableCell>\n                parkingLotName\n              </TableCell>\n              <TableCell>\n                totalParkingSpaces\n              </TableCell>\n              <TableCell>\n                AvailableSpaces\n              </TableCell>\n              <TableCell>\n                Book\n              </TableCell>\n\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              parkLot.map((park) =>(\n\n                <TableRow\n                hover\n                key={park.parkingLotId}\n                >\n                  <TableCell>\n                    {park.parkingLotId}\n                  </TableCell>\n                  <TableCell>\n                    {park.parkingLotName}\n                  </TableCell>\n                  <TableCell>\n                    {park.totalParkingSpaces}\n                  </TableCell>\n                  <TableCell>\n                    {park.availableSpace}\n                  </TableCell>\n\n                  <TableCell>\n\n                  </TableCell>\n\n\n\n                  <TableCell>\n                    <Button>Book</Button>\n                  </TableCell>\n                </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Box>\n    </PerfectScrollbar>\n */\n\n_s(Bookings, \"3KjX6bXYAjVWW6EHjCqv0vIP8ck=\", false, function () {\n  return [useStyles];\n});\n\n_c = Bookings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bookings\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Bookings.js"],"names":["PerfectScrollbar","Box","Button","Card","CardHeader","Table","TableBody","TableCell","TableHead","TableRow","TableSortLabel","Tooltip","Paper","Grid","ArrowRightIcon","makeStyles","UseForm","Form","Controls","Avatar","Select","FormControl","React","useState","useEffect","axios","InputLabel","MenuItem","AdapterDateFns","TextField","LocalizationProvider","DatePicker","TimePicker","ParkingLotService","ParkingDetailService","DataService","moment","ParkingLotsWithDatesService","AuthService","ConfirmDialog","Popup","SignIn","DialogTitle","DialogContent","DialogContentText","Link","Dialog","useStyles","pageContent","margin","padding","formlogin","textAlign","initialFieldValues","id","numberPlate","vehicleType","location","parkingLotName","parkingDate","parkTime","parkDuration","initialSearchDetailsValues","Bookings","props","parkDetail","setParkDetail","searchParkDetails","setSearchParkDetails","selected","setSelected","value","setValue","Date","parkLot","setParkLot","searchLocation","setSearchLocation","locationData","setLocationData","parkingLotData","setParkingLotData","searchParkingLot","setSearchParkingLot","freeSpace","setFreeSpace","open","setOpen","retrieveAllParkingLotsAreaData","getLocData","then","response","data","console","log","catch","error","getPkLotList","item","getParkingData","retrieveAllParkingLots","currentDate","now","submittedDate","format","getByDateOnly","handleInputChange","e","name","target","handleOptionOne","handleOptionOneSearch","handleOptionTwo","handleOptionTwoSearch","handleDateChange","date","saveParkingDetail","submittedTime","user","getCurrentUser","motoristEmail","JSON","parse","atob","split","sub","checkBookingSpace","create","alert","onChangeSearchLocation","findParkingLotByLocation","findByLocation","findParkingLotByLocationAndDate","getParkingDataSearch","handleClose","classes","display","flexWrap","m","width","height","params","map","index","color","minWidth","park","totalCapacity","availableSpace","parkingLotId","justifyContent","p"],"mappings":"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","sourcesContent":["import PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  Paper,\n  Grid,\n  \n} from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, { useState, useEffect  } from 'react'\nimport axios from \"axios\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport TextField from \"@mui/material/TextField\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from '@mui/lab/DatePicker';\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport ParkingLotService from \"../service/ParkingLotService\";\nimport ParkingDetailService from \"../service/ParkingDetailService\";\nimport DataService from \"../service/DataService\";\nimport moment from \"moment\";\nimport ParkingLotsWithDatesService from \"../service/ParkingLotsWithDatesService\";\nimport AuthService from \"../service/auth.service\";\nimport ConfirmDialog from \"../components/ConfirmDialog\";\nimport Popup from 'reactjs-popup';\nimport SignIn from \"../components/SignIn\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport {Link} from \"react-router-dom\";\nimport Dialog from \"@mui/material/Dialog\";\n\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\",\n  },\n    formlogin : {\n        textAlign : 'center',\n    }\n \n});\n\n\n  const initialFieldValues = {\n    id: 0,\n    numberPlate: \"\",\n    vehicleType: \"\",\n    location: \"\",\n    parkingLotName: \"\",\n    parkingDate: \"\",\n    parkTime: \"\",\n    parkDuration: \"\",\n   \n  };\n\n  const initialSearchDetailsValues = {\n      location: \"\",\n      parkingLotName: \"\",\n      parkingDate: \"\",\n  }\n\n\n\nexport default function Bookings(props) {\n      const [parkDetail, setParkDetail] = useState(initialFieldValues);\n  const [searchParkDetails, setSearchParkDetails] = useState(initialSearchDetailsValues);\n  const [selected, setSelected] = React.useState(\"\");\n  const [value, setValue] = React.useState(new Date());\n  const [parkLot, setParkLot] = React.useState([]);\n  const [searchLocation, setSearchLocation] = React.useState(\"\");\n  const [locationData, setLocationData] = useState([]);\n  const [parkingLotData, setParkingLotData] = useState([]);\n  const [searchParkingLot, setSearchParkingLot] = useState(\"\");\n  const [freeSpace, setFreeSpace] = useState(0);\n    const [open, setOpen] = React.useState(false);\n\n\n\n\n  useEffect(() =>{\n  retrieveAllParkingLotsAreaData();\n}, []);\n\n  const retrieveAllParkingLotsAreaData = () =>{\n\n    DataService.getLocData().then(response => {\n      setLocationData(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error)\n    })\n\n  }\n\n\n\n\n  const getPkLotList = (item) => {\n\n      if(item === searchParkingLot) {\n          DataService.getParkingData(item).then(response => {\n              setParkingLotData(response.data);\n              console.log(response);\n          }).catch(error => {\n              console.log(error)\n          })\n      }\n\n\n  };\n\n\n\n\n\n\n  useEffect(() =>{\n    retrieveAllParkingLots();\n  }, []);\n\n  const retrieveAllParkingLots = () =>{\n      const currentDate = Date.now();\n      const submittedDate = moment(currentDate).format('YYYY-MM-DD')\n\n      ParkingLotsWithDatesService.getByDateOnly(submittedDate).then(response => {\n      setParkLot(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  const handleInputChange = e =>{\n\n    const {name, value} = e.target\n    setParkDetail({\n      ...parkDetail,\n      [name]: value,\n    })\n\n\n  }\n\n   const handleOptionOne = e =>{\n     const {name, value} = e.target\n     setSelected(value)\n     setParkDetail({\n       ...parkDetail,\n       [name]: value,\n     })\n\n\n     const searchParkingLot = e.target.value;\n     setSearchParkingLot(searchParkingLot);\n\n   }\n\n    const handleOptionOneSearch = e =>{\n        const {name, value} = e.target\n        setSelected(value)\n        setSearchParkDetails({\n            ...searchParkDetails,\n            [name]: value,\n        })\n\n\n        //const searchParkingLot = e.target.value;\n        setSearchParkingLot(e.target.value);\n\n    }\n  const handleOptionTwo = e =>{\n    const {name, value} = e.target\n    setParkDetail({\n      ...parkDetail,\n      [name]: value,\n    })\n  }\n\n    const handleOptionTwoSearch = e =>{\n        const {name, value} = e.target\n        setSearchParkDetails({\n            ...searchParkDetails,\n            [name]: value,\n        })\n    }\n\nconst handleDateChange = (date) =>{\n    setParkDetail({\n      parkingDate: date,\n    })\n  }\n\n\n\n\n\n  const saveParkingDetail = () =>{\n\n    const submittedDate = moment(parkDetail.parkingDate).format('YYYY-MM-DD')\n    const submittedTime = moment(parkDetail.parkTime).format('HH:mm')\n      const user = AuthService.getCurrentUser();\n      const motoristEmail = JSON.parse(atob(user.split('.')[1])).sub;\n    const data ={\n      numberPlate: parkDetail.numberPlate,\n      vehicleType: parkDetail.vehicleType,\n      location: parkDetail.location,\n      parkingLotName: parkDetail.parkingLotName,\n      parkingDate: submittedDate,\n      parkTime: submittedTime,\n      parkDuration: parkDetail.parkDuration,\n\n    };\n    ParkingDetailService.checkBookingSpace(data).then(response =>{\n      console.log(response)\n      setFreeSpace(response.data);\n\n      if(response.data >= 0){\n        ParkingDetailService.create(data, motoristEmail).then(response => {\n          console.log(response)\n        })\n            .catch(error => {\n              console.log(error)\n            })\n      }else{\n        alert(\"error submitting data\");\n      }\n    })\n\n\n  }\n\n\n\n\n\n  const onChangeSearchLocation = e =>{\n    const searchLocation = e.target.value;\n    setSearchLocation(searchLocation);\n  }\n\n  const findParkingLotByLocation = () =>{\n\n    ParkingLotService.findByLocation(searchLocation).then(response => {\n      setParkLot(response.data);\n      console.log(response);\n      console.log(setParkLot);\n    })\n        .catch(error => {\n          console.log(error)\n        })\n  }\n\n    const findParkingLotByLocationAndDate = () =>{\n        setOpen(true);\n        const submittedDate = moment(searchParkDetails.parkingDate).format('YYYY-MM-DD')\n        const data ={\n\n            location: searchParkDetails.location,\n            parkingLotName: searchParkDetails.parkingLotName,\n            parkingDate: submittedDate,\n\n        };\n\n        ParkingLotsWithDatesService.getParkingDataSearch(data).then(response => {\n            setParkLot(response.data);\n            console.log(response);\n            console.log(setParkLot);\n        })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n/*\n  const handleAvailableSpaces = (parkingLotName) =>{\n    DataService.getFreeSpace(parkingLotName).then(response =>{\n      console.log(response);\n      setFreeSpace(response.data)\n\n\n    }).catch(error =>{\n      console.log(error)\n    })\n  }\n  */\n\n\n\n\n\n\n\n\n  const classes = useStyles();\n // const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues, false);\n\n    return (\n      <>\n      <Box\n      sx={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%',\n        },\n      }}\n    >\n      <Paper elevation={3} className={classes.pageContent}>\n        <Avatar /> {/*name*/}\n      <Form onSubmit={saveParkingDetail}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Number Plate\"\n            name=\"numberPlate\"\n            value={parkDetail.numberPlate}\n            onChange={handleInputChange}\n          />\n\n\n\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">CarType</InputLabel>\n            <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select-label\"\n                name=\"vehicleType\"\n                value={parkDetail.vehicleType}\n                label=\"Vehicle Type\"\n                onChange={handleInputChange}\n            >\n              <MenuItem value='Saloon'>Saloon</MenuItem>\n              <MenuItem value='Lorry'>Lorry</MenuItem>\n              <MenuItem value='Trailer'>Trailer</MenuItem>\n            </Select>\n          </FormControl>\n\n\n\n\n\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DatePicker\n                label=\"Basic example\"\n                value={value}\n\n                onChange={(date) => {\n                  setValue(date);\n\n                  setParkDetail({\n                    ...parkDetail,\n                    parkingDate : date,\n                  })\n                }}\n                renderInput={(params) => <TextField {...params}\n                name=\"parkingDate\" value={parkDetail.parkingDate}\n                />}\n            />\n          </LocalizationProvider>\n\n\n\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <TimePicker\n                placeholder=\"Booking Time\"\n                value={value}\n                onChange={(date) => {\n                  setValue(date);\n\n                  setParkDetail({\n                    ...parkDetail,\n                    parkTime : date,\n                  })\n                }}\n                renderInput={(params) => <TextField {...params}\n                    name=\"parkTime\" value={parkDetail.parkTime}/>}\n            />\n          </LocalizationProvider>\n\n\n\n\n\n\n        </Grid>\n\n        <Grid item xs={6}>\n\n\n\n\n          <FormControl fullWidth>\n            <InputLabel id=\"dependant-dropdown\">location</InputLabel>\n            <Select\n                labelId=\"dependant-dropdown\"\n                id=\"dependant-dropdown\"\n                name=\"location\"\n                value={parkDetail.location}\n                label=\"Location\"\n                onChange={handleOptionOne}\n            >{locationData.map((item ,index) =>\n              <MenuItem value={item} key={index}\n                        onClick={getPkLotList({item})}>{item}</MenuItem>)}\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"dropdown\">Park Lot</InputLabel>\n            <Select\n                labelId=\"dropdown\"\n                id=\"dropdown\"\n                name=\"parkingLotName\"\n                value={parkDetail.parkingLotName}\n                label=\"Park Lot\"\n                onChange={handleOptionTwo}>{\n                  parkingLotData.map((item, index) =>\n                  <MenuItem value={item} key={index} >{item}</MenuItem> )\n            }</Select>\n          </FormControl>\n\n\n          <Controls.Input\n              variant=\"outlined\"\n              label=\"Park Duration\"\n              name=\"parkDuration\"\n              value={parkDetail.parkDuration}\n              onChange={handleInputChange}\n          />\n          </Grid>\n        </Grid>\n        <Button variant=\"contained\"\n        fullWidth\n                onClick={saveParkingDetail}\n        >Submit</Button>\n\n        </Form>\n      </Paper>\n      </Box>\n        <Box\n            sx={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              '& > :not(style)': {\n                m: 1,\n                width: '100%',\n                height: '100%',\n              },\n            }}\n        >\n\n        <Form onSubmit={findParkingLotByLocationAndDate}>\n\n\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DatePicker\n                    label=\"Search Date\"\n                    value={value}\n\n                    onChange={(date) => {\n                        setValue(date);\n\n                        setSearchParkDetails({\n                            ...searchParkDetails,\n                            parkingDate : date,\n                        })\n                    }}\n                    renderInput={(params) => <TextField {...params}\n                                                        name=\"parkingDate\" value={searchParkDetails.parkingDate}\n                    />}\n                />\n            </LocalizationProvider>\n\n            <FormControl fullWidth>\n                <InputLabel id=\"dependant-dropdown\">location</InputLabel>\n                <Select\n                    labelId=\"dependant-dropdown\"\n                    id=\"dependant-dropdown\"\n                    name=\"location\"\n                    value={searchParkDetails.location}\n                    label=\"Location\"\n                    onChange={handleOptionOneSearch}\n                >{locationData.map((item ,index) =>\n                    <MenuItem value={item} key={index}\n                              onClick={getPkLotList(item)}>{item}</MenuItem>)}\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"dropdown\">Park Lot</InputLabel>\n                <Select\n                    labelId=\"dropdown\"\n                    id=\"dropdown\"\n                    name=\"parkingLotName\"\n                    value={searchParkDetails.parkingLotName}\n                    label=\"Park Lot\"\n                    onChange={handleOptionTwoSearch}>{\n                    parkingLotData.map((item, index) =>\n                        <MenuItem value={item} key={index} >{item}</MenuItem> )\n                }</Select>\n            </FormControl>\n\n          <FormControl fullWidth>\n\n              <Button variant=\"contained\"\n                      fullWidth\n                      onClick={findParkingLotByLocationAndDate}\n              >Search</Button>\n              <Dialog\n                  open={open}\n                  onClose={handleClose}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n              >\n                  <DialogTitle id=\"alert-dialog-title\">\n                      {\"LOGIN FORM\"}\n                  </DialogTitle>\n                  <DialogContent>\n                      <DialogContentText id=\"alert-dialog-description\" className={classes.formlogin}>\n                          please fill in details\n                          <SignIn />\n                          if you dont have an account <Link to='/MotoristForm' onClick={handleClose}> <div style={{color:'blue'}}>register</div> </Link>\n                      </DialogContentText>\n                  </DialogContent>\n              </Dialog>\n\n\n          </FormControl>\n\n\n\n          <div align=\"right\">\n            <Button variant=\"contained\"\n                    onClick={retrieveAllParkingLots}>Today</Button>\n          </div>\n\n        </Form>\n\n\n\n        <Card {...props}>\n    <CardHeader title=\"Parking lots\" />\n\n          <PerfectScrollbar>\n            <Box sx={{ minWidth: 800 }}>\n              <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n\n                    <TableCell>\n                      parkingLotName\n                    </TableCell>\n                    <TableCell>\n                      totalParkingSpaces\n                    </TableCell>\n                    <TableCell>\n                      AvailableSpaces\n                    </TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    parkLot.map((park) =>(\n\n                        <TableRow\n                            hover\n                            key={park.parkingLotId}\n                        >\n\n                          <TableCell>\n                            {park.parkingLotName}\n                          </TableCell>\n                          <TableCell>\n                            {park.totalCapacity}\n                          </TableCell>\n                          <TableCell>\n                            {park.availableSpace}\n                          </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </PerfectScrollbar>\n\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end',\n        p: 2\n      }}\n    >\n      <Button\n        color=\"primary\"\n        endIcon={<ArrowRightIcon fontSize=\"small\" />}\n        size=\"small\"\n        variant=\"text\"\n      >\n        View all\n      </Button>\n    </Box>\n\n  </Card>\n        </Box>\n  </>\n    )\n}\n\n\n\n/*\n <PerfectScrollbar>\n      <Box sx={{ minWidth: 800 }}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                parkingLotId\n              </TableCell>\n              <TableCell>\n                parkingLotName\n              </TableCell>\n              <TableCell>\n                totalParkingSpaces\n              </TableCell>\n              <TableCell>\n                AvailableSpaces\n              </TableCell>\n              <TableCell>\n                Book\n              </TableCell>\n\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              parkLot.map((park) =>(\n\n                <TableRow\n                hover\n                key={park.parkingLotId}\n                >\n                  <TableCell>\n                    {park.parkingLotId}\n                  </TableCell>\n                  <TableCell>\n                    {park.parkingLotName}\n                  </TableCell>\n                  <TableCell>\n                    {park.totalParkingSpaces}\n                  </TableCell>\n                  <TableCell>\n                    {park.availableSpace}\n                  </TableCell>\n\n                  <TableCell>\n\n                  </TableCell>\n\n\n\n                  <TableCell>\n                    <Button>Book</Button>\n                  </TableCell>\n                </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Box>\n    </PerfectScrollbar>\n */"]},"metadata":{},"sourceType":"module"}