{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AttendantRegistration.js\",\n    _s = $RefreshSig$();\n\nimport { format } from 'date-fns';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Button, Card, CardHeader, Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel, Tooltip, Paper, Grid } from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SeverityPill from '../components/severity-pill';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport AppUserService from \"../service/AppUserService\";\nimport MotoristService from \"../service/MotoristService\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\"\n  }\n});\nconst genderItems = [{\n  id: \"male\",\n  title: \"Male\"\n}, {\n  id: \"female\",\n  title: \"Female\"\n}, {\n  id: \"others\",\n  title: \"Others\"\n}];\nconst initialFieldValues = {\n  id: 0,\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  gender: \"\",\n  password: \"\",\n  areaAssigned: \"\"\n};\n/*\nexport default function AttendantRegistration(props) {\n    const validate =(fieldValues = values) =>{\n        let temp = {...errors}\n        if('firstName' in fieldValues)\n            temp.firstName = fieldValues.firstName?\"\":\"This field is required.\"\n        if('email' in fieldValues)\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ?\"\":\"Invalid Email.\"\n        setErrors({\n            ...temp\n        })\n\n        if(fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n\n    const handleSubmit = e =>{\n        e.preventDefault()\n\n        AppUserService.register(values)\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n\n    }\n\n    const classes = useStyles();\n    const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues, true, validate);\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <Avatar />\n                    <Form onSubmit={handleSubmit}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"First Name\"\n                                    name=\"firstName\"\n                                    value={values.firstName}\n                                    onChange={handleInputChange}\n                                    error={errors.firstName}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    value={values.lastName}\n                                    onChange={handleInputChange}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    value={values.email}\n                                    error={errors.email}\n                                    onChange={handleInputChange}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Area Assigned\"\n                                    name=\"areaAssigned\"\n                                    value={values.areaAssigned}\n                                    error={errors.areaAssigned}\n                                    onChange={handleInputChange}\n                                />\n\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Controls.RadioGroup\n                                    variant=\"outlined\"\n                                    name=\"gender\"\n                                    label=\"Gender\"\n                                    color=\"primary\"\n                                    value={values.gender}\n                                    genderItems={genderItems}\n                                    onChange={handleInputChange}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    value={values.password}\n                                    onChange={handleInputChange}\n                                />\n\n                            </Grid>\n                        </Grid>\n                        <Button variant=\"contained\"\n                                fullWidth\n                                onClick={handleSubmit}\n                        >Submit</Button>\n                    </Form>\n                </Paper>\n            </Box>\n        </>\n    )\n}\n*/\n\nexport default function AttendantRegistration() {\n  _s();\n\n  const [motoristDetail, setMotoristDetail] = useState(initialFieldValues);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setMotoristDetail({ ...motoristDetail,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = {\n      //id: motoristDetail.id,\n      firstName: motoristDetail.firstName,\n      lastName: motoristDetail.lastName,\n      email: motoristDetail.email,\n      gender: motoristDetail.gender,\n      password: motoristDetail.password\n    };\n    MotoristService.registerMotorist(data).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"First Name\",\n                name: \"firstName\",\n                value: motoristDetail.firstName,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Last Name\",\n                name: \"lastName\",\n                value: motoristDetail.lastName,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Email\",\n                name: \"email\",\n                value: motoristDetail.email,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Controls.RadioGroup, {\n                variant: \"outlined\",\n                name: \"gender\",\n                label: \"Gender\",\n                color: \"primary\",\n                value: motoristDetail.gender,\n                genderItems: genderItems,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                value: motoristDetail.password,\n                onChange: handleInputChange,\n                autoComplete: \"current-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(AttendantRegistration, \"4C/AEujeAhym79dlC69CSv+jfW4=\", false, function () {\n  return [useStyles];\n});\n\n_c = AttendantRegistration;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttendantRegistration\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AttendantRegistration.js"],"names":["format","v4","uuid","PerfectScrollbar","Box","Button","Card","CardHeader","Table","TableBody","TableCell","TableHead","TableRow","TableSortLabel","Tooltip","Paper","Grid","ArrowRightIcon","SeverityPill","makeStyles","UseForm","Form","Controls","Avatar","Select","FormControl","React","useState","axios","AppUserService","MotoristService","TextField","useStyles","pageContent","margin","padding","genderItems","id","title","initialFieldValues","firstName","lastName","email","gender","password","areaAssigned","AttendantRegistration","motoristDetail","setMotoristDetail","handleInputChange","e","name","value","target","handleSubmit","event","preventDefault","data","registerMotorist","then","response","console","log","catch","error","classes","display","flexWrap","m","width","height"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,UAAvB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SACIC,GADJ,EAEIC,MAFJ,EAGIC,IAHJ,EAIIC,UAJJ,EAKIC,KALJ,EAMIC,SANJ,EAOIC,SAPJ,EAQIC,SARJ,EASIC,QATJ,EAUIC,cAVJ,EAWIC,OAXJ,EAYIC,KAZJ,EAaIC,IAbJ,QAeO,eAfP;AAgBA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,uBAA9B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAGA,MAAMC,SAAS,GAAGb,UAAU,CAAC;AACzBc,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,OAAO,EAAE;AAFA;AADY,CAAD,CAA5B;AAQA,MAAMC,WAAW,GAAG,CAChB;AAAEC,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE;AAArB,CADgB,EAEhB;AAAED,EAAAA,EAAE,EAAE,QAAN;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFgB,EAGhB;AAAED,EAAAA,EAAE,EAAE,QAAN;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAHgB,CAApB;AAQA,MAAMC,kBAAkB,GAAG;AACvBF,EAAAA,EAAE,EAAE,CADmB;AAEvBG,EAAAA,SAAS,EAAE,EAFY;AAGvBC,EAAAA,QAAQ,EAAE,EAHa;AAIvBC,EAAAA,KAAK,EAAE,EAJgB;AAKvBC,EAAAA,MAAM,EAAE,EALe;AAMvBC,EAAAA,QAAQ,EAAE,EANa;AAOvBC,EAAAA,YAAY,EAAE;AAPS,CAA3B;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAe,SAASC,qBAAT,GAAgC;AAAA;;AAC3C,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAqCrB,QAAQ,CAACY,kBAAD,CAAnD;;AAEA,QAAMU,iBAAiB,GAAGC,CAAC,IAAG;AAE1B,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAL,IAAAA,iBAAiB,CAAC,EACd,GAAGD,cADW;AAEd,OAACI,IAAD,GAAQC;AAFM,KAAD,CAAjB;AAIH,GAPD;;AAUA,QAAME,YAAY,GAAIC,KAAD,IAAU;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAG;AACT;AACAjB,MAAAA,SAAS,EAAEO,cAAc,CAACP,SAFjB;AAGTC,MAAAA,QAAQ,EAAEM,cAAc,CAACN,QAHhB;AAITC,MAAAA,KAAK,EAAEK,cAAc,CAACL,KAJb;AAKTC,MAAAA,MAAM,EAAEI,cAAc,CAACJ,MALd;AAMTC,MAAAA,QAAQ,EAAEG,cAAc,CAACH;AANhB,KAA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","sourcesContent":["import { format } from 'date-fns';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Tooltip,\n    Paper,\n    Grid,\n\n} from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SeverityPill from '../components/severity-pill';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, {useState} from 'react';\nimport axios from \"axios\";\nimport AppUserService from \"../service/AppUserService\";\nimport MotoristService from \"../service/MotoristService\";\nimport TextField from \"@mui/material/TextField\";\n\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\nconst genderItems = [\n    { id: \"male\", title: \"Male\" },\n    { id: \"female\", title: \"Female\" },\n    { id: \"others\", title: \"Others\" },\n];\n\n\n\nconst initialFieldValues = {\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    password: \"\",\n    areaAssigned: \"\"\n\n};\n\n/*\nexport default function AttendantRegistration(props) {\n    const validate =(fieldValues = values) =>{\n        let temp = {...errors}\n        if('firstName' in fieldValues)\n            temp.firstName = fieldValues.firstName?\"\":\"This field is required.\"\n        if('email' in fieldValues)\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ?\"\":\"Invalid Email.\"\n        setErrors({\n            ...temp\n        })\n\n        if(fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n\n    const handleSubmit = e =>{\n        e.preventDefault()\n\n        AppUserService.register(values)\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n\n    }\n\n    const classes = useStyles();\n    const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues, true, validate);\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <Avatar />\n                    <Form onSubmit={handleSubmit}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"First Name\"\n                                    name=\"firstName\"\n                                    value={values.firstName}\n                                    onChange={handleInputChange}\n                                    error={errors.firstName}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    value={values.lastName}\n                                    onChange={handleInputChange}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    value={values.email}\n                                    error={errors.email}\n                                    onChange={handleInputChange}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Area Assigned\"\n                                    name=\"areaAssigned\"\n                                    value={values.areaAssigned}\n                                    error={errors.areaAssigned}\n                                    onChange={handleInputChange}\n                                />\n\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Controls.RadioGroup\n                                    variant=\"outlined\"\n                                    name=\"gender\"\n                                    label=\"Gender\"\n                                    color=\"primary\"\n                                    value={values.gender}\n                                    genderItems={genderItems}\n                                    onChange={handleInputChange}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    value={values.password}\n                                    onChange={handleInputChange}\n                                />\n\n                            </Grid>\n                        </Grid>\n                        <Button variant=\"contained\"\n                                fullWidth\n                                onClick={handleSubmit}\n                        >Submit</Button>\n                    </Form>\n                </Paper>\n            </Box>\n        </>\n    )\n}\n*/\n\n\nexport default function AttendantRegistration(){\n    const [motoristDetail, setMotoristDetail] =useState(initialFieldValues);\n\n    const handleInputChange = e =>{\n\n        const {name, value} = e.target\n        setMotoristDetail({\n            ...motoristDetail,\n            [name]: value,\n        })\n    }\n\n\n    const handleSubmit = (event) =>{\n        event.preventDefault();\n        const data = {\n            //id: motoristDetail.id,\n            firstName: motoristDetail.firstName,\n            lastName: motoristDetail.lastName,\n            email: motoristDetail.email,\n            gender: motoristDetail.gender,\n            password: motoristDetail.password,\n        }\n\n        MotoristService.registerMotorist(data).then(response =>{\n            console.log(response);\n        }).catch(error =>{\n            console.log(error)\n        });\n    };\n\n    const classes = useStyles();\n\n    return(\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <Avatar /> {/*name*/}\n                    <Form onSubmit={handleSubmit}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"First Name\"\n                                    name=\"firstName\"\n                                    value={motoristDetail.firstName}\n                                    onChange={handleInputChange}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    value={motoristDetail.lastName}\n                                    onChange={handleInputChange}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    value={motoristDetail.email}\n                                    onChange={handleInputChange}\n                                />\n\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Controls.RadioGroup\n                                    variant=\"outlined\"\n                                    name=\"gender\"\n                                    label=\"Gender\"\n                                    color=\"primary\"\n                                    value={motoristDetail.gender}\n                                    genderItems={genderItems}\n                                    onChange={handleInputChange}\n                                />\n\n                                <TextField\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    value={motoristDetail.password}\n                                    onChange={handleInputChange}\n                                    autoComplete=\"current-password\"\n                                />\n\n                            </Grid>\n                        </Grid>\n                        <Button variant=\"contained\"\n                                fullWidth\n                                onClick={handleSubmit}\n                        >Submit</Button>\n                    </Form>\n                </Paper>\n            </Box>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}