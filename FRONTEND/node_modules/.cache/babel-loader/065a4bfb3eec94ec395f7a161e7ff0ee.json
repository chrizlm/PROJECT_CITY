{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Bookings.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { format } from 'date-fns';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Button, Card, CardHeader, Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel, Tooltip, Paper, Grid } from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SeverityPill from '../components/severity-pill';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\"\n  }\n});\nconst orders = [{\n  id: uuid(),\n  ref: 'CDD1049',\n  amount: 30.5,\n  customer: {\n    name: 'Ekaterina Tankova'\n  },\n  createdAt: 1555016400000,\n  status: 'pending'\n}, {\n  id: uuid(),\n  ref: 'CDD1048',\n  amount: 25.1,\n  customer: {\n    name: 'Cao Yu'\n  },\n  createdAt: 1555016400000,\n  status: 'delivered'\n}, {\n  id: uuid(),\n  ref: 'CDD1047',\n  amount: 10.99,\n  customer: {\n    name: 'Alexa Richardson'\n  },\n  createdAt: 1554930000000,\n  status: 'refunded'\n}, {\n  id: uuid(),\n  ref: 'CDD1046',\n  amount: 96.43,\n  customer: {\n    name: 'Anje Keizer'\n  },\n  createdAt: 1554757200000,\n  status: 'pending'\n}, {\n  id: uuid(),\n  ref: 'CDD1045',\n  amount: 32.54,\n  customer: {\n    name: 'Clarke Gillebert'\n  },\n  createdAt: 1554670800000,\n  status: 'delivered'\n}, {\n  id: uuid(),\n  ref: 'CDD1044',\n  amount: 16.76,\n  customer: {\n    name: 'Adam Denisov'\n  },\n  createdAt: 1554670800000,\n  status: 'delivered'\n}];\nconst initialFieldValues = {\n  id: 0,\n  numberPlate: \"\",\n  carType: \"\",\n  location: \"\",\n  parkingLot: \"\",\n  date: \"\",\n  time: \"\",\n  duration: \"\"\n};\nexport default function Bookings(props) {\n  _s();\n\n  const [parkDetail, setParkDetail] = useState(initialFieldValues);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParkDetail({ ...parkDetail,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:8080/apiv1/parkingdetails/save\", parkDetail).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const classes = useStyles(); // const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues, false);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: 350\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Number Plate\",\n                name: \"numberPlate\",\n                value: parkDetail.numberPlate,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Controls.BasicSelect, {\n                name: \"carType\",\n                label: \"Car Type\",\n                value: parkDetail.carType,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Controls.DatePicker, {\n                value: parkDetail.date,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Controls.Dropdown, {\n                value: parkDetail.location,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Controls.BookingTime, {\n                value: parkDetail.time,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Duration\",\n                name: \"duration\",\n                value: parkDetail.duration,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, { ...props,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: \"Latest Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            minWidth: 800\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Order Ref\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  sortDirection: \"desc\",\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    enterDelay: 300,\n                    title: \"Sort\",\n                    children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                      active: true,\n                      direction: \"desc\",\n                      children: \"Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: orders.map(order => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: order.ref\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: order.customer.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: format(order.createdAt, 'dd/MM/yyyy')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(SeverityPill, {\n                    color: order.status === 'delivered' && 'success' || order.status === 'refunded' && 'error' || 'warning',\n                    children: order.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 17\n                }, this)]\n              }, order.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 15\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          endIcon: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 18\n          }, this),\n          size: \"small\",\n          variant: \"text\",\n          children: \"View all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Bookings, \"WhO8/rQSug6t3YsDKFWeSxcZfGM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Bookings;\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DependantDropDown() {\n  _s2();\n\n  const [area, setArea] = React.useState(\"\");\n  const [parklot, setParklot] = React.useState(\"\");\n  /** \"selected\" here is state variable which will hold the\n   * value of currently selected dropdown.\n   */\n\n  const [selected, setSelected] = React.useState(\"\");\n  /** Function that will set different values to state variable\n   * based on which dropdown is selected\n   */\n\n  const changeSelectOptionHandler = event => {\n    setSelected(event.target.value);\n    setArea(event.target.value);\n  };\n\n  const handleChange = event => {\n    setParklot(event.target.value);\n  };\n  /** Different arrays for different dropdowns */\n\n\n  const algorithm = [\"Searching Algorithm\", \"Sorting Algorithm\", \"Graph Algorithm\"];\n  const language = [\"C++\", \"Java\", \"Python\", \"C#\"];\n  const dataStructure = [\"Arrays\", \"LinkedList\", \"Stack\", \"Queue\"];\n  /** Type variable to store different array for different dropdown */\n\n  let type = null;\n  /** This will be used to create set of options that user will see */\n\n  let options = null;\n  /** Setting Type variable according to dropdown */\n\n  if (selected === \"Algorithm\") {\n    type = algorithm;\n  } else if (selected === \"Language\") {\n    type = language;\n  } else if (selected === \"Data Structure\") {\n    type = dataStructure;\n  }\n  /** If \"Type\" is null or undefined then options will be null,\n   * otherwise it will create a options iterable based on our array\n   */\n\n\n  if (type) {\n    options = type.map(el => /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: el,\n      children: el\n    }, el, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 33\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minWidth: 120\n    },\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"dependant-dropdown\",\n        children: \"Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"dependant-dropdown\",\n        id: \"dependant-dropdown\",\n        value: area,\n        label: \"Area\",\n        onChange: changeSelectOptionHandler,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Choose...\",\n          children: \"Choose...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Algorithm\",\n          children: \"Algorithm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Language\",\n          children: \"Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Data Structure\",\n          children: \"Data Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"dropdown\",\n        children: \"Park Lot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"dropdown\",\n        id: \"dropdown\",\n        value: parklot,\n        label: \"Parklot\",\n        onChange: handleChange,\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(DependantDropDown, \"xjLo1hkI+nE2EzBG7qXzJotuWZA=\");\n\n_c2 = DependantDropDown;\n;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Bookings\");\n$RefreshReg$(_c2, \"DependantDropDown\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Bookings.js"],"names":["format","v4","uuid","PerfectScrollbar","Box","Button","Card","CardHeader","Table","TableBody","TableCell","TableHead","TableRow","TableSortLabel","Tooltip","Paper","Grid","ArrowRightIcon","SeverityPill","makeStyles","UseForm","Form","Controls","Avatar","Select","FormControl","React","useState","useEffect","axios","useStyles","pageContent","margin","padding","orders","id","ref","amount","customer","name","createdAt","status","initialFieldValues","numberPlate","carType","location","parkingLot","date","time","duration","Bookings","props","parkDetail","setParkDetail","handleInputChange","e","value","target","handleSubmit","preventDefault","post","then","response","console","log","catch","error","classes","display","flexWrap","m","width","height","minWidth","map","order","justifyContent","p","InputLabel","MenuItem","DependantDropDown","area","setArea","parklot","setParklot","selected","setSelected","changeSelectOptionHandler","event","handleChange","algorithm","language","dataStructure","type","options","el"],"mappings":"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","sourcesContent":["import { format } from 'date-fns';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  Paper,\n  Grid,\n  \n} from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SeverityPill from '../components/severity-pill';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, { useState, useEffect  } from 'react'\nimport axios from \"axios\";\n\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\",\n  },\n \n});\n\n\nconst orders = [\n    {\n      id: uuid(),\n      ref: 'CDD1049',\n      amount: 30.5,\n      customer: {\n        name: 'Ekaterina Tankova'\n      },\n      createdAt: 1555016400000,\n      status: 'pending'\n    },\n    {\n      id: uuid(),\n      ref: 'CDD1048',\n      amount: 25.1,\n      customer: {\n        name: 'Cao Yu'\n      },\n      createdAt: 1555016400000,\n      status: 'delivered'\n    },\n    {\n      id: uuid(),\n      ref: 'CDD1047',\n      amount: 10.99,\n      customer: {\n        name: 'Alexa Richardson'\n      },\n      createdAt: 1554930000000,\n      status: 'refunded'\n    },\n    {\n      id: uuid(),\n      ref: 'CDD1046',\n      amount: 96.43,\n      customer: {\n        name: 'Anje Keizer'\n      },\n      createdAt: 1554757200000,\n      status: 'pending'\n    },\n    {\n      id: uuid(),\n      ref: 'CDD1045',\n      amount: 32.54,\n      customer: {\n        name: 'Clarke Gillebert'\n      },\n      createdAt: 1554670800000,\n      status: 'delivered'\n    },\n    {\n      id: uuid(),\n      ref: 'CDD1044',\n      amount: 16.76,\n      customer: {\n        name: 'Adam Denisov'\n      },\n      createdAt: 1554670800000,\n      status: 'delivered'\n    }\n  ];\n\n  const initialFieldValues = {\n    id: 0,\n    numberPlate: \"\",\n    carType: \"\",\n    location: \"\",\n    parkingLot: \"\",\n    date: \"\",\n    time: \"\",\n    duration: \"\",\n   \n  };\n\nexport default function Bookings(props) {\n  const [parkDetail, setParkDetail] = useState(initialFieldValues);\n\n  const handleInputChange = e =>{\n\n    const {name, value} = e.target\n    setParkDetail({\n      ...parkDetail,\n      [name]: value\n    })\n\n  }\n\n\n  const handleSubmit = e =>{\n    e.preventDefault()\n\n\n\n    axios.post(\"http://localhost:8080/apiv1/parkingdetails/save\", parkDetail)\n        .then(response => {\n          console.log(response)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n\n  }\n\n  const classes = useStyles();\n // const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues, false);\n\n    return (\n      <>\n      <Box\n      sx={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: 350,\n        },\n      }}\n    >\n      <Paper elevation={3} className={classes.pageContent}>\n        <Avatar /> {/*name*/}\n      <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Number Plate\"\n            name=\"numberPlate\"\n            value={parkDetail.numberPlate}\n            onChange={handleInputChange}\n          />\n          <Controls.BasicSelect\n          name =\"carType\"\n            label=\"Car Type\"\n            value={parkDetail.carType}\n            onChange={handleInputChange}\n          />\n          <Controls.DatePicker\n              value={parkDetail.date}\n          onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <Controls.Dropdown\n              value={parkDetail.location}\n          onChange={handleInputChange}\n          />\n          <Controls.BookingTime\n              value={parkDetail.time}\n              onChange={handleInputChange}\n          />\n          <Controls.Input\n              variant=\"outlined\"\n              label=\"Duration\"\n              name=\"duration\"\n              value={parkDetail.duration}\n              onChange={handleInputChange}\n          />\n          </Grid>\n        </Grid>\n        <Button variant=\"contained\"\n        fullWidth\n                onClick={handleSubmit}\n        >Submit</Button>\n        </Form>\n      </Paper>\n    </Box>\n        <Card {...props}>\n    <CardHeader title=\"Latest Orders\" />\n    <PerfectScrollbar>\n      <Box sx={{ minWidth: 800 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                Order Ref\n              </TableCell>\n              <TableCell>\n                Customer\n              </TableCell>\n              <TableCell sortDirection=\"desc\">\n                <Tooltip\n                  enterDelay={300}\n                  title=\"Sort\"\n                >\n                  <TableSortLabel\n                    active\n                    direction=\"desc\"\n                  >\n                    Date\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n              <TableCell>\n                Status\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {orders.map((order) => (\n              <TableRow\n                hover\n                key={order.id}\n              >\n                <TableCell>\n                  {order.ref}\n                </TableCell>\n                <TableCell>\n                  {order.customer.name}\n                </TableCell>\n                <TableCell>\n                  {format(order.createdAt, 'dd/MM/yyyy')}\n                </TableCell>\n                <TableCell>\n                  <SeverityPill\n                    color={(order.status === 'delivered' && 'success')\n                    || (order.status === 'refunded' && 'error')\n                    || 'warning'}\n                  >\n                    {order.status}\n                  </SeverityPill>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Box>\n    </PerfectScrollbar>\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end',\n        p: 2\n      }}\n    >\n      <Button\n        color=\"primary\"\n        endIcon={<ArrowRightIcon fontSize=\"small\" />}\n        size=\"small\"\n        variant=\"text\"\n      >\n        View all\n      </Button>\n    </Box>\n  </Card>\n  </>\n    )\n}\n\n\n\n\n\n\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nfunction DependantDropDown() {\n  const [area, setArea] = React.useState(\"\");\n  const [parklot, setParklot] = React.useState(\"\");\n  /** \"selected\" here is state variable which will hold the\n   * value of currently selected dropdown.\n   */\n  const [selected, setSelected] = React.useState(\"\");\n\n  /** Function that will set different values to state variable\n   * based on which dropdown is selected\n   */\n  const changeSelectOptionHandler = (event) => {\n    setSelected(event.target.value);\n    setArea(event.target.value);\n  };\n\n  const handleChange = (event) => {\n    setParklot(event.target.value);\n  };\n\n  /** Different arrays for different dropdowns */\n  const algorithm = [\n    \"Searching Algorithm\",\n    \"Sorting Algorithm\",\n    \"Graph Algorithm\",\n  ];\n  const language = [\"C++\", \"Java\", \"Python\", \"C#\"];\n  const dataStructure = [\"Arrays\", \"LinkedList\", \"Stack\", \"Queue\"];\n\n  /** Type variable to store different array for different dropdown */\n  let type = null;\n\n  /** This will be used to create set of options that user will see */\n  let options = null;\n\n  /** Setting Type variable according to dropdown */\n  if (selected === \"Algorithm\") {\n    type = algorithm;\n  } else if (selected === \"Language\") {\n    type = language;\n  } else if (selected === \"Data Structure\") {\n    type = dataStructure;\n  }\n\n  /** If \"Type\" is null or undefined then options will be null,\n   * otherwise it will create a options iterable based on our array\n   */\n  if (type) {\n    options = type.map((el) => (<MenuItem key={el} value={el}>{el}</MenuItem>));\n  }\n  return (\n      <Box sx={{ minWidth: 120 }}>\n        <FormControl fullWidth>\n          <InputLabel id=\"dependant-dropdown\">Area</InputLabel>\n          <Select\n              labelId=\"dependant-dropdown\"\n              id=\"dependant-dropdown\"\n              value={area}\n              label=\"Area\"\n              onChange={changeSelectOptionHandler}\n          >\n            <MenuItem value='Choose...'>Choose...</MenuItem>\n            <MenuItem value='Algorithm'>Algorithm</MenuItem>\n            <MenuItem value='Language'>Language</MenuItem>\n            <MenuItem value='Data Structure'>Data Structure</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl>\n          <InputLabel id=\"dropdown\">Park Lot</InputLabel>\n          <Select\n              labelId=\"dropdown\"\n              id=\"dropdown\"\n              value={parklot}\n              label=\"Parklot\"\n              onChange={handleChange}>{options}</Select>\n        </FormControl>\n      </Box>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}