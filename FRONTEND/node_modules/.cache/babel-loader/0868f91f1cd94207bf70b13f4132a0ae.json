{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SideBar/SideNavBar.js\",\n    _s = $RefreshSig$();\n\n/*\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SideMenu } from \"./SideMenu\";\nimport {AttendantSideMenu} from \"./AttendantSideMenu\";\nimport {AdminSideMenu} from \"./AdminSideMenu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport LoginDialog from \"../LoginDialog\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { Divider } from '@mui/material';\nimport {useEffect, useState} from \"react\";\nimport AuthService from \"../../service/auth.service\";\nimport jwt from 'jwt-decode';\n\nexport default function SideNavBar() {\n  const [isAuthenticated, setIsAuthenticated] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const[motoristPage, setMotoristPage] = useState(false);\n  const[attendantPage, setAttendantPage] = useState(false);\n  const[adminPage, setAdminPage] = useState(false);\n  const [currentUser, setCurrentUser] = useState(undefined);\n\n\n  useEffect(() =>{\n    const user = AuthService.getCurrentUser();\n\n    //const isAdmin = JSON.parse(atob(user.split('.')[1])).role === 'ROLE_MOTORIST';\n\n    if(user){\n      setCurrentUser(user);\n      setMotoristPage(JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_MOTORIST');\n      setAttendantPage(JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ATTENDANT');\n      setAdminPage(JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN');\n    }\n   /*\n    if(user){\n      setCurrentUser(user);\n      setMotoristPage(user.role.includes(\"ROLE_MOTORIST\"));\n      setAttendantPage(user.role.includes(\"ROLE_ATTENDANT\"));\n      setAdminPage(user.role.includes(\"ROLE_ATTENDANT\"));\n    }\n    (//*)\n  }, []);\n\n  const login = () =>{\n    setIsAuthenticated(true);\n    console.log(\"loggedInUser:\" + isAuthenticated);\n  }\n\n  const logout = () =>{\n   /* setIsAuthenticated(false);\n    console.log(\"loggedInUser:\" + isAuthenticated);\n    (//*)\n    AuthService.logout();\n  }\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n          onClick={handleClick}\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon  />\n            <Menu\n              id=\"basic-menu\"\n              anchorEl={anchorEl}\n              open={open}\n              onClose={handleClose}\n              MenuListProps={{\n                \"aria-labelledby\": \"basic-button\",\n              }}\n            >\n\n                {motoristPage && (\n                  SideMenu.map((menuitem, index) => {\n                    return (\n                        <div key={index}>\n                          <MenuItem onClick={handleClose}>\n                            <li key={index}>\n                              <Link to={menuitem.path}>\n                                {menuitem.icon}\n                                {menuitem.title}\n                              </Link>\n                            </li>\n                          </MenuItem>\n                        </div>\n                    );\n                  }))\n                }\n              {attendantPage && (\n                  AttendantSideMenu.map((menuitem, index) => {\n                    return (\n                        <div key={index}>\n                          <MenuItem onClick={handleClose}>\n                            <li key={index}>\n                              <Link to={menuitem.path}>\n                                {menuitem.icon}\n                                {menuitem.title}\n                              </Link>\n                            </li>\n                          </MenuItem>\n                        </div>\n                    );\n                  }))\n              }\n              {adminPage && (\n                  AdminSideMenu.map((menuitem, index) => {\n                    return (\n                        <div key={index}>\n                          <MenuItem onClick={handleClose}>\n                            <li key={index}>\n                              <Link to={menuitem.path}>\n                                {menuitem.icon}\n                                {menuitem.title}\n                              </Link>\n                            </li>\n                          </MenuItem>\n                        </div>\n                    );\n                  }))\n              }\n\n              <Divider />\n             <div><MenuItem onClick={handleClose}>Profile</MenuItem></div>\n             <div><MenuItem onClick={handleClose}>My account</MenuItem></div>\n             <div><MenuItem onClick={logout}>Logout</MenuItem></div>\n            </Menu>\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Parking App\n          </Typography>\n          <LoginDialog />\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n\n*/\nimport * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport MuiDrawer from '@mui/material/Drawer';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\nconst openedMixin = theme => ({\n  width: drawerWidth,\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  overflowX: 'hidden'\n});\n\nconst closedMixin = theme => ({\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  }),\n  overflowX: 'hidden',\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up('sm')]: {\n    width: `calc(${theme.spacing(9)} + 1px)`\n  }\n});\n\nconst DrawerHeader = styled('div')(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar\n}));\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: prop => prop !== 'open'\n})(({\n  theme,\n  open\n}) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  })\n}));\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: prop => prop !== 'open'\n})(({\n  theme,\n  open\n}) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  whiteSpace: 'nowrap',\n  boxSizing: 'border-box',\n  ...(open && { ...openedMixin(theme),\n    '& .MuiDrawer-paper': openedMixin(theme)\n  }),\n  ...(!open && { ...closedMixin(theme),\n    '& .MuiDrawer-paper': closedMixin(theme)\n  })\n}));\nexport default function SideNavBar() {\n  _s();\n\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          edge: \"start\",\n          sx: {\n            marginRight: '36px',\n            ...(open && {\n              display: 'none'\n            })\n          },\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"div\",\n          children: \"Mini variant drawer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 40\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 19\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 40\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 19\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(DrawerHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SideNavBar, \"wGmR9/hunq3L23vhfiuhNflRfmI=\", false, function () {\n  return [useTheme];\n});\n\n_c = SideNavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideNavBar\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SideBar/SideNavBar.js"],"names":["React","styled","useTheme","Box","MuiDrawer","MuiAppBar","Toolbar","List","CssBaseline","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","drawerWidth","openedMixin","theme","width","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","display","alignItems","justifyContent","padding","mixins","toolbar","AppBar","shouldForwardProp","prop","open","zIndex","drawer","marginLeft","Drawer","flexShrink","whiteSpace","boxSizing","SideNavBar","setOpen","useState","handleDrawerOpen","handleDrawerClose","marginRight","direction","map","text","index","flexGrow","p"],"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","sourcesContent":["/*\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SideMenu } from \"./SideMenu\";\nimport {AttendantSideMenu} from \"./AttendantSideMenu\";\nimport {AdminSideMenu} from \"./AdminSideMenu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport LoginDialog from \"../LoginDialog\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { Divider } from '@mui/material';\nimport {useEffect, useState} from \"react\";\nimport AuthService from \"../../service/auth.service\";\nimport jwt from 'jwt-decode';\n\nexport default function SideNavBar() {\n  const [isAuthenticated, setIsAuthenticated] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const[motoristPage, setMotoristPage] = useState(false);\n  const[attendantPage, setAttendantPage] = useState(false);\n  const[adminPage, setAdminPage] = useState(false);\n  const [currentUser, setCurrentUser] = useState(undefined);\n\n\n  useEffect(() =>{\n    const user = AuthService.getCurrentUser();\n\n    //const isAdmin = JSON.parse(atob(user.split('.')[1])).role === 'ROLE_MOTORIST';\n\n    if(user){\n      setCurrentUser(user);\n      setMotoristPage(JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_MOTORIST');\n      setAttendantPage(JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ATTENDANT');\n      setAdminPage(JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN');\n    }\n   /*\n    if(user){\n      setCurrentUser(user);\n      setMotoristPage(user.role.includes(\"ROLE_MOTORIST\"));\n      setAttendantPage(user.role.includes(\"ROLE_ATTENDANT\"));\n      setAdminPage(user.role.includes(\"ROLE_ATTENDANT\"));\n    }\n    (//*)\n  }, []);\n\n  const login = () =>{\n    setIsAuthenticated(true);\n    console.log(\"loggedInUser:\" + isAuthenticated);\n  }\n\n  const logout = () =>{\n   /* setIsAuthenticated(false);\n    console.log(\"loggedInUser:\" + isAuthenticated);\n    (//*)\n    AuthService.logout();\n  }\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n          onClick={handleClick}\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon  />\n            <Menu\n              id=\"basic-menu\"\n              anchorEl={anchorEl}\n              open={open}\n              onClose={handleClose}\n              MenuListProps={{\n                \"aria-labelledby\": \"basic-button\",\n              }}\n            >\n\n                {motoristPage && (\n                  SideMenu.map((menuitem, index) => {\n                    return (\n                        <div key={index}>\n                          <MenuItem onClick={handleClose}>\n                            <li key={index}>\n                              <Link to={menuitem.path}>\n                                {menuitem.icon}\n                                {menuitem.title}\n                              </Link>\n                            </li>\n                          </MenuItem>\n                        </div>\n                    );\n                  }))\n                }\n              {attendantPage && (\n                  AttendantSideMenu.map((menuitem, index) => {\n                    return (\n                        <div key={index}>\n                          <MenuItem onClick={handleClose}>\n                            <li key={index}>\n                              <Link to={menuitem.path}>\n                                {menuitem.icon}\n                                {menuitem.title}\n                              </Link>\n                            </li>\n                          </MenuItem>\n                        </div>\n                    );\n                  }))\n              }\n              {adminPage && (\n                  AdminSideMenu.map((menuitem, index) => {\n                    return (\n                        <div key={index}>\n                          <MenuItem onClick={handleClose}>\n                            <li key={index}>\n                              <Link to={menuitem.path}>\n                                {menuitem.icon}\n                                {menuitem.title}\n                              </Link>\n                            </li>\n                          </MenuItem>\n                        </div>\n                    );\n                  }))\n              }\n\n              <Divider />\n             <div><MenuItem onClick={handleClose}>Profile</MenuItem></div>\n             <div><MenuItem onClick={handleClose}>My account</MenuItem></div>\n             <div><MenuItem onClick={logout}>Logout</MenuItem></div>\n            </Menu>\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Parking App\n          </Typography>\n          <LoginDialog />\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n\n*/\n\n\nimport * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport MuiDrawer from '@mui/material/Drawer';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\n\nconst drawerWidth = 240;\n\nconst openedMixin = (theme) => ({\n  width: drawerWidth,\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: 'hidden',\n});\n\nconst closedMixin = (theme) => ({\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: 'hidden',\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up('sm')]: {\n    width: `calc(${theme.spacing(9)} + 1px)`,\n  },\n});\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n}));\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      ...(open && {\n        ...openedMixin(theme),\n        '& .MuiDrawer-paper': openedMixin(theme),\n      }),\n      ...(!open && {\n        ...closedMixin(theme),\n        '& .MuiDrawer-paper': closedMixin(theme),\n      }),\n    }),\n);\n\nexport default function SideNavBar() {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" open={open}>\n          <Toolbar>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                edge=\"start\"\n                sx={{\n                  marginRight: '36px',\n                  ...(open && { display: 'none' }),\n                }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap component=\"div\">\n              Mini variant drawer\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open}>\n          <DrawerHeader>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n            </IconButton>\n          </DrawerHeader>\n          <Divider />\n          <List>\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemIcon>\n                    {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                  </ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemIcon>\n                    {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                  </ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n            ))}\n          </List>\n        </Drawer>\n        <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n          <DrawerHeader />\n          \n        </Box>\n      </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}