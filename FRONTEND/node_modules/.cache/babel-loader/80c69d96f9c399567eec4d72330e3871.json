{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/Bookings.js\",\n    _s = $RefreshSig$();\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Button, Card, CardHeader, Grid, Paper, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport { makeStyles } from \"@mui/styles\";\nimport { Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, { useEffect, useState } from 'react';\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport TextField from \"@mui/material/TextField\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from '@mui/lab/DatePicker';\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport ParkingDetailService from \"../service/ParkingDetailService\";\nimport DataService from \"../service/DataService\";\nimport moment from \"moment\";\nimport ParkingLotsWithDatesService from \"../service/ParkingLotsWithDatesService\";\nimport AuthService from \"../service/auth.service\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport Dialog from \"@mui/material/Dialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\"\n  },\n  formlogin: {\n    textAlign: 'center'\n  }\n});\nconst initialFieldValues = {\n  id: 0,\n  numberPlate: \"\",\n  vehicleType: \"\",\n  location: \"\",\n  parkingLotName: \"\",\n  parkingDate: \"\",\n  parkTime: \"\",\n  parkDuration: \"\"\n};\nconst initialSearchDetailsValues = {\n  location: \"\",\n  parkingLotName: \"\",\n  parkingDate: \"\"\n};\nexport default function Bookings(props) {\n  _s();\n\n  const [parkDetail, setParkDetail] = useState(initialFieldValues);\n  const [searchParkDetails, setSearchParkDetails] = useState(initialSearchDetailsValues);\n  const [selected, setSelected] = React.useState(\"\");\n  const [value, setValue] = React.useState(null);\n  const [parkLot, setParkLot] = React.useState([]);\n  const [searchLocation, setSearchLocation] = React.useState(\"\");\n  const [locationData, setLocationData] = useState([]);\n  const [parkingLotData, setParkingLotData] = useState([]);\n  const [searchParkingLot, setSearchParkingLot] = useState(\"\");\n  const [freeSpace, setFreeSpace] = useState(0);\n  const [open, setOpen] = React.useState(false);\n  const [amount, setAmount] = useState(0);\n  useEffect(() => {\n    retrieveAllParkingLotsAreaData();\n  }, []);\n\n  const retrieveAllParkingLotsAreaData = () => {\n    DataService.getLocData().then(response => {\n      setLocationData(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const getPkLotList = item => {\n    if (item === searchParkingLot) {\n      DataService.getParkingData(item).then(response => {\n        setParkingLotData(response.data);\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const retrieveAllParkingLots = () => {\n    const currentDate = Date.now();\n    const submittedDate = moment(currentDate).format('YYYY-MM-DD');\n    ParkingLotsWithDatesService.getByDateOnly(submittedDate).then(response => {\n      setParkLot(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParkDetail({ ...parkDetail,\n      [name]: value\n    });\n  };\n\n  const handleOptionOne = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSelected(value);\n    setParkDetail({ ...parkDetail,\n      [name]: value\n    });\n    const searchParkingLot = e.target.value;\n    setSearchParkingLot(searchParkingLot);\n  };\n\n  const handleOptionOneSearch = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSelected(value);\n    setSearchParkDetails({ ...searchParkDetails,\n      [name]: value\n    }); //const searchParkingLot = e.target.value;\n\n    setSearchParkingLot(e.target.value);\n  };\n\n  const handleOptionTwo = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParkDetail({ ...parkDetail,\n      [name]: value\n    });\n  };\n\n  const handleOptionTwoSearch = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSearchParkDetails({ ...searchParkDetails,\n      [name]: value\n    });\n  };\n\n  const saveParkingDetail = () => {\n    const submittedDate = moment(parkDetail.parkingDate).format('YYYY-MM-DD');\n    const submittedTime = moment(parkDetail.parkTime).format('HH:mm');\n    const user = AuthService.getCurrentUser();\n    const motoristEmail = JSON.parse(atob(user.split('.')[1])).sub;\n    const data = {\n      numberPlate: parkDetail.numberPlate.toUpperCase(),\n      vehicleType: parkDetail.vehicleType,\n      location: parkDetail.location,\n      parkingLotName: parkDetail.parkingLotName,\n      parkingDate: submittedDate,\n      parkTime: submittedTime,\n      parkDuration: parkDetail.parkDuration\n    };\n    ParkingDetailService.checkAmount(data).then(response => {\n      console.log(response);\n      setAmount(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n    ParkingDetailService.checkBookingSpace(data).then(response => {\n      console.log(response);\n      setFreeSpace(response.data);\n\n      if (response.data >= 0) {\n        ParkingDetailService.create(data, motoristEmail).then(response => {\n          alert(\"booking successful\");\n          console.log(response);\n        }).catch(error => {\n          alert(\"error booking\");\n          console.log(error);\n        });\n      } else {\n        alert(\"error submitting data\");\n      }\n    });\n    setOpen(true);\n  };\n\n  const findParkingLotByLocationAndDate = () => {\n    const submittedDate = moment(searchParkDetails.parkingDate).format('YYYY-MM-DD');\n    const data = {\n      location: searchParkDetails.location,\n      parkingLotName: searchParkDetails.parkingLotName,\n      parkingDate: submittedDate\n    };\n    ParkingLotsWithDatesService.getParkingDataSearch(data).then(response => {\n      setParkLot(response.data);\n      console.log(response);\n      console.log(setParkLot);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: saveParkingDetail,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Number Plate\",\n                name: \"numberPlate\",\n                value: parkDetail.numberPlate,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-simple-select-label\",\n                  children: \"CarType\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"demo-simple-select-label\",\n                  id: \"demo-simple-select-label\",\n                  name: \"vehicleType\",\n                  value: parkDetail.vehicleType,\n                  label: \"Vehicle Type\",\n                  onChange: handleInputChange,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Motorcycle\",\n                    children: \"Motorcycle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Tricycle\",\n                    children: \"Tricycle(Tuktuk)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Car\",\n                    children: \"Car\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Lorry\",\n                    children: \"Lorry\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: AdapterDateFns,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  label: \"Booking Date\",\n                  value: value,\n                  onChange: date => {\n                    setValue(date);\n                    setParkDetail({ ...parkDetail,\n                      parkingDate: date\n                    });\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    name: \"parkingDate\",\n                    value: parkDetail.parkingDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: AdapterDateFns,\n                children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                  label: \"Booking time\",\n                  placeholder: \"Booking Time\",\n                  value: value,\n                  onChange: date => {\n                    setValue(date);\n                    setParkDetail({ ...parkDetail,\n                      parkTime: date\n                    });\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    name: \"parkTime\",\n                    value: parkDetail.parkTime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"dependant-dropdown\",\n                  children: \"location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"dependant-dropdown\",\n                  id: \"dependant-dropdown\",\n                  name: \"location\",\n                  value: parkDetail.location,\n                  label: \"Location\",\n                  onChange: handleOptionOne,\n                  children: locationData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    onClick: getPkLotList({\n                      item\n                    }),\n                    children: item\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 15\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"dropdown\",\n                  children: \"Park Lot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"dropdown\",\n                  id: \"dropdown\",\n                  name: \"parkingLotName\",\n                  value: parkDetail.parkingLotName,\n                  label: \"Park Lot\",\n                  onChange: handleOptionTwo,\n                  children: parkingLotData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    children: item\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 19\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Park Duration\",\n                name: \"parkDuration\",\n                value: parkDetail.parkDuration,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            onClick: saveParkingDetail,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n            open: open,\n            onClose: handleClose,\n            \"aria-labelledby\": \"alert-dialog-title\",\n            \"aria-describedby\": \"alert-dialog-description\",\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              id: \"alert-dialog-title\",\n              children: \"Parking Charges\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n                id: \"alert-dialog-description\",\n                className: classes.formlogin,\n                children: [\"Charges for this parking is : \", amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                fullWidth: true,\n                onClick: handleClose,\n                children: \"OK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: \"SEARCH FOR PARKING LOTS AND AVAILABLE SPACES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            minWidth: 800\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: findParkingLotByLocationAndDate,\n            children: [/*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDateFns,\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                label: \"Search Date\",\n                value: value,\n                onChange: date => {\n                  setValue(date);\n                  setSearchParkDetails({ ...searchParkDetails,\n                    parkingDate: date\n                  });\n                },\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  name: \"parkingDate\",\n                  value: searchParkDetails.parkingDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 46\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"dependant-dropdown\",\n                children: \"location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"dependant-dropdown\",\n                id: \"dependant-dropdown\",\n                name: \"location\",\n                value: searchParkDetails.location,\n                label: \"Location\",\n                onChange: handleOptionOneSearch,\n                children: locationData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: item,\n                  onClick: getPkLotList(item),\n                  children: item\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"dropdown\",\n                children: \"Park Lot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"dropdown\",\n                id: \"dropdown\",\n                name: \"parkingLotName\",\n                value: searchParkDetails.parkingLotName,\n                label: \"Park Lot\",\n                onChange: handleOptionTwoSearch,\n                children: parkingLotData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: item,\n                  children: item\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                fullWidth: true,\n                onClick: findParkingLotByLocationAndDate,\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: retrieveAllParkingLots,\n                children: \"Today\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n          title: \"Parking lots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              minWidth: 800\n            },\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              sx: {\n                minWidth: 650\n              },\n              \"aria-label\": \"simple table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"parkingLotName\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"totalParkingSpaces\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"AvailableSpaces\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: parkLot.map(park => /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: park.parkingLotName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: park.totalCapacity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: park.availableSpace\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 579,\n                    columnNumber: 27\n                  }, this)]\n                }, park.parkingLotId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            endIcon: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 18\n            }, this),\n            size: \"small\",\n            variant: \"text\",\n            children: \"View all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Bookings, \"uTEQ4ncTjMQKatAQ+YOdjxrdG0g=\", false, function () {\n  return [useStyles];\n});\n\n_c = Bookings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bookings\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/Bookings.js"],"names":["PerfectScrollbar","Box","Button","Card","CardHeader","Grid","Paper","Table","TableBody","TableCell","TableHead","TableRow","ArrowRightIcon","makeStyles","Form","Controls","Avatar","Select","FormControl","React","useEffect","useState","InputLabel","MenuItem","AdapterDateFns","TextField","LocalizationProvider","DatePicker","TimePicker","ParkingDetailService","DataService","moment","ParkingLotsWithDatesService","AuthService","DialogTitle","DialogContent","DialogContentText","Dialog","useStyles","pageContent","margin","padding","formlogin","textAlign","initialFieldValues","id","numberPlate","vehicleType","location","parkingLotName","parkingDate","parkTime","parkDuration","initialSearchDetailsValues","Bookings","props","parkDetail","setParkDetail","searchParkDetails","setSearchParkDetails","selected","setSelected","value","setValue","parkLot","setParkLot","searchLocation","setSearchLocation","locationData","setLocationData","parkingLotData","setParkingLotData","searchParkingLot","setSearchParkingLot","freeSpace","setFreeSpace","open","setOpen","amount","setAmount","retrieveAllParkingLotsAreaData","getLocData","then","response","data","console","log","catch","error","getPkLotList","item","getParkingData","retrieveAllParkingLots","currentDate","Date","now","submittedDate","format","getByDateOnly","handleInputChange","e","name","target","handleOptionOne","handleOptionOneSearch","handleOptionTwo","handleOptionTwoSearch","saveParkingDetail","submittedTime","user","getCurrentUser","motoristEmail","JSON","parse","atob","split","sub","toUpperCase","checkAmount","checkBookingSpace","create","alert","findParkingLotByLocationAndDate","getParkingDataSearch","handleClose","classes","display","flexWrap","m","width","height","date","params","map","index","minWidth","park","totalCapacity","availableSpace","parkingLotId","justifyContent","p"],"mappings":"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","sourcesContent":["import PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    Grid,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n} from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport {makeStyles} from \"@mui/styles\";\nimport {Form} from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, {useEffect, useState} from 'react'\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport TextField from \"@mui/material/TextField\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from '@mui/lab/DatePicker';\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport ParkingDetailService from \"../service/ParkingDetailService\";\nimport DataService from \"../service/DataService\";\nimport moment from \"moment\";\nimport ParkingLotsWithDatesService from \"../service/ParkingLotsWithDatesService\";\nimport AuthService from \"../service/auth.service\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport Dialog from \"@mui/material/Dialog\";\n\n\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\",\n  },\n    formlogin : {\n        textAlign : 'center',\n    }\n \n});\n\n\n  const initialFieldValues = {\n    id: 0,\n    numberPlate: \"\",\n    vehicleType: \"\",\n    location: \"\",\n    parkingLotName: \"\",\n    parkingDate: \"\",\n    parkTime: \"\",\n    parkDuration: \"\",\n   \n  };\n\n  const initialSearchDetailsValues = {\n      location: \"\",\n      parkingLotName: \"\",\n      parkingDate: \"\",\n  }\n\n\n\nexport default function Bookings(props) {\n      const [parkDetail, setParkDetail] = useState(initialFieldValues);\n  const [searchParkDetails, setSearchParkDetails] = useState(initialSearchDetailsValues);\n  const [selected, setSelected] = React.useState(\"\");\n  const [value, setValue] = React.useState(null);\n  const [parkLot, setParkLot] = React.useState([]);\n  const [searchLocation, setSearchLocation] = React.useState(\"\");\n  const [locationData, setLocationData] = useState([]);\n  const [parkingLotData, setParkingLotData] = useState([]);\n  const [searchParkingLot, setSearchParkingLot] = useState(\"\");\n  const [freeSpace, setFreeSpace] = useState(0);\n    const [open, setOpen] = React.useState(false);\n    const [amount, setAmount] = useState(0);\n\n\n\n\n  useEffect(() =>{\n  retrieveAllParkingLotsAreaData();\n}, []);\n\n\n\n  const retrieveAllParkingLotsAreaData = () =>{\n\n    DataService.getLocData().then(response => {\n      setLocationData(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error)\n    })\n\n  }\n\n\n\n\n  const getPkLotList = (item) => {\n\n      if(item === searchParkingLot) {\n          DataService.getParkingData(item).then(response => {\n              setParkingLotData(response.data);\n              console.log(response);\n          }).catch(error => {\n              console.log(error)\n          })\n      }\n\n\n  };\n\n\n   \n\n\n\n\n  const retrieveAllParkingLots = () =>{\n      const currentDate = Date.now();\n      const submittedDate = moment(currentDate).format('YYYY-MM-DD')\n\n      ParkingLotsWithDatesService.getByDateOnly(submittedDate).then(response => {\n      setParkLot(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  const handleInputChange = e =>{\n    const {name, value} = e.target\n    setParkDetail({\n      ...parkDetail,\n      [name]: value,\n    })\n\n\n  }\n\n   const handleOptionOne = e =>{\n\n\n       const {name, value} = e.target\n     setSelected(value)\n     setParkDetail({\n       ...parkDetail,\n       [name]: value,\n     })\n\n\n     const searchParkingLot = e.target.value;\n     setSearchParkingLot(searchParkingLot);\n\n   }\n\n\n\n    const handleOptionOneSearch = e =>{\n        const {name, value} = e.target\n        setSelected(value)\n        setSearchParkDetails({\n            ...searchParkDetails,\n            [name]: value,\n        })\n\n\n        //const searchParkingLot = e.target.value;\n        setSearchParkingLot(e.target.value);\n\n    }\n  const handleOptionTwo = e =>{\n    const {name, value} = e.target\n    setParkDetail({\n      ...parkDetail,\n      [name]: value,\n    })\n  }\n\n    const handleOptionTwoSearch = e =>{\n        const {name, value} = e.target\n        setSearchParkDetails({\n            ...searchParkDetails,\n            [name]: value,\n        })\n    }\n\n\n\n\n\n  const saveParkingDetail = () =>{\n\n    const submittedDate = moment(parkDetail.parkingDate).format('YYYY-MM-DD')\n    const submittedTime = moment(parkDetail.parkTime).format('HH:mm')\n      const user = AuthService.getCurrentUser();\n      const motoristEmail = JSON.parse(atob(user.split('.')[1])).sub;\n    const data ={\n      numberPlate: parkDetail.numberPlate.toUpperCase(),\n      vehicleType: parkDetail.vehicleType,\n      location: parkDetail.location,\n      parkingLotName: parkDetail.parkingLotName,\n      parkingDate: submittedDate,\n      parkTime: submittedTime,\n      parkDuration: parkDetail.parkDuration,\n\n    };\n      ParkingDetailService.checkAmount(data).then(response => {\n          console.log(response)\n          setAmount(response.data);\n      }).catch(error => {\n          console.log(error)\n      });\n    ParkingDetailService.checkBookingSpace(data).then(response =>{\n      console.log(response)\n      setFreeSpace(response.data);\n\n      if(response.data >= 0){\n        ParkingDetailService.create(data, motoristEmail).then(response => {\n            alert(\"booking successful\");\n          console.log(response)\n        })\n            .catch(error => {\n                alert(\"error booking\");\n              console.log(error)\n            })\n      }else{\n        alert(\"error submitting data\");\n      }\n    })\n\n      setOpen(true);\n\n  }\n\n\n\n\n\n    const findParkingLotByLocationAndDate = () =>{\n\n        const submittedDate = moment(searchParkDetails.parkingDate).format('YYYY-MM-DD')\n        const data ={\n\n            location: searchParkDetails.location,\n            parkingLotName: searchParkDetails.parkingLotName,\n            parkingDate: submittedDate,\n\n        };\n\n        ParkingLotsWithDatesService.getParkingDataSearch(data).then(response => {\n            setParkLot(response.data);\n            console.log(response);\n            console.log(setParkLot);\n        })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n\n\n\n\n\n  const classes = useStyles();\n\n    return (\n      <>\n      <Box\n      sx={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%',\n        },\n      }}\n    >\n      <Paper elevation={3} className={classes.pageContent}>\n        <Avatar /> {/*name*/}\n      <Form onSubmit={saveParkingDetail}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Number Plate\"\n            name=\"numberPlate\"\n            value={parkDetail.numberPlate}\n            onChange={handleInputChange}\n          />\n\n\n\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">CarType</InputLabel>\n            <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select-label\"\n                name=\"vehicleType\"\n                value={parkDetail.vehicleType}\n                label=\"Vehicle Type\"\n                onChange={handleInputChange}\n            >\n                <MenuItem value='Motorcycle'>Motorcycle</MenuItem>\n                <MenuItem value='Tricycle'>Tricycle(Tuktuk)</MenuItem>\n                <MenuItem value='Car'>Car</MenuItem>\n                <MenuItem value='Lorry'>Lorry</MenuItem>\n            </Select>\n          </FormControl>\n\n\n\n\n\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DatePicker\n                label=\"Booking Date\"\n                value={value}\n\n                onChange={(date) => {\n                  setValue(date);\n\n                  setParkDetail({\n                    ...parkDetail,\n                    parkingDate : date,\n                  })\n                }}\n                renderInput={(params) => <TextField {...params}\n                name=\"parkingDate\" value={parkDetail.parkingDate}\n                />}\n            />\n          </LocalizationProvider>\n\n\n\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <TimePicker\n                label=\"Booking time\"\n                placeholder=\"Booking Time\"\n                value={value}\n                onChange={(date) => {\n                  setValue(date);\n\n                  setParkDetail({\n                    ...parkDetail,\n                    parkTime : date,\n                  })\n                }}\n                renderInput={(params) => <TextField {...params}\n                    name=\"parkTime\" value={parkDetail.parkTime}/>}\n            />\n          </LocalizationProvider>\n\n\n\n\n\n\n        </Grid>\n\n        <Grid item xs={6}>\n\n\n\n\n          <FormControl fullWidth>\n            <InputLabel id=\"dependant-dropdown\">location</InputLabel>\n            <Select\n                labelId=\"dependant-dropdown\"\n                id=\"dependant-dropdown\"\n                name=\"location\"\n                value={parkDetail.location}\n                label=\"Location\"\n                onChange={handleOptionOne}\n            >{locationData.map((item ,index) =>\n              <MenuItem value={item} key={index}\n                        \n                        onClick={getPkLotList({item})}>{item}</MenuItem>)}\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"dropdown\">Park Lot</InputLabel>\n            <Select\n                labelId=\"dropdown\"\n                id=\"dropdown\"\n                name=\"parkingLotName\"\n                value={parkDetail.parkingLotName}\n                label=\"Park Lot\"\n                onChange={handleOptionTwo}>{\n                  parkingLotData.map((item, index) =>\n                  <MenuItem value={item} key={index} >{item}</MenuItem> )\n            }</Select>\n          </FormControl>\n\n\n          <Controls.Input\n              variant=\"outlined\"\n              label=\"Park Duration\"\n              name=\"parkDuration\"\n              value={parkDetail.parkDuration}\n              onChange={handleInputChange}\n          />\n          </Grid>\n        </Grid>\n        <Button variant=\"contained\"\n        fullWidth\n                onClick={saveParkingDetail}\n        >Submit</Button>\n          <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n          >\n              <DialogTitle id=\"alert-dialog-title\">\n                  {\"Parking Charges\"}\n              </DialogTitle>\n              <DialogContent>\n                  <DialogContentText id=\"alert-dialog-description\" className={classes.formlogin}>\n                      Charges for this parking is : {amount}\n                      </DialogContentText>\n                  <Button variant=\"contained\"\n                          fullWidth\n                          onClick={handleClose}\n                  >OK</Button>\n              </DialogContent>\n          </Dialog>\n\n        </Form>\n      </Paper>\n      </Box>\n        <Box\n            sx={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              '& > :not(style)': {\n                m: 1,\n                width: '100%',\n                height: '100%',\n              },\n            }}\n        >\n\n\n            <Paper elevation={3} className={classes.pageContent}>\n\n                <CardHeader title=\"SEARCH FOR PARKING LOTS AND AVAILABLE SPACES\" />\n                    <Box sx={{ minWidth: 800 }}>\n\n        <Form onSubmit={findParkingLotByLocationAndDate}>\n\n\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DatePicker\n                    label=\"Search Date\"\n                    value={value}\n\n                    onChange={(date) => {\n                        setValue(date);\n\n                        setSearchParkDetails({\n                            ...searchParkDetails,\n                            parkingDate : date,\n                        })\n                    }}\n                    renderInput={(params) => <TextField {...params}\n                                                        name=\"parkingDate\" value={searchParkDetails.parkingDate}\n                    />}\n                />\n            </LocalizationProvider>\n\n            <FormControl fullWidth>\n                <InputLabel id=\"dependant-dropdown\">location</InputLabel>\n                <Select\n                    labelId=\"dependant-dropdown\"\n                    id=\"dependant-dropdown\"\n                    name=\"location\"\n                    value={searchParkDetails.location}\n                    label=\"Location\"\n                    onChange={handleOptionOneSearch}\n                >{locationData.map((item ,index) =>\n                    <MenuItem value={item} key={index}\n                              onClick={getPkLotList(item)}>{item}</MenuItem>)}\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"dropdown\">Park Lot</InputLabel>\n                <Select\n                    labelId=\"dropdown\"\n                    id=\"dropdown\"\n                    name=\"parkingLotName\"\n                    value={searchParkDetails.parkingLotName}\n                    label=\"Park Lot\"\n                    onChange={handleOptionTwoSearch}>{\n                    parkingLotData.map((item, index) =>\n                        <MenuItem value={item} key={index} >{item}</MenuItem> )\n                }</Select>\n            </FormControl>\n\n          <FormControl fullWidth>\n\n              <Button variant=\"contained\"\n                      fullWidth\n                      onClick={findParkingLotByLocationAndDate}\n              >Search</Button>\n\n\n\n          </FormControl>\n\n\n\n          <div align=\"right\">\n            <Button variant=\"contained\"\n                    onClick={retrieveAllParkingLots}>Today</Button>\n          </div>\n\n        </Form>\n                    </Box>\n\n\n\n\n\n\n    <CardHeader title=\"Parking lots\" />\n\n          <PerfectScrollbar>\n            <Box sx={{ minWidth: 800 }}>\n              <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n\n                    <TableCell>\n                      parkingLotName\n                    </TableCell>\n                    <TableCell>\n                      totalParkingSpaces\n                    </TableCell>\n                    <TableCell>\n                      AvailableSpaces\n                    </TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    parkLot.map((park) =>(\n\n                        <TableRow\n                            hover\n                            key={park.parkingLotId}\n                        >\n\n                          <TableCell>\n                            {park.parkingLotName}\n                          </TableCell>\n                          <TableCell>\n                            {park.totalCapacity}\n                          </TableCell>\n                          <TableCell>\n                            {park.availableSpace}\n                          </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </PerfectScrollbar>\n\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end',\n        p: 2\n      }}\n    >\n      <Button\n        color=\"primary\"\n        endIcon={<ArrowRightIcon fontSize=\"small\" />}\n        size=\"small\"\n        variant=\"text\"\n      >\n        View all\n      </Button>\n    </Box>\n\n\n            </Paper>\n        </Box>\n  </>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}