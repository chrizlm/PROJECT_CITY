{"ast":null,"code":"import http from \"./http-common\";\nimport authHeader from \"./auth-header\";\n\nconst getAll = () => {\n  return http.get(\"/apiv1/parkingLot/all\", {\n    headers: authHeader()\n  });\n};\n\nconst get = parkinglocation => {\n  return http.get(`/apiv1/parkingLot/get/${parkinglocation}`);\n};\n\nconst create = data => {\n  return http.post(\"/apiv1/parkingLot/save\", data);\n};\n\nconst updateAlt = (id, data) => {\n  return http.put(`/apiv1/parkingLot/update/${id}`, data);\n};\n\nconst update = data => {\n  return http.put(`/apiv1/parkingLot/update`, data);\n};\n\nconst remove = id => {\n  return http.delete(`/apiv1/parkingLot/${id}`);\n};\n\nconst removeAll = () => {\n  return http.delete(`/apiv1/parkingLot/all`);\n};\n\nconst findByLocation = location => {\n  return http.get(`/apiv1/parkingLot/get/${location}`);\n};\n\nexport default {\n  getAll,\n  get,\n  create,\n  update,\n  remove,\n  removeAll,\n  findByLocation\n};","map":{"version":3,"sources":["/Users/christopherlijoodi/Desktop/CITYPARK/src/service/ParkingLotService.js"],"names":["http","authHeader","getAll","get","headers","parkinglocation","create","data","post","updateAlt","id","put","update","remove","delete","removeAll","findByLocation","location"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,SAAOF,IAAI,CAACG,GAAL,CAAS,uBAAT,EAAkC;AAAEC,IAAAA,OAAO,EAAEH,UAAU;AAArB,GAAlC,CAAP;AACH,CAFD;;AAIA,MAAME,GAAG,GAAGE,eAAe,IAAI;AAC3B,SAAOL,IAAI,CAACG,GAAL,CAAU,yBAAwBE,eAAgB,EAAlD,CAAP;AACH,CAFD;;AAIA,MAAMC,MAAM,GAAGC,IAAI,IAAI;AACnB,SAAOP,IAAI,CAACQ,IAAL,CAAU,wBAAV,EAAoCD,IAApC,CAAP;AACH,CAFD;;AAIA,MAAME,SAAS,GAAG,CAACC,EAAD,EAAKH,IAAL,KAAc;AAC5B,SAAOP,IAAI,CAACW,GAAL,CAAU,4BAA2BD,EAAG,EAAxC,EAA2CH,IAA3C,CAAP;AACH,CAFD;;AAIA,MAAMK,MAAM,GAAIL,IAAD,IAAU;AACrB,SAAOP,IAAI,CAACW,GAAL,CAAU,0BAAV,EAAqCJ,IAArC,CAAP;AACH,CAFD;;AAIA,MAAMM,MAAM,GAAGH,EAAE,IAAI;AACjB,SAAOV,IAAI,CAACc,MAAL,CAAa,qBAAoBJ,EAAG,EAApC,CAAP;AACH,CAFD;;AAIA,MAAMK,SAAS,GAAG,MAAM;AACpB,SAAOf,IAAI,CAACc,MAAL,CAAa,uBAAb,CAAP;AACH,CAFD;;AAIA,MAAME,cAAc,GAAGC,QAAQ,IAAI;AAC/B,SAAOjB,IAAI,CAACG,GAAL,CAAU,yBAAwBc,QAAS,EAA3C,CAAP;AACH,CAFD;;AAIA,eAAe;AACXf,EAAAA,MADW;AAEXC,EAAAA,GAFW;AAGXG,EAAAA,MAHW;AAIXM,EAAAA,MAJW;AAKXC,EAAAA,MALW;AAMXE,EAAAA,SANW;AAOXC,EAAAA;AAPW,CAAf","sourcesContent":["import http from \"./http-common\"\nimport authHeader from \"./auth-header\";\n\nconst getAll = () => {\n    return http.get(\"/apiv1/parkingLot/all\", { headers: authHeader() });\n};\n\nconst get = parkinglocation => {\n    return http.get(`/apiv1/parkingLot/get/${parkinglocation}`);\n};\n\nconst create = data => {\n    return http.post(\"/apiv1/parkingLot/save\", data);\n};\n\nconst updateAlt = (id, data) => {\n    return http.put(`/apiv1/parkingLot/update/${id}`, data);\n};\n\nconst update = (data) => {\n    return http.put(`/apiv1/parkingLot/update`, data);\n};\n\nconst remove = id => {\n    return http.delete(`/apiv1/parkingLot/${id}`);\n};\n\nconst removeAll = () => {\n    return http.delete(`/apiv1/parkingLot/all`);\n};\n\nconst findByLocation = location => {\n    return http.get(`/apiv1/parkingLot/get/${location}`);\n};\n\nexport default {\n    getAll,\n    get,\n    create,\n    update,\n    remove,\n    removeAll,\n    findByLocation\n};"]},"metadata":{},"sourceType":"module"}