{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/ParkingLot.js\",\n    _s = $RefreshSig$();\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Button, Card, CardHeader, Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel, Tooltip, Paper, Grid } from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SeverityPill from '../components/severity-pill';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport ParkingLotService from \"../service/ParkingLotService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\"\n  }\n});\nconst baseURL = \"http://localhost:8080/apiv1/parkingLot/get\";\nconst initialFieldValues = {\n  parkingLotId: 0,\n  parkingRegNo: \"\",\n  parkingLotLocation: \"\",\n  parkingLotName: \"\",\n  totalParkingSpaces: 0\n};\nexport default function ParkingLot(props) {\n  _s();\n\n  const [parkDetail, setParkDetail] = useState(initialFieldValues);\n  const [selected, setSelected] = React.useState(\"\");\n  const [value, setValue] = React.useState(new Date());\n  const [parkLot, setParkLot] = React.useState([]);\n  const [search, setSearch] = React.useState(\"\");\n  const [location, setLocation] = React.useState(\"\");\n\n  const saveParkingLot = () => {\n    var data = {\n      parkingRegNo: parkDetail.parkingRegNo,\n      parkingLotLocation: parkDetail.parkingLotLocation,\n      parkingLotName: parkDetail.parkingLotName,\n      totalParkingSpaces: parkDetail.totalParkingSpaces\n    };\n    ParkingLotService.create(data).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const retrieveAllParkingLots = () => {\n    ParkingLotService.getAll().then(response => {\n      setParkLot(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const findParkingLotByLocation = () => {\n    ParkingLotService.findByLocation().then(response => {\n      setParkLot(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParkDetail({ ...parkDetail,\n      [name]: value\n    });\n  };\n  /*\n      const handleSubmit = e =>{\n          e.preventDefault()\n  \n  \n  \n          axios.post(\"http://localhost:8080/apiv1/parkingLot/save\", parkDetail)\n              .then(response => {\n                  console.log(response)\n              })\n              .catch(error => {\n                  console.log(error)\n              })\n  \n      }\n   */\n\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: 350\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: saveParkingLot,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Parking LotReg\",\n                name: \"parkingRegNo\",\n                value: parkDetail.parkingRegNo,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Parking Location\",\n                name: \"parkingLotLocation\",\n                value: parkDetail.parkingLotLocation,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Parking Lot name\",\n                name: \"parkingLotName\",\n                value: parkDetail.parkingLotName,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Parking Lot spaces\",\n                name: \"totalParkingSpaces\",\n                value: parkDetail.totalParkingSpaces,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            onClick: saveParkingLot,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ParkingLot, \"EeWzeL25x2ZeLd80GeW83IAXi7w=\", false, function () {\n  return [useStyles];\n});\n\n_c = ParkingLot;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParkingLot\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/ParkingLot.js"],"names":["PerfectScrollbar","Box","Button","Card","CardHeader","Table","TableBody","TableCell","TableHead","TableRow","TableSortLabel","Tooltip","Paper","Grid","ArrowRightIcon","SeverityPill","makeStyles","UseForm","Form","Controls","Avatar","Select","FormControl","React","useState","useEffect","axios","ParkingLotService","useStyles","pageContent","margin","padding","baseURL","initialFieldValues","parkingLotId","parkingRegNo","parkingLotLocation","parkingLotName","totalParkingSpaces","ParkingLot","props","parkDetail","setParkDetail","selected","setSelected","value","setValue","Date","parkLot","setParkLot","search","setSearch","location","setLocation","saveParkingLot","data","create","then","response","console","log","catch","error","retrieveAllParkingLots","getAll","findParkingLotByLocation","findByLocation","handleInputChange","e","name","target","classes","display","flexWrap","m","width","height"],"mappings":"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","sourcesContent":["import PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Tooltip,\n    Paper,\n    Grid,\n\n} from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SeverityPill from '../components/severity-pill';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, { useState, useEffect  } from 'react'\nimport axios from \"axios\";\nimport ParkingLotService from \"../service/ParkingLotService\";\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\nconst baseURL = \"http://localhost:8080/apiv1/parkingLot/get\";\n\nconst initialFieldValues = {\n    parkingLotId: 0,\n    parkingRegNo: \"\",\n    parkingLotLocation: \"\",\n    parkingLotName: \"\",\n    totalParkingSpaces: 0,\n\n};\n\n\nexport default function ParkingLot(props) {\n    const [parkDetail, setParkDetail] = useState(initialFieldValues);\n    const [selected, setSelected] = React.useState(\"\");\n    const [value, setValue] = React.useState(new Date());\n    const [parkLot, setParkLot] = React.useState([]);\n    const [search, setSearch] = React.useState(\"\");\n    const [location, setLocation] = React.useState(\"\");\n    \n    const saveParkingLot = () =>{\n        var data ={\n            parkingRegNo: parkDetail.parkingRegNo,\n            parkingLotLocation: parkDetail.parkingLotLocation,\n            parkingLotName: parkDetail.parkingLotName,\n            totalParkingSpaces: parkDetail.totalParkingSpaces,\n        };\n        ParkingLotService.create(data).then(response => {\n            console.log(response)\n        })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    const retrieveAllParkingLots = () =>{\n        ParkingLotService.getAll().then(response => {\n            setParkLot(response.data);\n            console.log(response);\n        })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    const findParkingLotByLocation = () =>{\n        ParkingLotService.findByLocation().then(response => {\n            setParkLot(response.data);\n            console.log(response);\n        })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n\n    const handleInputChange = e =>{\n\n        const {name, value} = e.target\n        setParkDetail({\n            ...parkDetail,\n            [name]: value,\n        })\n\n    }\n\n\n/*\n    const handleSubmit = e =>{\n        e.preventDefault()\n\n\n\n        axios.post(\"http://localhost:8080/apiv1/parkingLot/save\", parkDetail)\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n\n    }\n */\n\n\n\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: 350,\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <Avatar /> {/*name*/}\n                    <Form onSubmit={saveParkingLot}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking LotReg\"\n                                    name=\"parkingRegNo\"\n                                    value={parkDetail.parkingRegNo}\n                                    onChange={handleInputChange}\n                                />\n\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking Location\"\n                                    name=\"parkingLotLocation\"\n                                    value={parkDetail.parkingLotLocation}\n                                    onChange={handleInputChange}\n                                />\n\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking Lot name\"\n                                    name=\"parkingLotName\"\n                                    value={parkDetail.parkingLotName}\n                                    onChange={handleInputChange}\n                                />\n\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking Lot spaces\"\n                                    name=\"totalParkingSpaces\"\n                                    value={parkDetail.totalParkingSpaces}\n                                    onChange={handleInputChange}\n                                />\n\n\n                            </Grid>\n\n                        </Grid>\n                        <Button variant=\"contained\"\n                                fullWidth\n                                onClick={saveParkingLot}\n                        >Submit</Button>\n                    </Form>\n                </Paper>\n            </Box>\n        </>\n    )\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}