{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AccountSettingsAdmin.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Box, Button, Paper, Card, CardContent, Grid, CardHeader, Divider, TextField } from '@mui/material';\nimport DataService from \"../service/DataService\";\nimport AdminServices from \"../service/AdminServices\";\nimport * as React from 'react';\nimport CardActions from '@mui/material/CardActions';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\nimport axios from \"axios\";\nimport AuthService from \"../service/auth.service\";\nimport { makeStyles } from \"@mui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\"\n  }\n});\nconst initialFieldValues = {\n  id: 0,\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  gender: \"\",\n  password: \"\"\n};\nexport default function AccountSettingsAdmin() {\n  _s();\n\n  const [userDetails, setUserDetails] = useState(initialFieldValues);\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n    /*\n            const isAdmin = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN';\n            const isAttendant = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ATTENDANT';\n            const isMotorist = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_MOTORIST';\n            const email = JSON.parse(atob(user.split('.')[1])).sub;\n    \n            //const isAdmin = JSON.parse(atob(user.split('.')[1])).role === 'ROLE_MOTORIST';\n            \n     */\n\n    if (user) {\n      const isAdmin = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN';\n      const email = JSON.parse(atob(user.split('.')[1])).sub;\n\n      if (isAdmin) {\n        AdminServices.getAdmin(email).then(response => {\n          setUserDetails(response.data);\n          console.log(response);\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    }\n  }, []);\n  /*\n    useEffect(() =>{\n        retrieveUsersDetails();\n    }, []);\n  //await axios.get(`http://localhost:8080/apiv1/admin/get/${emailData}`)\n    const retrieveUsersDetails = async () =>{\n         AdminServices.getAdmin(emailData).then(response => {\n            setUserDetails(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error)\n        })\n     }\n    */\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.pageContent,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            maxWidth: 370\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            subheader: \"Account Information\",\n            title: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 2,\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: \"A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"div\",\n              children: userDetails.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 9,\n                children: [\"First Name:  \", userDetails.firstName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 61\n                }, this), \"Last Name: \", userDetails.lastName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 58\n                }, this), \"Gender: \", userDetails.gender, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 53\n                }, this), \"Email: \", userDetails.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              children: \"Change Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          subheader: \"Update password\",\n          title: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Password\",\n            margin: \"normal\",\n            name: \"password\",\n            onChange: handleChange,\n            type: \"password\",\n            value: values.password,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Confirm password\",\n            margin: \"normal\",\n            name: \"confirm\",\n            onChange: handleChange,\n            type: \"password\",\n            value: values.confirm,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AccountSettingsAdmin, \"SUDqEjNDgqnbCInNC4jo6YYt39U=\", false, function () {\n  return [useStyles];\n});\n\n_c = AccountSettingsAdmin;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSettingsAdmin\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AccountSettingsAdmin.js"],"names":["useEffect","useState","Box","Button","Paper","Card","CardContent","Grid","CardHeader","Divider","TextField","DataService","AdminServices","React","CardActions","CardMedia","Typography","Avatar","Stack","axios","AuthService","makeStyles","useStyles","pageContent","margin","padding","initialFieldValues","id","firstName","lastName","email","gender","password","AccountSettingsAdmin","userDetails","setUserDetails","values","setValues","confirm","user","getCurrentUser","isAdmin","JSON","parse","atob","split","roles","sub","getAdmin","then","response","data","console","log","catch","error","handleChange","event","target","name","value","classes","display","flexWrap","m","width","height","maxWidth","justifyContent","p"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport { Box, Button, Paper, Card, CardContent, Grid, CardHeader, Divider, TextField } from '@mui/material';\nimport DataService from \"../service/DataService\";\nimport AdminServices from \"../service/AdminServices\";\nimport * as React from 'react';\nimport CardActions from '@mui/material/CardActions';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\nimport axios from \"axios\";\nimport AuthService from \"../service/auth.service\";\nimport {makeStyles} from \"@mui/styles\";\n\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\n\nconst initialFieldValues = {\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    password: \"\"\n\n};\n\n\nexport default function AccountSettingsAdmin() {\n    const [userDetails , setUserDetails] = useState(initialFieldValues);\n    const [values, setValues] = useState({\n        password: '',\n        confirm: ''\n    });\n\n\n    useEffect(() =>{\n        const user = AuthService.getCurrentUser();\n/*\n        const isAdmin = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN';\n        const isAttendant = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ATTENDANT';\n        const isMotorist = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_MOTORIST';\n        const email = JSON.parse(atob(user.split('.')[1])).sub;\n\n        //const isAdmin = JSON.parse(atob(user.split('.')[1])).role === 'ROLE_MOTORIST';\n        \n */\n\n        if(user){\n            const isAdmin = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN';\n            const email = JSON.parse(atob(user.split('.')[1])).sub;\n            if(isAdmin){\n                AdminServices.getAdmin(email).then(response => {\n                    setUserDetails(response.data);\n                    console.log(response);\n                }).catch(error => {\n                    console.log(error)\n                })\n            }\n        }\n    }, []);\n\n  /*\n    useEffect(() =>{\n        retrieveUsersDetails();\n    }, []);\n\n\n//await axios.get(`http://localhost:8080/apiv1/admin/get/${emailData}`)\n    const retrieveUsersDetails = async () =>{\n\n        AdminServices.getAdmin(emailData).then(response => {\n            setUserDetails(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error)\n        })\n\n    }\n\n   */\n\n    const handleChange = (event) => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n            <Card sx={{ maxWidth: 370 }}>\n                <CardHeader\n                    subheader=\"Account Information\"\n                    title=\"Details\"\n                />\n                <Divider />\n                <CardContent>\n                    <Stack direction=\"row\" spacing={2}>\n                        <Avatar>A</Avatar>\n                    </Stack>\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        {userDetails.firstName}\n                    </Typography>\n\n\n                    <Typography variant=\"body1\" color=\"text.secondary\">\n                        <Grid item xs={9}>\n                        First Name:  {userDetails.firstName}<br/>\n                        Last Name: {userDetails.lastName}<br/>\n                        Gender: {userDetails.gender}<br/>\n                        Email: {userDetails.email}<br/>\n                        </Grid>\n                    </Typography>\n\n                </CardContent>\n                <CardActions>\n                    <Button size=\"small\">Change Password</Button>\n                </CardActions>\n            </Card>\n                </Paper>\n            </Box>\n\n        <form >\n            <Card>\n                <CardHeader\n                    subheader=\"Update password\"\n                    title=\"Password\"\n                />\n                <Divider />\n                <CardContent>\n                    <TextField\n                        fullWidth\n                        label=\"Password\"\n                        margin=\"normal\"\n                        name=\"password\"\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.password}\n                        variant=\"outlined\"\n                    />\n                    <TextField\n                        fullWidth\n                        label=\"Confirm password\"\n                        margin=\"normal\"\n                        name=\"confirm\"\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.confirm}\n                        variant=\"outlined\"\n                    />\n                </CardContent>\n                <Divider />\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'flex-end',\n                        p: 2\n                    }}\n                >\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                    >\n                        Update\n                    </Button>\n                </Box>\n            </Card>\n        </form>\n        </>\n    );\n};"]},"metadata":{},"sourceType":"module"}