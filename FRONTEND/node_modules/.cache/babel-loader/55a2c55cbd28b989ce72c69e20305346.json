{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/MotoristForm.js\";\nimport { Grid } from '@mui/material';\n/* import * as areaService from \"../service/areaService\" */\n\nimport * as MotoristService from '../service/MotoristService';\nimport React, { useState } from \"react\";\nimport Controls from \"../components/controls/Controls\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genderItems = [{\n  id: \"male\",\n  title: \"Male\"\n}, {\n  id: \"female\",\n  title: \"Female\"\n}, {\n  id: \"others\",\n  title: \"Others\"\n}];\nconst initialFieldValues = {\n  motoristId: 0,\n  motoristFirstName: \"\",\n  motoristLastName: \"\",\n  motoristEmail: \"\",\n  motoristMobile: \"\",\n  motoristGender: \"male\",\n  motoristPassword: \"\"\n  /* departmentId: \"\",\n  hireDate: new Date(),\n  isPermanent: false, */\n\n};\nexport default function MotoristForm() {\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n    if ('motoristFirstName' in fieldValues) temp.motoristFirstName = fieldValues.motoristFirstName ? \"\" : \"This field is required.\";\n    if ('motoristEmail' in fieldValues) temp.motoristEmail = /$^|.+@.+..+/.test(fieldValues.motoristEmail) ? \"\" : \"Invalid Email.\";\n    if ('motoristMobile' in fieldValues) temp.motoristMobile = fieldValues.motoristMobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\";\n    /* if('departmentId' in fieldValues)\n    temp.departmentId = fieldValues.departmentId.length !==0 ? \"\":\"This field is required.\" */\n\n    setErrors({ ...temp\n    });\n    if (fieldValues === values) return Object.values(temp).every(x => x === \"\");\n  };\n\n  const {\n    values,\n    setValues,\n    resetForm,\n    handleInputChange,\n    errors,\n    setErrors\n  } = UseForm(initialFieldValues, true, validate); //const [records, setRecords] = useState(MotoristService.getAll(values));\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    MotoristService.create(values);\n    /* axios.post(\"http://localhost:8080/apiv1/motorist/save\", values)\n    .then(response => {\n      console.log(response)\n    })\n    .catch(error => {\n      console.log(error)\n    }) */\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          variant: \"outlined\",\n          label: \"First Name\",\n          name: \"motoristFirstName\",\n          value: values.motoristFirstName,\n          onChange: handleInputChange,\n          error: errors.motoristFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          variant: \"outlined\",\n          label: \"Last Name\",\n          name: \"motoristLastName\",\n          value: values.motoristLastName,\n          onChange: handleInputChange,\n          error: errors.motoristLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          variant: \"outlined\",\n          label: \"Email\",\n          name: \"motoristEmail\",\n          value: values.motoristEmail,\n          onChange: handleInputChange,\n          error: errors.motoristEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          variant: \"outlined\",\n          label: \"Mobile\",\n          name: \"motoristMobile\",\n          value: values.motoristMobile,\n          onChange: handleInputChange,\n          error: errors.motoristMobile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.RadioGroup, {\n          variant: \"outlined\",\n          name: \"motoristGender\",\n          label: \"Gender\",\n          color: \"primary\",\n          value: values.motoristGender,\n          genderItems: genderItems,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          variant: \"outlined\",\n          label: \"Password\",\n          name: \"motoristPassword\",\n          value: values.motoristPassword,\n          onChange: handleInputChange,\n          error: errors.motoristPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Controls.MuiButton, {\n            type: \"submit\",\n            text: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls.MuiButton, {\n            text: \"reset\",\n            color: \"default\",\n            onClick: resetForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_c = MotoristForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MotoristForm\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/MotoristForm.js"],"names":["Grid","MotoristService","React","useState","Controls","UseForm","Form","genderItems","id","title","initialFieldValues","motoristId","motoristFirstName","motoristLastName","motoristEmail","motoristMobile","motoristGender","motoristPassword","MotoristForm","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","x","setValues","resetForm","handleInputChange","handleSubmit","e","preventDefault","create"],"mappings":";AAAA,SAASA,IAAT,QAAqB,eAArB;AAEA;;AACA,OAAO,KAAKC,eAAZ,MAAiC,4BAAjC;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,uBAA9B;;AAEA,MAAMC,WAAW,GAAG,CAClB;AAAEC,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE;AAArB,CADkB,EAElB;AAAED,EAAAA,EAAE,EAAE,QAAN;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFkB,EAGlB;AAAED,EAAAA,EAAE,EAAE,QAAN;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAHkB,CAApB;AAMA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,UAAU,EAAE,CADa;AAEzBC,EAAAA,iBAAiB,EAAE,EAFM;AAGzBC,EAAAA,gBAAgB,EAAE,EAHO;AAIzBC,EAAAA,aAAa,EAAE,EAJU;AAKzBC,EAAAA,cAAc,EAAE,EALS;AAMzBC,EAAAA,cAAc,EAAE,MANS;AAOzBC,EAAAA,gBAAgB,EAAE;AAClB;AACF;AACA;;AAV2B,CAA3B;AAaA,eAAe,SAASC,YAAT,GAAwB;AAErC,QAAMC,QAAQ,GAAE,CAACC,WAAW,GAAGC,MAAf,KAAyB;AACvC,QAAIC,IAAI,GAAG,EAAC,GAAGC;AAAJ,KAAX;AACA,QAAG,uBAAuBH,WAA1B,EACAE,IAAI,CAACV,iBAAL,GAAyBQ,WAAW,CAACR,iBAAZ,GAA8B,EAA9B,GAAiC,yBAA1D;AACA,QAAG,mBAAmBQ,WAAtB,EACAE,IAAI,CAACR,aAAL,GAAsB,aAAD,CAAgBU,IAAhB,CAAqBJ,WAAW,CAACN,aAAjC,IAAiD,EAAjD,GAAoD,gBAAzE;AACA,QAAG,oBAAoBM,WAAvB,EACAE,IAAI,CAACP,cAAL,GAAsBK,WAAW,CAACL,cAAZ,CAA2BU,MAA3B,GAAoC,CAApC,GAAuC,EAAvC,GAA0C,8BAAhE;AACA;AACJ;;AACIC,IAAAA,SAAS,CAAC,EACR,GAAGJ;AADK,KAAD,CAAT;AAIA,QAAGF,WAAW,KAAKC,MAAnB,EACA,OAAOM,MAAM,CAACN,MAAP,CAAcC,IAAd,EAAoBM,KAApB,CAA0BC,CAAC,IAAIA,CAAC,KAAK,EAArC,CAAP;AACD,GAhBD;;AAiBA,QAAM;AAAER,IAAAA,MAAF;AAAUS,IAAAA,SAAV;AAAqBC,IAAAA,SAArB;AAAgCC,IAAAA,iBAAhC;AAAmDT,IAAAA,MAAnD;AAA2DG,IAAAA;AAA3D,MAAyErB,OAAO,CAACK,kBAAD,EAAqB,IAArB,EAA2BS,QAA3B,CAAtF,CAnBqC,CAsBvC;;AAEE,QAAMc,YAAY,GAAGC,CAAC,IAAG;AACvBA,IAAAA,CAAC,CAACC,cAAF;AAEElC,IAAAA,eAAe,CAACmC,MAAhB,CAAuBf,MAAvB;AAGH;AACH;AACA;AACA;AACA;AACA;AACA;AAIG,GAhBD;;AAmBA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEY,YAAhB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,gCACE,QAAC,QAAD,CAAU,KAAV;AACE,UAAA,OAAO,EAAC,UADV;AAEE,UAAA,KAAK,EAAC,YAFR;AAGE,UAAA,IAAI,EAAC,mBAHP;AAIE,UAAA,KAAK,EAAEZ,MAAM,CAACT,iBAJhB;AAKE,UAAA,QAAQ,EAAEoB,iBALZ;AAME,UAAA,KAAK,EAAET,MAAM,CAACX;AANhB;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,QAAD,CAAU,KAAV;AACE,UAAA,OAAO,EAAC,UADV;AAEE,UAAA,KAAK,EAAC,WAFR;AAGE,UAAA,IAAI,EAAC,kBAHP;AAIE,UAAA,KAAK,EAAES,MAAM,CAACR,gBAJhB;AAKE,UAAA,QAAQ,EAAEmB,iBALZ;AAME,UAAA,KAAK,EAAET,MAAM,CAACV;AANhB;AAAA;AAAA;AAAA;AAAA,gBATF,eAiBE,QAAC,QAAD,CAAU,KAAV;AACE,UAAA,OAAO,EAAC,UADV;AAEE,UAAA,KAAK,EAAC,OAFR;AAGE,UAAA,IAAI,EAAC,eAHP;AAIE,UAAA,KAAK,EAAEQ,MAAM,CAACP,aAJhB;AAKE,UAAA,QAAQ,EAAEkB,iBALZ;AAME,UAAA,KAAK,EAAET,MAAM,CAACT;AANhB;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAyBE,QAAC,QAAD,CAAU,KAAV;AACE,UAAA,OAAO,EAAC,UADV;AAEE,UAAA,KAAK,EAAC,QAFR;AAGE,UAAA,IAAI,EAAC,gBAHP;AAIE,UAAA,KAAK,EAAEO,MAAM,CAACN,cAJhB;AAKE,UAAA,QAAQ,EAAEiB,iBALZ;AAME,UAAA,KAAK,EAAET,MAAM,CAACR;AANhB;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAmCE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,gCACE,QAAC,QAAD,CAAU,UAAV;AACE,UAAA,OAAO,EAAC,UADV;AAEE,UAAA,IAAI,EAAC,gBAFP;AAGE,UAAA,KAAK,EAAC,QAHR;AAIE,UAAA,KAAK,EAAC,SAJR;AAKE,UAAA,KAAK,EAAEM,MAAM,CAACL,cALhB;AAME,UAAA,WAAW,EAAET,WANf;AAOE,UAAA,QAAQ,EAAEyB;AAPZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,QAAD,CAAU,KAAV;AACE,UAAA,OAAO,EAAC,UADV;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,UAAA,IAAI,EAAC,kBAHP;AAIE,UAAA,KAAK,EAAEX,MAAM,CAACJ,gBAJhB;AAKE,UAAA,QAAQ,EAAEe,iBALZ;AAME,UAAA,KAAK,EAAET,MAAM,CAACN;AANhB;AAAA;AAAA;AAAA;AAAA,gBAVF,eAmBE;AAAA,kCACE,QAAC,QAAD,CAAU,SAAV;AACA,YAAA,IAAI,EAAC,QADL;AAEA,YAAA,IAAI,EAAC;AAFL;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,QAAD,CAAU,SAAV;AACA,YAAA,IAAI,EAAC,OADL;AAEA,YAAA,KAAK,EAAC,SAFN;AAGA,YAAA,OAAO,EAAEc;AAHT;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuED;KAlHuBb,Y","sourcesContent":["import { Grid } from '@mui/material';\n\n/* import * as areaService from \"../service/areaService\" */\nimport * as MotoristService from '../service/MotoristService'\nimport React, {useState} from \"react\";\nimport Controls from \"../components/controls/Controls\";\nimport { UseForm, Form } from \"../components/UseForm\";\n\nconst genderItems = [\n  { id: \"male\", title: \"Male\" },\n  { id: \"female\", title: \"Female\" },\n  { id: \"others\", title: \"Others\" },\n];\n\nconst initialFieldValues = {\n  motoristId: 0,\n  motoristFirstName: \"\",\n  motoristLastName: \"\",\n  motoristEmail: \"\",\n  motoristMobile: \"\",\n  motoristGender: \"male\",\n  motoristPassword: \"\",\n  /* departmentId: \"\",\n  hireDate: new Date(),\n  isPermanent: false, */\n};\n\nexport default function MotoristForm() {\n\n  const validate =(fieldValues = values) =>{\n    let temp = {...errors}\n    if('motoristFirstName' in fieldValues)\n    temp.motoristFirstName = fieldValues.motoristFirstName?\"\":\"This field is required.\"\n    if('motoristEmail' in fieldValues)\n    temp.motoristEmail = (/$^|.+@.+..+/).test(fieldValues.motoristEmail) ?\"\":\"Invalid Email.\"\n    if('motoristMobile' in fieldValues)\n    temp.motoristMobile = fieldValues.motoristMobile.length > 9 ?\"\":\"Minimum 10 numbers required.\"\n    /* if('departmentId' in fieldValues)\n    temp.departmentId = fieldValues.departmentId.length !==0 ? \"\":\"This field is required.\" */\n    setErrors({\n      ...temp\n    })\n\n    if(fieldValues === values)\n    return Object.values(temp).every(x => x === \"\")\n  }\n  const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues, true, validate);\n\n\n//const [records, setRecords] = useState(MotoristService.getAll(values));\n\n  const handleSubmit = e =>{\n    e.preventDefault()\n    \n      MotoristService.create(values)\n    \n    \n   /* axios.post(\"http://localhost:8080/apiv1/motorist/save\", values)\n   .then(response => {\n     console.log(response)\n   })\n   .catch(error => {\n     console.log(error)\n   }) */\n\n  \n\n  }\n  \n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"First Name\"\n            name=\"motoristFirstName\"\n            value={values.motoristFirstName}\n            onChange={handleInputChange}\n            error={errors.motoristFirstName}\n          />\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Last Name\"\n            name=\"motoristLastName\"\n            value={values.motoristLastName}\n            onChange={handleInputChange}\n            error={errors.motoristLastName}\n          />\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Email\"\n            name=\"motoristEmail\"\n            value={values.motoristEmail}\n            onChange={handleInputChange}\n            error={errors.motoristEmail}\n          />\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Mobile\"\n            name=\"motoristMobile\"\n            value={values.motoristMobile}\n            onChange={handleInputChange}\n            error={errors.motoristMobile}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <Controls.RadioGroup\n            variant=\"outlined\"\n            name=\"motoristGender\"\n            label=\"Gender\"\n            color=\"primary\"\n            value={values.motoristGender}\n            genderItems={genderItems}\n            onChange={handleInputChange}\n          />\n          <Controls.Input\n            variant=\"outlined\" \n            label=\"Password\"\n            name=\"motoristPassword\"\n            value={values.motoristPassword}\n            onChange={handleInputChange}\n            error={errors.motoristPassword}\n          />\n\n          <div>\n            <Controls.MuiButton\n            type=\"submit\"\n            text=\"Submit\"\n            />\n            <Controls.MuiButton\n            text=\"reset\"\n            color=\"default\"\n            onClick={resetForm}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}