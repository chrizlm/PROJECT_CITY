{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Bookings.js\",\n    _s = $RefreshSig$();\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Button, Card, CardHeader, Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel, Tooltip, Paper, Grid } from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport TextField from \"@mui/material/TextField\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from '@mui/lab/DatePicker';\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport ParkingLotService from \"../service/ParkingLotService\";\nimport ParkingDetailService from \"../service/ParkingDetailService\";\nimport DataService from \"../service/DataService\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\"\n  }\n});\nconst initialFieldValues = {\n  id: 0,\n  numberPlate: \"\",\n  vehicleType: \"\",\n  location: \"\",\n  parkingLotName: \"\",\n  parkingDate: \"\",\n  parkTime: \"\",\n  parkDuration: \"\"\n};\nconst initialSearchDetailsValues = {\n  location: \"\",\n  parkingLotName: \"\",\n  parkingDate: \"\"\n};\nexport default function Bookings(props) {\n  _s();\n\n  const [parkDetail, setParkDetail] = useState(initialFieldValues);\n  const [searchParkDetails, setSearchParkDetails] = useState(initialSearchDetailsValues);\n  const [selected, setSelected] = React.useState(\"\");\n  const [value, setValue] = React.useState(new Date());\n  const [parkLot, setParkLot] = React.useState([]);\n  const [searchLocation, setSearchLocation] = React.useState(\"\");\n  const [locationData, setLocationData] = useState([]);\n  const [parkingLotData, setParkingLotData] = useState([]);\n  const [searchParkingLot, setSearchParkingLot] = useState(\"\");\n  const [freeSpace, setFreeSpace] = useState(0);\n  useEffect(() => {\n    retrieveAllParkingLotsAreaData();\n  }, []);\n\n  const retrieveAllParkingLotsAreaData = () => {\n    DataService.getLocData().then(response => {\n      setLocationData(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const getPkLotList = ({\n    item\n  }) => {\n    if (item === searchParkingLot) {\n      DataService.getParkingData(item).then(response => {\n        setParkingLotData(response.data);\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  useEffect(() => {\n    retrieveAllParkingLots();\n  }, []);\n\n  const retrieveAllParkingLots = () => {\n    ParkingLotService.getAll().then(response => {\n      setParkLot(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParkDetail({ ...parkDetail,\n      [name]: value\n    });\n  };\n\n  const handleOptionOne = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSelected(value);\n    setParkDetail({ ...parkDetail,\n      [name]: value\n    });\n    const searchParkingLot = e.target.value;\n    setSearchParkingLot(searchParkingLot);\n  };\n\n  const handleOptionOneSearch = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSelected(value);\n    setSearchParkDetails({ ...searchParkDetails,\n      [name]: value\n    });\n    const searchParkingLot = e.target.value;\n    setSearchParkingLot(searchParkingLot);\n  };\n\n  const handleOptionTwo = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParkDetail({ ...parkDetail,\n      [name]: value\n    });\n  };\n\n  const handleOptionTwoSearch = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSearchParkDetails({ ...searchParkDetails,\n      [name]: value\n    });\n  };\n\n  const handleDateChange = date => {\n    setParkDetail({\n      parkingDate: date\n    });\n  };\n\n  const saveParkingDetail = () => {\n    const submittedDate = moment(parkDetail.parkingDate).format('YYYY-MM-DD');\n    const submittedTime = moment(parkDetail.parkTime).format('HH:mm');\n    const data = {\n      numberPlate: parkDetail.numberPlate,\n      vehicleType: parkDetail.vehicleType,\n      location: parkDetail.location,\n      parkingLotName: parkDetail.parkingLotName,\n      parkingDate: submittedDate,\n      parkTime: submittedTime,\n      parkDuration: parkDetail.parkDuration\n    };\n    ParkingDetailService.checkBookingSpace(data).then(response => {\n      console.log(response);\n      setFreeSpace(response.data);\n\n      if (response.data >= 0) {\n        ParkingDetailService.create(data).then(response => {\n          console.log(response);\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        alert(\"error submitting data\");\n      }\n    });\n  };\n\n  const onChangeSearchLocation = e => {\n    const searchLocation = e.target.value;\n    setSearchLocation(searchLocation);\n  };\n\n  const findParkingLotByLocation = () => {\n    ParkingLotService.findByLocation(searchLocation).then(response => {\n      setParkLot(response.data);\n      console.log(response);\n      console.log(setParkLot);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  /*\n    const handleAvailableSpaces = (parkingLotName) =>{\n      DataService.getFreeSpace(parkingLotName).then(response =>{\n        console.log(response);\n        setFreeSpace(response.data)\n  \n  \n      }).catch(error =>{\n        console.log(error)\n      })\n    }\n    */\n\n\n  const classes = useStyles(); // const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues, false);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: saveParkingDetail,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Number Plate\",\n                name: \"numberPlate\",\n                value: parkDetail.numberPlate,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-simple-select-label\",\n                  children: \"CarType\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"demo-simple-select-label\",\n                  id: \"demo-simple-select-label\",\n                  name: \"vehicleType\",\n                  value: parkDetail.vehicleType,\n                  label: \"Vehicle Type\",\n                  onChange: handleInputChange,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Saloon\",\n                    children: \"Saloon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Lorry\",\n                    children: \"Lorry\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Trailer\",\n                    children: \"Trailer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: AdapterDateFns,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  label: \"Basic example\",\n                  value: value,\n                  inputFormat: \"yyyy-MM-dd\",\n                  onChange: date => {\n                    setValue(date);\n                    setParkDetail({ ...parkDetail,\n                      parkingDate: date\n                    });\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    name: \"parkingDate\",\n                    value: parkDetail.parkingDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: AdapterDateFns,\n                children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                  placeholder: \"Booking Time\",\n                  inputFormat: \"HH:mm\",\n                  value: value,\n                  onChange: date => {\n                    setValue(date);\n                    setParkDetail({ ...parkDetail,\n                      parkTime: date\n                    });\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    name: \"parkTime\",\n                    value: parkDetail.parkTime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"dependant-dropdown\",\n                  children: \"location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"dependant-dropdown\",\n                  id: \"dependant-dropdown\",\n                  name: \"location\",\n                  value: parkDetail.location,\n                  label: \"Location\",\n                  onChange: handleOptionOne,\n                  children: locationData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    onClick: getPkLotList({\n                      item\n                    }),\n                    children: item\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 15\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"dropdown\",\n                  children: \"Park Lot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"dropdown\",\n                  id: \"dropdown\",\n                  name: \"parkingLotName\",\n                  value: parkDetail.parkingLotName,\n                  label: \"Park Lot\",\n                  onChange: handleOptionTwo,\n                  children: parkingLotData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    children: item\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 19\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Park Duration\",\n                name: \"parkDuration\",\n                value: parkDetail.parkDuration,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            onClick: saveParkingDetail,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: [\"//for searching\", /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            label: \"Basic example\",\n            value: value,\n            inputFormat: \"yyyy-MM-dd\",\n            onChange: date => {\n              setValue(date);\n              setSearchParkDetails({ ...parkDetail,\n                parkingDate: date\n              });\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              name: \"parkingDate\",\n              value: searchParkDetails.parkingDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"dependant-dropdown\",\n            children: \"location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"dependant-dropdown\",\n            id: \"dependant-dropdown\",\n            name: \"location\",\n            value: searchParkDetails.location,\n            label: \"Location\",\n            onChange: handleOptionOneSearch,\n            children: locationData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: item,\n              onClick: getPkLotList({\n                item\n              }),\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"dropdown\",\n            children: \"Park Lot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"dropdown\",\n            id: \"dropdown\",\n            name: \"parkingLotName\",\n            value: searchParkDetails.parkingLotName,\n            label: \"Park Lot\",\n            onChange: handleOptionTwoSearch,\n            children: parkingLotData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: item,\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            onClick: findParkingLotByLocation,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          align: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: retrieveAllParkingLots,\n            children: \"GetAll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, { ...props,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: \"Parking lots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              minWidth: 800\n            },\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              sx: {\n                minWidth: 650\n              },\n              \"aria-label\": \"simple table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"parkingLotId\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"parkingLotName\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"totalParkingSpaces\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"AvailableSpaces\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Book\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: parkLot.map(park => /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: park.parkingLotId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: park.parkingLotName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: park.totalParkingSpaces\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: park.availableSpace\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      children: \"Book\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 552,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 27\n                  }, this)]\n                }, park.parkingLotId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            endIcon: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 18\n            }, this),\n            size: \"small\",\n            variant: \"text\",\n            children: \"View all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n/*\n <PerfectScrollbar>\n      <Box sx={{ minWidth: 800 }}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                parkingLotId\n              </TableCell>\n              <TableCell>\n                parkingLotName\n              </TableCell>\n              <TableCell>\n                totalParkingSpaces\n              </TableCell>\n              <TableCell>\n                AvailableSpaces\n              </TableCell>\n              <TableCell>\n                Book\n              </TableCell>\n\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              parkLot.map((park) =>(\n\n                <TableRow\n                hover\n                key={park.parkingLotId}\n                >\n                  <TableCell>\n                    {park.parkingLotId}\n                  </TableCell>\n                  <TableCell>\n                    {park.parkingLotName}\n                  </TableCell>\n                  <TableCell>\n                    {park.totalParkingSpaces}\n                  </TableCell>\n                  <TableCell>\n                    {park.availableSpace}\n                  </TableCell>\n\n                  <TableCell>\n\n                  </TableCell>\n\n\n\n                  <TableCell>\n                    <Button>Book</Button>\n                  </TableCell>\n                </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Box>\n    </PerfectScrollbar>\n */\n\n_s(Bookings, \"vn6jl+Y6adoMeEm+mVA8UnAy6V0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Bookings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bookings\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Bookings.js"],"names":["PerfectScrollbar","Box","Button","Card","CardHeader","Table","TableBody","TableCell","TableHead","TableRow","TableSortLabel","Tooltip","Paper","Grid","ArrowRightIcon","makeStyles","UseForm","Form","Controls","Avatar","Select","FormControl","React","useState","useEffect","axios","InputLabel","MenuItem","AdapterDateFns","TextField","LocalizationProvider","DatePicker","TimePicker","ParkingLotService","ParkingDetailService","DataService","moment","useStyles","pageContent","margin","padding","initialFieldValues","id","numberPlate","vehicleType","location","parkingLotName","parkingDate","parkTime","parkDuration","initialSearchDetailsValues","Bookings","props","parkDetail","setParkDetail","searchParkDetails","setSearchParkDetails","selected","setSelected","value","setValue","Date","parkLot","setParkLot","searchLocation","setSearchLocation","locationData","setLocationData","parkingLotData","setParkingLotData","searchParkingLot","setSearchParkingLot","freeSpace","setFreeSpace","retrieveAllParkingLotsAreaData","getLocData","then","response","data","console","log","catch","error","getPkLotList","item","getParkingData","retrieveAllParkingLots","getAll","handleInputChange","e","name","target","handleOptionOne","handleOptionOneSearch","handleOptionTwo","handleOptionTwoSearch","handleDateChange","date","saveParkingDetail","submittedDate","format","submittedTime","checkBookingSpace","create","alert","onChangeSearchLocation","findParkingLotByLocation","findByLocation","classes","display","flexWrap","m","width","height","params","map","index","minWidth","park","parkingLotId","totalParkingSpaces","availableSpace","justifyContent","p"],"mappings":"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","sourcesContent":["import PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  Paper,\n  Grid,\n  \n} from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React, { useState, useEffect  } from 'react'\nimport axios from \"axios\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport TextField from \"@mui/material/TextField\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from '@mui/lab/DatePicker';\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport ParkingLotService from \"../service/ParkingLotService\";\nimport ParkingDetailService from \"../service/ParkingDetailService\";\nimport DataService from \"../service/DataService\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\",\n  },\n \n});\n\n\n  const initialFieldValues = {\n    id: 0,\n    numberPlate: \"\",\n    vehicleType: \"\",\n    location: \"\",\n    parkingLotName: \"\",\n    parkingDate: \"\",\n    parkTime: \"\",\n    parkDuration: \"\",\n   \n  };\n\n  const initialSearchDetailsValues = {\n      location: \"\",\n      parkingLotName: \"\",\n      parkingDate: \"\",\n  }\n\n\n\nexport default function Bookings(props) {\n  const [parkDetail, setParkDetail] = useState(initialFieldValues);\n  const [searchParkDetails, setSearchParkDetails] = useState(initialSearchDetailsValues);\n  const [selected, setSelected] = React.useState(\"\");\n  const [value, setValue] = React.useState(new Date());\n  const [parkLot, setParkLot] = React.useState([]);\n  const [searchLocation, setSearchLocation] = React.useState(\"\");\n  const [locationData, setLocationData] = useState([]);\n  const [parkingLotData, setParkingLotData] = useState([]);\n  const [searchParkingLot, setSearchParkingLot] = useState(\"\");\n  const [freeSpace, setFreeSpace] = useState(0);\n\n\n  useEffect(() =>{\n  retrieveAllParkingLotsAreaData();\n}, []);\n\n  const retrieveAllParkingLotsAreaData = () =>{\n\n    DataService.getLocData().then(response => {\n      setLocationData(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error)\n    })\n\n  }\n\n\n\n\n  const getPkLotList = ({item}) => {\n\n      if(item === searchParkingLot) {\n        DataService.getParkingData(item).then(response => {\n          setParkingLotData(response.data);\n          console.log(response);\n        }).catch(error => {\n          console.log(error)\n        })\n\n      }\n\n  };\n\n  \n\n\n\n\n  useEffect(() =>{\n    retrieveAllParkingLots();\n  }, []);\n\n  const retrieveAllParkingLots = () =>{\n\n    ParkingLotService.getAll().then(response => {\n      setParkLot(response.data);\n      console.log(response);\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  const handleInputChange = e =>{\n\n    const {name, value} = e.target\n    setParkDetail({\n      ...parkDetail,\n      [name]: value,\n    })\n\n\n  }\n\n   const handleOptionOne = e =>{\n     const {name, value} = e.target\n     setSelected(value)\n     setParkDetail({\n       ...parkDetail,\n       [name]: value,\n     })\n\n\n     const searchParkingLot = e.target.value;\n     setSearchParkingLot(searchParkingLot);\n\n   }\n\n    const handleOptionOneSearch = e =>{\n        const {name, value} = e.target\n        setSelected(value)\n        setSearchParkDetails({\n            ...searchParkDetails,\n            [name]: value,\n        })\n\n\n        const searchParkingLot = e.target.value;\n        setSearchParkingLot(searchParkingLot);\n\n    }\n  const handleOptionTwo = e =>{\n    const {name, value} = e.target\n    setParkDetail({\n      ...parkDetail,\n      [name]: value,\n    })\n  }\n\n    const handleOptionTwoSearch = e =>{\n        const {name, value} = e.target\n        setSearchParkDetails({\n            ...searchParkDetails,\n            [name]: value,\n        })\n    }\n\nconst handleDateChange = (date) =>{\n    setParkDetail({\n      parkingDate: date,\n    })\n  }\n\n\n\n\n\n  const saveParkingDetail = () =>{\n    const submittedDate = moment(parkDetail.parkingDate).format('YYYY-MM-DD')\n    const submittedTime = moment(parkDetail.parkTime).format('HH:mm')\n    const data ={\n      numberPlate: parkDetail.numberPlate,\n      vehicleType: parkDetail.vehicleType,\n      location: parkDetail.location,\n      parkingLotName: parkDetail.parkingLotName,\n      parkingDate: submittedDate,\n      parkTime: submittedTime,\n      parkDuration: parkDetail.parkDuration,\n\n    };\n    ParkingDetailService.checkBookingSpace(data).then(response =>{\n      console.log(response)\n      setFreeSpace(response.data);\n\n      if(response.data >= 0){\n        ParkingDetailService.create(data).then(response => {\n          console.log(response)\n        })\n            .catch(error => {\n              console.log(error)\n            })\n      }else{\n        alert(\"error submitting data\");\n      }\n    })\n\n\n  }\n\n\n\n\n\n  const onChangeSearchLocation = e =>{\n    const searchLocation = e.target.value;\n    setSearchLocation(searchLocation);\n  }\n\n  const findParkingLotByLocation = () =>{\n\n    ParkingLotService.findByLocation(searchLocation).then(response => {\n      setParkLot(response.data);\n      console.log(response);\n      console.log(setParkLot);\n    })\n        .catch(error => {\n          console.log(error)\n        })\n  }\n\n\n\n/*\n  const handleAvailableSpaces = (parkingLotName) =>{\n    DataService.getFreeSpace(parkingLotName).then(response =>{\n      console.log(response);\n      setFreeSpace(response.data)\n\n\n    }).catch(error =>{\n      console.log(error)\n    })\n  }\n  */\n\n\n\n\n\n\n\n\n  const classes = useStyles();\n // const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues, false);\n\n    return (\n      <>\n      <Box\n      sx={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%',\n        },\n      }}\n    >\n      <Paper elevation={3} className={classes.pageContent}>\n        <Avatar /> {/*name*/}\n      <Form onSubmit={saveParkingDetail}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Number Plate\"\n            name=\"numberPlate\"\n            value={parkDetail.numberPlate}\n            onChange={handleInputChange}\n          />\n\n\n\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">CarType</InputLabel>\n            <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select-label\"\n                name=\"vehicleType\"\n                value={parkDetail.vehicleType}\n                label=\"Vehicle Type\"\n                onChange={handleInputChange}\n            >\n              <MenuItem value='Saloon'>Saloon</MenuItem>\n              <MenuItem value='Lorry'>Lorry</MenuItem>\n              <MenuItem value='Trailer'>Trailer</MenuItem>\n            </Select>\n          </FormControl>\n\n\n\n\n\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DatePicker\n                label=\"Basic example\"\n                value={value}\n                inputFormat={\"yyyy-MM-dd\"}\n\n                onChange={(date) => {\n                  setValue(date);\n\n                  setParkDetail({\n                    ...parkDetail,\n                    parkingDate : date,\n                  })\n                }}\n                renderInput={(params) => <TextField {...params}\n                name=\"parkingDate\" value={parkDetail.parkingDate}\n                />}\n            />\n          </LocalizationProvider>\n\n\n\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <TimePicker\n                placeholder=\"Booking Time\"\n                inputFormat={\"HH:mm\"}\n                value={value}\n                onChange={(date) => {\n                  setValue(date);\n\n                  setParkDetail({\n                    ...parkDetail,\n                    parkTime : date,\n                  })\n                }}\n                renderInput={(params) => <TextField {...params}\n                    name=\"parkTime\" value={parkDetail.parkTime}/>}\n            />\n          </LocalizationProvider>\n\n\n\n\n\n\n        </Grid>\n        <Grid item xs={6}>\n\n\n\n\n          <FormControl fullWidth>\n            <InputLabel id=\"dependant-dropdown\">location</InputLabel>\n            <Select\n                labelId=\"dependant-dropdown\"\n                id=\"dependant-dropdown\"\n                name=\"location\"\n                value={parkDetail.location}\n                label=\"Location\"\n                onChange={handleOptionOne}\n            >{locationData.map((item ,index) =>\n              <MenuItem value={item} key={index}\n                        onClick={getPkLotList({item})}>{item}</MenuItem>)}\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"dropdown\">Park Lot</InputLabel>\n            <Select\n                labelId=\"dropdown\"\n                id=\"dropdown\"\n                name=\"parkingLotName\"\n                value={parkDetail.parkingLotName}\n                label=\"Park Lot\"\n                onChange={handleOptionTwo}>{\n                  parkingLotData.map((item, index) =>\n                  <MenuItem value={item} key={index} >{item}</MenuItem> )\n            }</Select>\n          </FormControl>\n\n\n          <Controls.Input\n              variant=\"outlined\"\n              label=\"Park Duration\"\n              name=\"parkDuration\"\n              value={parkDetail.parkDuration}\n              onChange={handleInputChange}\n          />\n          </Grid>\n        </Grid>\n        <Button variant=\"contained\"\n        fullWidth\n                onClick={saveParkingDetail}\n        >Submit</Button>\n        </Form>\n      </Paper>\n      </Box>\n        <Box\n            sx={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              '& > :not(style)': {\n                m: 1,\n                width: '100%',\n                height: '100%',\n              },\n            }}\n        >\n\n        <Form>\n\n//for searching\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DatePicker\n                    label=\"Basic example\"\n                    value={value}\n                    inputFormat={\"yyyy-MM-dd\"}\n\n                    onChange={(date) => {\n                        setValue(date);\n\n                        setSearchParkDetails({\n                            ...parkDetail,\n                            parkingDate : date,\n                        })\n                    }}\n                    renderInput={(params) => <TextField {...params}\n                                                        name=\"parkingDate\" value={searchParkDetails.parkingDate}\n                    />}\n                />\n            </LocalizationProvider>\n\n            <FormControl fullWidth>\n                <InputLabel id=\"dependant-dropdown\">location</InputLabel>\n                <Select\n                    labelId=\"dependant-dropdown\"\n                    id=\"dependant-dropdown\"\n                    name=\"location\"\n                    value={searchParkDetails.location}\n                    label=\"Location\"\n                    onChange={handleOptionOneSearch}\n                >{locationData.map((item ,index) =>\n                    <MenuItem value={item} key={index}\n                              onClick={getPkLotList({item})}>{item}</MenuItem>)}\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"dropdown\">Park Lot</InputLabel>\n                <Select\n                    labelId=\"dropdown\"\n                    id=\"dropdown\"\n                    name=\"parkingLotName\"\n                    value={searchParkDetails.parkingLotName}\n                    label=\"Park Lot\"\n                    onChange={handleOptionTwoSearch}>{\n                    parkingLotData.map((item, index) =>\n                        <MenuItem value={item} key={index} >{item}</MenuItem> )\n                }</Select>\n            </FormControl>\n\n          <FormControl fullWidth>\n\n            <Button variant=\"contained\"\n                    fullWidth\n                    onClick={findParkingLotByLocation}\n            >Search</Button>\n          </FormControl>\n\n\n\n          <div align=\"right\">\n            <Button variant=\"contained\"\n                    onClick={retrieveAllParkingLots}>GetAll</Button>\n          </div>\n\n        </Form>\n\n        <Card {...props}>\n    <CardHeader title=\"Parking lots\" />\n\n          <PerfectScrollbar>\n            <Box sx={{ minWidth: 800 }}>\n              <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      parkingLotId\n                    </TableCell>\n                    <TableCell>\n                      parkingLotName\n                    </TableCell>\n                    <TableCell>\n                      totalParkingSpaces\n                    </TableCell>\n                    <TableCell>\n                      AvailableSpaces\n                    </TableCell>\n                    <TableCell>\n                      Book\n                    </TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    parkLot.map((park) =>(\n\n                        <TableRow\n                            hover\n                            key={park.parkingLotId}\n                        >\n                          <TableCell>\n                            {park.parkingLotId}\n                          </TableCell>\n                          <TableCell>\n                            {park.parkingLotName}\n                          </TableCell>\n                          <TableCell>\n                            {park.totalParkingSpaces}\n                          </TableCell>\n                          <TableCell>\n                            {park.availableSpace}\n                          </TableCell>\n\n                          <TableCell>\n\n                          </TableCell>\n\n\n\n                          <TableCell>\n                            <Button>Book</Button>\n                          </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </PerfectScrollbar>\n\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end',\n        p: 2\n      }}\n    >\n      <Button\n        color=\"primary\"\n        endIcon={<ArrowRightIcon fontSize=\"small\" />}\n        size=\"small\"\n        variant=\"text\"\n      >\n        View all\n      </Button>\n    </Box>\n\n  </Card>\n        </Box>\n  </>\n    )\n}\n\n\n\n/*\n <PerfectScrollbar>\n      <Box sx={{ minWidth: 800 }}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                parkingLotId\n              </TableCell>\n              <TableCell>\n                parkingLotName\n              </TableCell>\n              <TableCell>\n                totalParkingSpaces\n              </TableCell>\n              <TableCell>\n                AvailableSpaces\n              </TableCell>\n              <TableCell>\n                Book\n              </TableCell>\n\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              parkLot.map((park) =>(\n\n                <TableRow\n                hover\n                key={park.parkingLotId}\n                >\n                  <TableCell>\n                    {park.parkingLotId}\n                  </TableCell>\n                  <TableCell>\n                    {park.parkingLotName}\n                  </TableCell>\n                  <TableCell>\n                    {park.totalParkingSpaces}\n                  </TableCell>\n                  <TableCell>\n                    {park.availableSpace}\n                  </TableCell>\n\n                  <TableCell>\n\n                  </TableCell>\n\n\n\n                  <TableCell>\n                    <Button>Book</Button>\n                  </TableCell>\n                </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Box>\n    </PerfectScrollbar>\n */"]},"metadata":{},"sourceType":"module"}