{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AccountSettingsAttendant.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Box, Button, Paper, Card, CardContent, Grid, CardHeader, Divider, TextField } from '@mui/material';\nimport DataService from \"../service/DataService\";\nimport AuthService from \"../service/auth.service\";\nimport AdminServices from \"../service/AdminServices\";\nimport Stack from \"@mui/material/Stack\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Typography from \"@mui/material/Typography\";\nimport CardActions from \"@mui/material/CardActions\";\nimport * as React from \"react\";\nimport AttendantService from \"../service/AttendantService\";\nimport { makeStyles } from \"@mui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\"\n  }\n});\nconst initialFieldValues = {\n  id: 0,\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  gender: \"\",\n  password: \"\",\n  areaAssigned: \"\"\n};\nexport default function AccountSettingsAttendant() {\n  _s();\n\n  const [userDetails, setUserDetails] = useState(initialFieldValues);\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n    /*\n            const isAdmin = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN';\n            const isAttendant = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ATTENDANT';\n            const isMotorist = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_MOTORIST';\n            const email = JSON.parse(atob(user.split('.')[1])).sub;\n             //const isAdmin = JSON.parse(atob(user.split('.')[1])).role === 'ROLE_MOTORIST';\n      */\n\n    if (user) {\n      const isAttendant = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ATTENDANT';\n      const attendantEmail = JSON.parse(atob(user.split('.')[1])).sub;\n\n      if (isAttendant) {\n        AttendantService.getAttendantInfo(attendantEmail).then(response => {\n          setUserDetails(response.data);\n          console.log(response);\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    }\n  }, []);\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 345\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          subheader: \"Account Information\",\n          title: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: \"T\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), userDetails.firstName, /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [\"First Name: \", userDetails.firstName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 64\n            }, this), \"Last Name: \", userDetails.lastName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 62\n            }, this), \"Gender: \", userDetails.gender, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 57\n            }, this), \"Email: \", userDetails.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 55\n            }, this), \"AreaAssigned: \", userDetails.areaAssigned, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 69\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(AccountSettingsAttendant, \"WtewhIT8sDnS4AWKMOhXruZoXJI=\");\n\n_c = AccountSettingsAttendant;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSettingsAttendant\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/AccountSettingsAttendant.js"],"names":["useEffect","useState","Box","Button","Paper","Card","CardContent","Grid","CardHeader","Divider","TextField","DataService","AuthService","AdminServices","Stack","Avatar","Typography","CardActions","React","AttendantService","makeStyles","useStyles","pageContent","margin","padding","initialFieldValues","id","firstName","lastName","email","gender","password","areaAssigned","AccountSettingsAttendant","userDetails","setUserDetails","values","setValues","confirm","user","getCurrentUser","isAttendant","JSON","parse","atob","split","roles","attendantEmail","sub","getAttendantInfo","then","response","data","console","log","catch","error","handleChange","event","target","name","value","marginTop","display","flexDirection","alignItems","maxWidth"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport { Box, Button, Paper, Card, CardContent, Grid, CardHeader, Divider, TextField } from '@mui/material';\nimport DataService from \"../service/DataService\";\nimport AuthService from \"../service/auth.service\";\nimport AdminServices from \"../service/AdminServices\";\nimport Stack from \"@mui/material/Stack\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Typography from \"@mui/material/Typography\";\nimport CardActions from \"@mui/material/CardActions\";\nimport * as React from \"react\";\nimport AttendantService from \"../service/AttendantService\";\nimport {makeStyles} from \"@mui/styles\";\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\nconst initialFieldValues = {\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    password: \"\",\n    areaAssigned: \"\",\n\n};\n\nexport default function AccountSettingsAttendant(){\n    const [userDetails , setUserDetails] = useState(initialFieldValues);\n    const [values, setValues] = useState({\n        password: '',\n        confirm: ''\n    });\n    useEffect(() =>{\n        const user = AuthService.getCurrentUser();\n        /*\n                const isAdmin = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ADMIN';\n                const isAttendant = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ATTENDANT';\n                const isMotorist = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_MOTORIST';\n                const email = JSON.parse(atob(user.split('.')[1])).sub;\n\n                //const isAdmin = JSON.parse(atob(user.split('.')[1])).role === 'ROLE_MOTORIST';\n\n         */\n\n        if(user){\n            const isAttendant = JSON.parse(atob(user.split('.')[1])).roles[0] === 'ROLE_ATTENDANT';\n            const attendantEmail = JSON.parse(atob(user.split('.')[1])).sub;\n            if(isAttendant){\n                AttendantService.getAttendantInfo(attendantEmail).then(response => {\n                    setUserDetails(response.data);\n                    console.log(response);\n                }).catch(error => {\n                    console.log(error)\n                })\n            }\n        }\n    }, []);\n\n\n\n    const handleChange = (event) => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    return (\n        <>\n            <Box\n                sx={{\n                    marginTop: 8,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}\n            >\n                <Card sx={{ maxWidth: 345 }}>\n                    <CardHeader\n                        subheader=\"Account Information\"\n                        title=\"Details\"\n                    />\n                    <Divider />\n                    <CardContent>\n                        <Stack direction=\"row\" spacing={2}>\n                            <Avatar>T</Avatar>\n                        </Stack>\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n\n                        </Typography>\n                        {userDetails.firstName}\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                            First Name: {userDetails.firstName}<br/>\n                            Last Name: {userDetails.lastName}<br/>\n                            Gender: {userDetails.gender}<br/>\n                            Email: {userDetails.email}<br/>\n                            AreaAssigned: {userDetails.areaAssigned}<br/>\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button size=\"small\" >Change Password</Button>\n                    </CardActions>\n                </Card>\n            </Box>\n            </>\n    );\n};"]},"metadata":{},"sourceType":"module"}