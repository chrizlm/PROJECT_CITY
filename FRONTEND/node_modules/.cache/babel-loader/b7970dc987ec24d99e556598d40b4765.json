{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/ConfirmDialog.js\",\n    _s = $RefreshSig$();\n\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@mui/material';\nimport { IconButton } from '@mui/material';\nimport React from 'react';\nimport Controls from './controls/Controls';\nimport NotListedLocationIcon from '@mui/icons-material/NotListedLocation';\nimport { makeStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  dialog: {\n    padding: '16px',\n    position: 'absolute',\n    top: '40px'\n  },\n  dialogTitle: {\n    textAlign: 'center'\n  },\n  dialogContent: {\n    textAlign: 'center'\n  },\n  dialogAction: {\n    justifyContent: 'center'\n  },\n  titleIcon: {\n    backgroundColor: 'crimson',\n    color: 'blue',\n    '&:hover': {\n      backgroundColor: 'cyan',\n      cursor: 'default'\n    },\n    '& .MuiSvgIcon-root': {\n      fontSize: '8rem'\n    }\n  }\n});\nexport default function ConfirmDialog(props) {\n  _s();\n\n  const {\n    color,\n    confirmDialog,\n    setConfirmDialog\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: confirmDialog.isOpen,\n    classes: {\n      paper: classes.dialog\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      className: classes.dialogTitle,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        disableFocusRipple: true,\n        className: classes.titleIcon,\n        children: /*#__PURE__*/_jsxDEV(NotListedLocationIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: classes.dialogContent,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: confirmDialog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        children: confirmDialog.subTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      className: classes.dialogAction,\n      children: [/*#__PURE__*/_jsxDEV(Controls.MuiButton, {\n        text: \"No\",\n        color: \"default\",\n        onClick: () => setConfirmDialog({ ...confirmDialog,\n          isOpen: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls.MuiButton, {\n        text: \"Yes\",\n        color: \"secondary\",\n        onClick: confirmDialog.onConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ConfirmDialog, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ConfirmDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmDialog\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/components/ConfirmDialog.js"],"names":["Dialog","DialogActions","DialogContent","DialogTitle","Typography","IconButton","React","Controls","NotListedLocationIcon","makeStyles","useStyles","dialog","padding","position","top","dialogTitle","textAlign","dialogContent","dialogAction","justifyContent","titleIcon","backgroundColor","color","cursor","fontSize","ConfirmDialog","props","confirmDialog","setConfirmDialog","classes","isOpen","paper","title","subTitle","onConfirm"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,aAAjB,EAAgCC,aAAhC,EAA+CC,WAA/C,EAA4DC,UAA5D,QAA8E,eAA9E;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AACzBE,EAAAA,MAAM,EAAC;AACHC,IAAAA,OAAO,EAAE,MADN;AAEHC,IAAAA,QAAQ,EAAE,UAFP;AAGHC,IAAAA,GAAG,EAAE;AAHF,GADkB;AAMzBC,EAAAA,WAAW,EAAC;AACRC,IAAAA,SAAS,EAAE;AADH,GANa;AASzBC,EAAAA,aAAa,EAAC;AACVD,IAAAA,SAAS,EAAE;AADD,GATW;AAYzBE,EAAAA,YAAY,EAAC;AACTC,IAAAA,cAAc,EAAE;AADP,GAZY;AAezBC,EAAAA,SAAS,EAAC;AACNC,IAAAA,eAAe,EAAG,SADZ;AAENC,IAAAA,KAAK,EAAE,MAFD;AAGN,eAAU;AACND,MAAAA,eAAe,EAAE,MADX;AAENE,MAAAA,MAAM,EAAE;AAFF,KAHJ;AAON,0BAAqB;AACjBC,MAAAA,QAAQ,EAAE;AADO;AAPf;AAfe,CAAD,CAA5B;AA4BA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAAA;;AACxC,QAAM;AAAEJ,IAAAA,KAAF;AAASK,IAAAA,aAAT;AAAwBC,IAAAA;AAAxB,MAA6CF,KAAnD;AACA,QAAMG,OAAO,GAAGnB,SAAS,EAAzB;AAEA,sBACI,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAEiB,aAAa,CAACG,MAA5B;AAAoC,IAAA,OAAO,EAAE;AAACC,MAAAA,KAAK,EAAEF,OAAO,CAAClB;AAAhB,KAA7C;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEkB,OAAO,CAACd,WAAhC;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,kBAAkB,MAA9B;AAA+B,QAAA,SAAS,EAAEc,OAAO,CAACT,SAAlD;AAAA,+BACI,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,aAAD;AAAe,MAAA,SAAS,EAAES,OAAO,CAACZ,aAAlC;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA,kBACKU,aAAa,CAACK;AADnB;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAA,kBACKL,aAAa,CAACM;AADnB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAcI,QAAC,aAAD;AAAe,MAAA,SAAS,EAAEJ,OAAO,CAACX,YAAlC;AAAA,8BACI,QAAC,QAAD,CAAU,SAAV;AACA,QAAA,IAAI,EAAC,IADL;AAEA,QAAA,KAAK,EAAC,SAFN;AAGA,QAAA,OAAO,EAAE,MAAMU,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBG,UAAAA,MAAM,EAAE;AAA5B,SAAD;AAH/B;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,QAAD,CAAU,SAAV;AACA,QAAA,IAAI,EAAC,KADL;AAEA,QAAA,KAAK,EAAC,WAFN;AAGA,QAAA,OAAO,EAAEH,aAAa,CAACO;AAHvB;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GA/BuBT,a;UAEJf,S;;;KAFIe,a","sourcesContent":["import { Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@mui/material';\nimport { IconButton } from '@mui/material';\nimport React from 'react'\nimport Controls from './controls/Controls';\nimport NotListedLocationIcon from '@mui/icons-material/NotListedLocation'\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n    dialog:{\n        padding: '16px',\n        position: 'absolute',\n        top: '40px'\n    },\n    dialogTitle:{\n        textAlign: 'center'\n    },\n    dialogContent:{\n        textAlign: 'center'\n    },\n    dialogAction:{\n        justifyContent: 'center'\n    },\n    titleIcon:{\n        backgroundColor:  'crimson',\n        color: 'blue',\n        '&:hover':{\n            backgroundColor: 'cyan',\n            cursor: 'default'\n        },\n        '& .MuiSvgIcon-root':{\n            fontSize: '8rem',\n        }\n    }\n})\n\nexport default function ConfirmDialog(props){\n    const { color, confirmDialog, setConfirmDialog } = props;\n    const classes = useStyles();\n\n    return(\n        <Dialog open={confirmDialog.isOpen} classes={{paper: classes.dialog}}>\n            <DialogTitle className={classes.dialogTitle}>\n                <IconButton disableFocusRipple className={classes.titleIcon}>\n                    <NotListedLocationIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent className={classes.dialogContent}>\n                <Typography variant=\"h6\">\n                    {confirmDialog.title}\n                </Typography>\n                <Typography variant=\"subtitle2\">\n                    {confirmDialog.subTitle}\n                </Typography>\n            </DialogContent>\n            <DialogActions className={classes.dialogAction}>\n                <Controls.MuiButton\n                text=\"No\"\n                color=\"default\"\n                onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false})} />\n                <Controls.MuiButton\n                text=\"Yes\"\n                color=\"secondary\"\n                onClick={confirmDialog.onConfirm} />\n            </DialogActions>\n        </Dialog>\n    )\n}"]},"metadata":{},"sourceType":"module"}