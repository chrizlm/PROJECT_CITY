{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/Chat.js\";\nimport * as SockJS from 'sockjs-client';\nimport * as Stomp from 'stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar usernamePage = document.querySelector('#username-page');\nvar chatPage = document.querySelector('#chat-page');\nvar usernameForm = document.querySelector('#usernameForm');\nvar messageForm = document.querySelector('#messageForm');\nvar messageInput = document.querySelector('#message');\nvar messageArea = document.querySelector('#messageArea');\nvar connectingElement = document.querySelector('.connecting');\nvar stompClient = null;\nvar username = null;\nvar colors = ['#2196F3', '#32c787', '#00BCD4', '#ff5652', '#ffc107', '#ff85af', '#FF9800', '#39bbb0'];\n\nfunction connect(event) {\n  username = document.querySelector('#name').value.trim();\n\n  if (username) {\n    usernamePage.classList.add('hidden');\n    chatPage.classList.remove('hidden');\n    var socket = new SockJS('http://localhost:8080/ws');\n    stompClient = Stomp.over(socket);\n    stompClient.connect({}, onConnected, onError);\n  }\n\n  event.preventDefault();\n}\n\nfunction onConnected() {\n  // Subscribe to the Public Topic\n  stompClient.subscribe('/topic/public', onMessageReceived); // Tell your username to the server\n\n  stompClient.send(\"/app/chat.addUser\", {}, JSON.stringify({\n    sender: username,\n    type: 'JOIN'\n  }));\n  connectingElement.classList.add('hidden');\n}\n\nfunction onError(error) {\n  connectingElement.textContent = 'Could not connect to WebSocket server. Please refresh this page to try again!';\n  connectingElement.style.color = 'red';\n}\n\nfunction sendMessage(event) {\n  var messageContent = messageInput.value.trim();\n\n  if (messageContent && stompClient) {\n    var chatMessage = {\n      sender: username,\n      content: messageInput.value,\n      type: 'CHAT'\n    };\n    stompClient.send(\"/app/chat.sendMessage\", {}, JSON.stringify(chatMessage));\n    messageInput.value = '';\n  }\n\n  event.preventDefault();\n}\n\nfunction onMessageReceived(payload) {\n  var message = JSON.parse(payload.body);\n  var messageElement = document.createElement('li');\n\n  if (message.type === 'JOIN') {\n    messageElement.classList.add('event-message');\n    message.content = message.sender + ' joined!';\n  } else if (message.type === 'LEAVE') {\n    messageElement.classList.add('event-message');\n    message.content = message.sender + ' left!';\n  } else {\n    messageElement.classList.add('chat-message');\n    var avatarElement = document.createElement('i');\n    var avatarText = document.createTextNode(message.sender[0]);\n    avatarElement.appendChild(avatarText);\n    avatarElement.style['background-color'] = getAvatarColor(message.sender);\n    messageElement.appendChild(avatarElement);\n    var usernameElement = document.createElement('span');\n    var usernameText = document.createTextNode(message.sender);\n    usernameElement.appendChild(usernameText);\n    messageElement.appendChild(usernameElement);\n  }\n\n  var textElement = document.createElement('p');\n  var messageText = document.createTextNode(message.content);\n  textElement.appendChild(messageText);\n  messageElement.appendChild(textElement);\n  messageArea.appendChild(messageElement);\n  messageArea.scrollTop = messageArea.scrollHeight;\n}\n\nfunction getAvatarColor(messageSender) {\n  var hash = 0;\n\n  for (var i = 0; i < messageSender.length; i++) {\n    hash = 31 * hash + messageSender.charCodeAt(i);\n  }\n\n  var index = Math.abs(hash % colors.length);\n  return colors[index];\n}\n\nexport default function Chat() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"Chat.html\",\n        children: \"To chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Chat;\n\nif (username) {\n  usernameForm.addEventListener('submit', connect, true);\n}\n\nif (messageForm) {\n  messageForm.addEventListener('submit', sendMessage, true);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/Chat.js"],"names":["SockJS","Stomp","usernamePage","document","querySelector","chatPage","usernameForm","messageForm","messageInput","messageArea","connectingElement","stompClient","username","colors","connect","event","value","trim","classList","add","remove","socket","over","onConnected","onError","preventDefault","subscribe","onMessageReceived","send","JSON","stringify","sender","type","error","textContent","style","color","sendMessage","messageContent","chatMessage","content","payload","message","parse","body","messageElement","createElement","avatarElement","avatarText","createTextNode","appendChild","getAvatarColor","usernameElement","usernameText","textElement","messageText","scrollTop","scrollHeight","messageSender","hash","i","length","charCodeAt","index","Math","abs","Chat","addEventListener"],"mappings":"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","sourcesContent":["\n\n'use strict';\n\nimport * as SockJS from 'sockjs-client';\nimport * as Stomp from 'stompjs';\n\nvar usernamePage = document.querySelector('#username-page');\nvar chatPage = document.querySelector('#chat-page');\nvar usernameForm = document.querySelector('#usernameForm');\nvar messageForm = document.querySelector('#messageForm');\nvar messageInput = document.querySelector('#message');\nvar messageArea = document.querySelector('#messageArea');\nvar connectingElement = document.querySelector('.connecting');\n\nvar stompClient = null;\nvar username = null;\n\nvar colors = [\n    '#2196F3', '#32c787', '#00BCD4', '#ff5652',\n    '#ffc107', '#ff85af', '#FF9800', '#39bbb0'\n];\n\nfunction connect(event) {\n    username = document.querySelector('#name').value.trim();\n\n    if(username) {\n        usernamePage.classList.add('hidden');\n        chatPage.classList.remove('hidden');\n\n        var socket = new SockJS('http://localhost:8080/ws');\n        stompClient = Stomp.over(socket);\n\n        stompClient.connect({}, onConnected, onError);\n    }\n    event.preventDefault();\n}\n\n\nfunction onConnected() {\n    // Subscribe to the Public Topic\n    stompClient.subscribe('/topic/public', onMessageReceived);\n\n    // Tell your username to the server\n    stompClient.send(\"/app/chat.addUser\",\n        {},\n        JSON.stringify({sender: username, type: 'JOIN'})\n    )\n\n    connectingElement.classList.add('hidden');\n}\n\n\nfunction onError(error) {\n    connectingElement.textContent = 'Could not connect to WebSocket server. Please refresh this page to try again!';\n    connectingElement.style.color = 'red';\n}\n\n\nfunction sendMessage(event) {\n    var messageContent = messageInput.value.trim();\n    if(messageContent && stompClient) {\n        var chatMessage = {\n            sender: username,\n            content: messageInput.value,\n            type: 'CHAT'\n        };\n        stompClient.send(\"/app/chat.sendMessage\", {}, JSON.stringify(chatMessage));\n        messageInput.value = '';\n    }\n    event.preventDefault();\n}\n\n\nfunction onMessageReceived(payload) {\n    var message = JSON.parse(payload.body);\n\n    var messageElement = document.createElement('li');\n\n    if(message.type === 'JOIN') {\n        messageElement.classList.add('event-message');\n        message.content = message.sender + ' joined!';\n    } else if (message.type === 'LEAVE') {\n        messageElement.classList.add('event-message');\n        message.content = message.sender + ' left!';\n    } else {\n        messageElement.classList.add('chat-message');\n\n        var avatarElement = document.createElement('i');\n        var avatarText = document.createTextNode(message.sender[0]);\n        avatarElement.appendChild(avatarText);\n        avatarElement.style['background-color'] = getAvatarColor(message.sender);\n\n        messageElement.appendChild(avatarElement);\n\n        var usernameElement = document.createElement('span');\n        var usernameText = document.createTextNode(message.sender);\n        usernameElement.appendChild(usernameText);\n        messageElement.appendChild(usernameElement);\n    }\n\n    var textElement = document.createElement('p');\n    var messageText = document.createTextNode(message.content);\n    textElement.appendChild(messageText);\n\n    messageElement.appendChild(textElement);\n\n    messageArea.appendChild(messageElement);\n    messageArea.scrollTop = messageArea.scrollHeight;\n}\n\n\nfunction getAvatarColor(messageSender) {\n    var hash = 0;\n    for (var i = 0; i < messageSender.length; i++) {\n        hash = 31 * hash + messageSender.charCodeAt(i);\n    }\n    var index = Math.abs(hash % colors.length);\n    return colors[index];\n}\n\nexport default function Chat(){\n    return(\n        <>\n            <div>\n                <a href='Chat.html'>To chat</a>\n            </div>\n        </>\n    )\n}\n\nif(username) {\n    usernameForm.addEventListener('submit', connect, true)\n}\nif(messageForm) {\n    messageForm.addEventListener('submit', sendMessage, true)\n}\n\n"]},"metadata":{},"sourceType":"module"}