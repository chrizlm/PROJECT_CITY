{"ast":null,"code":"import http from \"./http-common\";\n\nconst getAll = () => {\n  return http.get(\"/all\");\n};\n\nconst get = parkinglocation => {\n  return http.get(`/get/${parkinglocation}`);\n};\n\nconst create = data => {\n  return http.post(\"/save\", data);\n};\n\nconst updateAlt = (id, data) => {\n  return http.put(`/update/${id}`, data);\n};\n\nconst update = data => {\n  return http.put(`/update`, data);\n};\n\nconst remove = id => {\n  return http.delete(`/${id}`);\n};\n\nconst removeAll = () => {\n  return http.delete(`/all`);\n};\n\nconst findByLocation = location => {\n  return http.get(`/get?parkinglocation=${location}`);\n};\n\nexport default {\n  getAll,\n  get,\n  create,\n  update,\n  remove,\n  removeAll,\n  findByLocation\n};","map":{"version":3,"sources":["/Users/christopherlijoodi/Desktop/CITYPARK/src/service/ParkingLotService.js"],"names":["http","getAll","get","parkinglocation","create","data","post","updateAlt","id","put","update","remove","delete","removeAll","findByLocation","location"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,SAAOD,IAAI,CAACE,GAAL,CAAS,MAAT,CAAP;AACH,CAFD;;AAIA,MAAMA,GAAG,GAAGC,eAAe,IAAI;AAC3B,SAAOH,IAAI,CAACE,GAAL,CAAU,QAAOC,eAAgB,EAAjC,CAAP;AACH,CAFD;;AAIA,MAAMC,MAAM,GAAGC,IAAI,IAAI;AACnB,SAAOL,IAAI,CAACM,IAAL,CAAU,OAAV,EAAmBD,IAAnB,CAAP;AACH,CAFD;;AAIA,MAAME,SAAS,GAAG,CAACC,EAAD,EAAKH,IAAL,KAAc;AAC5B,SAAOL,IAAI,CAACS,GAAL,CAAU,WAAUD,EAAG,EAAvB,EAA0BH,IAA1B,CAAP;AACH,CAFD;;AAIA,MAAMK,MAAM,GAAIL,IAAD,IAAU;AACrB,SAAOL,IAAI,CAACS,GAAL,CAAU,SAAV,EAAoBJ,IAApB,CAAP;AACH,CAFD;;AAIA,MAAMM,MAAM,GAAGH,EAAE,IAAI;AACjB,SAAOR,IAAI,CAACY,MAAL,CAAa,IAAGJ,EAAG,EAAnB,CAAP;AACH,CAFD;;AAIA,MAAMK,SAAS,GAAG,MAAM;AACpB,SAAOb,IAAI,CAACY,MAAL,CAAa,MAAb,CAAP;AACH,CAFD;;AAIA,MAAME,cAAc,GAAGC,QAAQ,IAAI;AAC/B,SAAOf,IAAI,CAACE,GAAL,CAAU,wBAAuBa,QAAS,EAA1C,CAAP;AACH,CAFD;;AAIA,eAAe;AACXd,EAAAA,MADW;AAEXC,EAAAA,GAFW;AAGXE,EAAAA,MAHW;AAIXM,EAAAA,MAJW;AAKXC,EAAAA,MALW;AAMXE,EAAAA,SANW;AAOXC,EAAAA;AAPW,CAAf","sourcesContent":["import http from \"./http-common\"\n\nconst getAll = () => {\n    return http.get(\"/all\");\n};\n\nconst get = parkinglocation => {\n    return http.get(`/get/${parkinglocation}`);\n};\n\nconst create = data => {\n    return http.post(\"/save\", data);\n};\n\nconst updateAlt = (id, data) => {\n    return http.put(`/update/${id}`, data);\n};\n\nconst update = (data) => {\n    return http.put(`/update`, data);\n};\n\nconst remove = id => {\n    return http.delete(`/${id}`);\n};\n\nconst removeAll = () => {\n    return http.delete(`/all`);\n};\n\nconst findByLocation = location => {\n    return http.get(`/get?parkinglocation=${location}`);\n};\n\nexport default {\n    getAll,\n    get,\n    create,\n    update,\n    remove,\n    removeAll,\n    findByLocation\n};"]},"metadata":{},"sourceType":"module"}