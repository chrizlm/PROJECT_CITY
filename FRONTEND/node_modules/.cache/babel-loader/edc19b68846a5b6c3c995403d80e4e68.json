{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/UseTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Table, TableCell, TableHead, TableRow, TablePagination } from '@mui/material';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport { makeStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    marginTop: '24px',\n    '& thread th': '600'\n  },\n  '& tbody td': {\n    fontWeight: '300'\n  },\n  '& tbody tr:hover': {\n    cursor: 'pointer'\n  }\n});\nexport default function UseTable(repo, headcells, filterFn) {\n  _s();\n\n  const pages = [5, 10, 25];\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(pages[page]);\n  const [order, setOrder] = useState();\n  const [orderBy, setOrderBy] = useState();\n  const classes = useStyles();\n\n  const TablContainer = props => /*#__PURE__*/_jsxDEV(Table, {\n    className: classes.table,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n\n  const TablHead = props => {\n    const handleSortRequest = cellId => {\n      const isAsc = orderBy === cellId && order === \"asc\";\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(cellId);\n    };\n\n    return /*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(TableRow, {\n        children: headcells.map(headcell => /*#__PURE__*/_jsxDEV(TableCell, {\n          sortDirection: orderBy === headcell.id ? order : false,\n          children: headcell.disableSorting ? headcell.label : /*#__PURE__*/_jsxDEV(TableSortLabel, {\n            active: orderBy === headcell.id,\n            direction: orderBy === headcell.id ? order : 'asc',\n            onClick: () => {\n              handleSortRequest(headcell.id);\n            },\n            children: headcells.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)\n        }, headcell.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const TblPagination = () => /*#__PURE__*/_jsxDEV(TablePagination, {\n    component: \"div\",\n    page: page,\n    rowsPerPageOption: pages,\n    rowsPerPage: rowsPerPage,\n    count: repo.length,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 33\n  }, this);\n\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n  }\n\n  function getComparator(order, orderBy) {\n    return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n\n    if (b[orderBy > a[orderBy]]) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  const recordsAfterPagingAndSorting = () => {\n    return stableSort(filterFn.fn(repo), getComparator(order, orderBy)).slice(page * rowsPerPage, (page + 1) * rowsPerPage);\n  };\n\n  return {\n    TablContainer,\n    TablHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  };\n}\n\n_s(UseTable, \"4ISAdEbjldDP2SSnSieojjuDDUw=\", false, function () {\n  return [useStyles];\n});\n\n_c = UseTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseTable\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Desktop/CITYPARK/src/components/UseTable.js"],"names":["React","useState","Table","TableCell","TableHead","TableRow","TablePagination","TableSortLabel","makeStyles","useStyles","table","marginTop","fontWeight","cursor","UseTable","repo","headcells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","classes","TablContainer","props","children","TablHead","handleSortRequest","cellId","isAsc","map","headcell","id","disableSorting","label","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","TblPagination","length","stableSort","array","comparator","stabilizedThis","el","index","sort","a","b","getComparator","descendingComparator","recordsAfterPagingAndSorting","fn","slice"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Table, TableCell, TableHead, TableRow, TablePagination} from '@mui/material'\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n    table:{\n        marginTop: '24px',\n        '& thread th' : '600'\n    },\n    '& tbody td' : {\n        fontWeight:'300'\n    },\n    '& tbody tr:hover':{\n        cursor: 'pointer'\n    }\n})\n\n\nexport default function UseTable(repo, headcells, filterFn){\n\n    const pages =[5, 10, 25]\n    const [page, setPage ] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page])\n    const [order, setOrder] = useState();\n    const [orderBy, setOrderBy] = useState();\n\n    const classes = useStyles();\n\n    const TablContainer = props =>(\n        <Table className = {classes.table}> \n            {props.children}\n        </Table>\n    )\n\n    const TablHead = props =>{\n        const handleSortRequest = cellId =>{\n            const isAsc = orderBy === cellId && order === \"asc\";\n            setOrder(isAsc ? 'desc' : 'asc');\n            setOrderBy(cellId)\n        }\n        return(\n            <TableHead>\n                <TableRow>\n                    {\n                        headcells.map(headcell =>(\n                            <TableCell key={headcell.id}\n                            sortDirection={orderBy === headcell.id ? order: false}>\n                                {headcell.disableSorting?headcell.label:\n                                <TableSortLabel\n                                active={orderBy === headcell.id}\n                                direction={orderBy === headcell.id ? order : 'asc'}\n                                onClick={() => {handleSortRequest(headcell.id)}}>\n                                    {headcells.label}\n                                    </TableSortLabel>}\n                            </TableCell>\n                        ))\n                    }\n                </TableRow>\n            </TableHead>\n        )\n    }\n\n    const handleChangePage = (event, newPage) =>{\n        setPage(newPage);\n    }\n\n    const handleChangeRowsPerPage = (event) =>{\n        setRowsPerPage(parseInt(event.target.value, 10))\n        setPage(0)\n    }\n\n    const TblPagination = () =>(<TablePagination \n        component=\"div\"\n        page = {page}\n        rowsPerPageOption = {pages}\n        rowsPerPage={rowsPerPage}\n        count={repo.length}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage = {handleChangeRowsPerPage}\n        />)\n\n    function stableSort(array, comparator){\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a,b) => {\n            const order = comparator(a[0], b[0]);\n            if(order !==0) return order;\n            return a[1]-b[1];\n        });\n        return stabilizedThis.map((el) => el[0]);\n    }\n\n    function getComparator(order, orderBy){\n        return order === 'desc'\n        ? (a, b) => descendingComparator(a,b, orderBy)\n        : (a, b) => -descendingComparator(a,b, orderBy);\n    }\n\n    function descendingComparator(a,b, orderBy){\n        if(b[orderBy] < a[orderBy]){\n            return -1;\n        }\n        if(b[orderBy > a[orderBy]]){\n            return 1;\n        }\n        return 0;\n    }\n\n    const recordsAfterPagingAndSorting = () =>{\n        return stableSort(filterFn.fn(repo), getComparator(order, orderBy)).slice(page*rowsPerPage,(page+1)*rowsPerPage)\n    }\n\n    return {\n        TablContainer,\n        TablHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    }\n}"]},"metadata":{},"sourceType":"module"}