{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/Support.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from \"@mui/styles\";\nimport { Box, Button, Grid, Paper } from '@mui/material';\nimport Controls from \"../components/controls/Controls\";\nimport { Form } from \"../components/UseForm\";\nimport * as SockJS from 'sockjs-client';\nimport * as Stomp from 'stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  pageContent: {\n    margin: \"40px\",\n    padding: \"24px\"\n  }\n});\nconst initialFieldValues = {\n  type: \"\",\n  content: \"\",\n  sender: \"\"\n};\nexport default function Support() {\n  _s();\n\n  const [messageDetail, setMessageDetail] = useState(initialFieldValues);\n  const [stompClient, setStompClient] = useState(null);\n  useEffect(() => {\n    connection();\n  }, []);\n\n  const connection = event => {\n    var socket = new SockJS('http://localhost:8080/ws');\n    let setStompClient = Stomp.over(socket);\n    stompClient.connect({}, onConnected);\n  };\n\n  const onConnected = () => {\n    stompClient.subscribe('http://localhost:8080/topic/public', onMessageReceived);\n    stompClient.send(\"http://localhost:8080/app/chat.addUser\", {}, JSON.stringify({\n      sender: \"userA\",\n      type: 'JOIN'\n    }));\n  };\n\n  const handleSubmitMessage = event => {\n    event.preventDefault();\n    const data = {\n      type: messageDetail.type,\n      content: messageDetail.content,\n      sender: messageDetail.sender\n    };\n    stompClient.send(\"http://localhost:8080/app/chat.sendMessage\", {}, JSON.stringify(data));\n  };\n\n  const onMessageReceived = messagePayload => {\n    var message = JSON.parse(messagePayload.body);\n\n    if (message.type === 'JOIN') {\n      message.content = message.sender + ' joined!';\n    } else if (message.type === 'LEAVE') {\n      message.content = message.sender + ' left!';\n    }\n\n    var messageText = document.createTextNode(message.content);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messageText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setMessageDetail({ ...messageDetail,\n      [name]: value\n    });\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Support\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > :not(style)': {\n          m: 1,\n          width: '100%',\n          height: '100%'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: onMessageReceived\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmitMessage,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n                variant: \"outlined\",\n                label: \"Type Message\",\n                name: \"content\",\n                value: messageDetail.content,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                fullWidth: true,\n                onClick: handleSubmitMessage,\n                children: \"SEND\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Support, \"t15nJ+ThHXuicdCX7ilsVRJbtX0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Support;\n\nvar _c;\n\n$RefreshReg$(_c, \"Support\");","map":{"version":3,"sources":["/Users/christopherlijoodi/Documents/CITY_PARKING_PROJECT/FRONTEND/src/pages/Support.js"],"names":["React","useEffect","useState","makeStyles","Box","Button","Grid","Paper","Controls","Form","SockJS","Stomp","useStyles","pageContent","margin","padding","initialFieldValues","type","content","sender","Support","messageDetail","setMessageDetail","stompClient","setStompClient","connection","event","socket","over","connect","onConnected","subscribe","onMessageReceived","send","JSON","stringify","handleSubmitMessage","preventDefault","data","messagePayload","message","parse","body","messageText","document","createTextNode","handleInputChange","e","name","value","target","classes","display","flexWrap","m","width","height"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {makeStyles} from \"@mui/styles\";\nimport {Box, Button, Grid, Paper} from '@mui/material';\nimport Controls from \"../components/controls/Controls\";\nimport {Form} from \"../components/UseForm\";\nimport * as SockJS from 'sockjs-client';\nimport * as Stomp from 'stompjs';\n\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\n\nconst initialFieldValues = {\n    type: \"\",\n    content: \"\",\n    sender: \"\",\n};\n\n\nexport default function Support() {\n    const [messageDetail, setMessageDetail] =useState(initialFieldValues);\n    const [stompClient, setStompClient] = useState(null);\n\n\n    useEffect(() =>{\n        connection();\n    }, []);\n\n    const connection = (event) =>{\n        var socket = new SockJS('http://localhost:8080/ws');\n        let setStompClient = Stomp.over(socket);\n\n        stompClient.connect({}, onConnected)\n    }\n\n    const onConnected = () =>{\n        stompClient.subscribe('http://localhost:8080/topic/public', onMessageReceived);\n        stompClient.send(\n            \"http://localhost:8080/app/chat.addUser\",\n            {},\n            JSON.stringify({sender: \"userA\", type: 'JOIN'})\n        )\n    }\n\n    const handleSubmitMessage = (event) =>{\n        event.preventDefault();\n\n        const data = {\n            type: messageDetail.type,\n            content: messageDetail.content,\n            sender: messageDetail.sender,\n        }\n\n        stompClient.send(\"http://localhost:8080/app/chat.sendMessage\", {}, JSON.stringify(data));\n\n    };\n\n    const onMessageReceived =(messagePayload) =>{\n        var message = JSON.parse(messagePayload.body);\n        if(message.type === 'JOIN') {\n            message.content = message.sender + ' joined!';\n        } else if (message.type === 'LEAVE') {\n            message.content = message.sender + ' left!';\n        }\n\n\n        var messageText = document.createTextNode(message.content);\n        return(\n            <div>{messageText}</div>\n        )\n    }\n\n\n    const handleInputChange = e =>{\n\n        const {name, value} = e.target\n        setMessageDetail({\n            ...messageDetail,\n            [name]: value,\n        })\n    }\n\n    const classes = useStyles();\n    return (\n        <>\n            <div>\n                <h1>Support</h1>\n            </div>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                   <ul>\n                       {onMessageReceived}\n                   </ul>\n\n                    <Form onSubmit={handleSubmitMessage}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Type Message\"\n                                    name=\"content\"\n                                    value={messageDetail.content}\n                                    onChange={handleInputChange}\n                                />\n                                <Button variant=\"contained\"\n                                        fullWidth\n                                        onClick={handleSubmitMessage}\n                                >SEND</Button>\n                            </Grid>\n                        </Grid>\n                    </Form>\n                </Paper>\n            </Box>\n        </>\n\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}